/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e,t,n={3013:(e,t,n)=>{"use strict";var r=n(3935),o=n(7294);function a(e,t){return(a=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function i(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,a(e,t)}n(4336);var l=n(5697),u=n.n(l);function c(){return(c=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function s(e){return"/"===e.charAt(0)}function f(e,t){for(var n=t,r=n+1,o=e.length;r<o;n+=1,r+=1)e[n]=e[r];e.pop()}const d=function(e,t){if(!e)throw new Error("Invariant failed")};function p(e){return"/"===e.charAt(0)?e:"/"+e}function h(e,t){return function(e,t){return 0===e.toLowerCase().indexOf(t.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(t.length))}(e,t)?e.substr(t.length):e}function m(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function v(e){var t=e.pathname,n=e.search,r=e.hash,o=t||"/";return n&&"?"!==n&&(o+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(o+="#"===r.charAt(0)?r:"#"+r),o}function y(e,t,n,r){var o;"string"==typeof e?(o=function(e){var t=e||"/",n="",r="",o=t.indexOf("#");-1!==o&&(r=t.substr(o),t=t.substr(0,o));var a=t.indexOf("?");return-1!==a&&(n=t.substr(a),t=t.substr(0,a)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e)).state=t:(void 0===(o=c({},e)).pathname&&(o.pathname=""),o.search?"?"!==o.search.charAt(0)&&(o.search="?"+o.search):o.search="",o.hash?"#"!==o.hash.charAt(0)&&(o.hash="#"+o.hash):o.hash="",void 0!==t&&void 0===o.state&&(o.state=t));try{o.pathname=decodeURI(o.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+o.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(o.key=n),r?o.pathname?"/"!==o.pathname.charAt(0)&&(o.pathname=function(e,t){void 0===t&&(t="");var n,r=e&&e.split("/")||[],o=t&&t.split("/")||[],a=e&&s(e),i=t&&s(t),l=a||i;if(e&&s(e)?o=r:r.length&&(o.pop(),o=o.concat(r)),!o.length)return"/";if(o.length){var u=o[o.length-1];n="."===u||".."===u||""===u}else n=!1;for(var c=0,d=o.length;d>=0;d--){var p=o[d];"."===p?f(o,d):".."===p?(f(o,d),c++):c&&(f(o,d),c--)}if(!l)for(;c--;c)o.unshift("..");!l||""===o[0]||o[0]&&s(o[0])||o.unshift("");var h=o.join("/");return n&&"/"!==h.substr(-1)&&(h+="/"),h}(o.pathname,r.pathname)):o.pathname=r.pathname:o.pathname||(o.pathname="/"),o}function g(){var e=null,t=[];return{setPrompt:function(t){return e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,o){if(null!=e){var a="function"==typeof e?e(t,n):e;"string"==typeof a?"function"==typeof r?r(a,o):o(!0):o(!1!==a)}else o(!0)},appendListener:function(e){var n=!0;function r(){n&&e.apply(void 0,arguments)}return t.push(r),function(){n=!1,t=t.filter((function(e){return e!==r}))}},notifyListeners:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach((function(e){return e.apply(void 0,n)}))}}}var b=!("undefined"==typeof window||!window.document||!window.document.createElement);function w(e,t){t(window.confirm(e))}var k="popstate",E="hashchange";function x(){try{return window.history.state||{}}catch(e){return{}}}function S(e){void 0===e&&(e={}),b||d(!1);var t,n=window.history,r=(-1===(t=window.navigator.userAgent).indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,o=!(-1===window.navigator.userAgent.indexOf("Trident")),a=e,i=a.forceRefresh,l=void 0!==i&&i,u=a.getUserConfirmation,s=void 0===u?w:u,f=a.keyLength,S=void 0===f?6:f,A=e.basename?m(p(e.basename)):"";function C(e){var t=e||{},n=t.key,r=t.state,o=window.location,a=o.pathname+o.search+o.hash;return A&&(a=h(a,A)),y(a,r,n)}function _(){return Math.random().toString(36).substr(2,S)}var T=g();function O(e){c($,e),$.length=n.length,T.notifyListeners($.location,$.action)}function P(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||I(C(e.state))}function N(){I(C(x()))}var L=!1;function I(e){L?(L=!1,O()):T.confirmTransitionTo(e,"POP",s,(function(t){t?O({action:"POP",location:e}):function(e){var t=$.location,n=j.indexOf(t.key);-1===n&&(n=0);var r=j.indexOf(e.key);-1===r&&(r=0);var o=n-r;o&&(L=!0,M(o))}(e)}))}var R=C(x()),j=[R.key];function F(e){return A+v(e)}function M(e){n.go(e)}var z=0;function D(e){1===(z+=e)&&1===e?(window.addEventListener(k,P),o&&window.addEventListener(E,N)):0===z&&(window.removeEventListener(k,P),o&&window.removeEventListener(E,N))}var U=!1,$={length:n.length,action:"POP",location:R,createHref:F,push:function(e,t){var o="PUSH",a=y(e,t,_(),$.location);T.confirmTransitionTo(a,o,s,(function(e){if(e){var t=F(a),i=a.key,u=a.state;if(r)if(n.pushState({key:i,state:u},null,t),l)window.location.href=t;else{var c=j.indexOf($.location.key),s=j.slice(0,c+1);s.push(a.key),j=s,O({action:o,location:a})}else window.location.href=t}}))},replace:function(e,t){var o="REPLACE",a=y(e,t,_(),$.location);T.confirmTransitionTo(a,o,s,(function(e){if(e){var t=F(a),i=a.key,u=a.state;if(r)if(n.replaceState({key:i,state:u},null,t),l)window.location.replace(t);else{var c=j.indexOf($.location.key);-1!==c&&(j[c]=a.key),O({action:o,location:a})}else window.location.replace(t)}}))},go:M,goBack:function(){M(-1)},goForward:function(){M(1)},block:function(e){void 0===e&&(e=!1);var t=T.setPrompt(e);return U||(D(1),U=!0),function(){return U&&(U=!1,D(-1)),t()}},listen:function(e){var t=T.appendListener(e);return D(1),function(){D(-1),t()}}};return $}var A=1073741823,C="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==n.g?n.g:{};function _(e){var t=[];return{on:function(e){t.push(e)},off:function(e){t=t.filter((function(t){return t!==e}))},get:function(){return e},set:function(n,r){e=n,t.forEach((function(t){return t(e,r)}))}}}const T=o.createContext||function(e,t){var n,r,a,l="__create-react-context-"+((C[a="__global_unique_id__"]=(C[a]||0)+1)+"__"),c=function(e){function n(){var t;return(t=e.apply(this,arguments)||this).emitter=_(t.props.value),t}i(n,e);var r=n.prototype;return r.getChildContext=function(){var e;return(e={})[l]=this.emitter,e},r.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var n,r=this.props.value,o=e.value;((a=r)===(i=o)?0!==a||1/a==1/i:a!=a&&i!=i)?n=0:(n="function"==typeof t?t(r,o):A,0!=(n|=0)&&this.emitter.set(e.value,n))}var a,i},r.render=function(){return this.props.children},n}(o.Component);c.childContextTypes=((n={})[l]=u().object.isRequired,n);var s=function(t){function n(){var e;return(e=t.apply(this,arguments)||this).state={value:e.getValue()},e.onUpdate=function(t,n){0!=((0|e.observedBits)&n)&&e.setState({value:e.getValue()})},e}i(n,t);var r=n.prototype;return r.componentWillReceiveProps=function(e){var t=e.observedBits;this.observedBits=null==t?A:t},r.componentDidMount=function(){this.context[l]&&this.context[l].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?A:e},r.componentWillUnmount=function(){this.context[l]&&this.context[l].off(this.onUpdate)},r.getValue=function(){return this.context[l]?this.context[l].get():e},r.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},n}(o.Component);return s.contextTypes=((r={})[l]=u().object,r),{Provider:c,Consumer:s}};var O=n(9658),P=n.n(O);function N(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}n(9864),n(8679);var L=function(e){var t=T();return t.displayName="Router-History",t}(),I=function(e){var t=T();return t.displayName="Router",t}(),R=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={location:t.history.location},n._isMounted=!1,n._pendingLocation=null,t.staticContext||(n.unlisten=t.history.listen((function(e){n._isMounted?n.setState({location:e}):n._pendingLocation=e}))),n}i(t,e),t.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var n=t.prototype;return n.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},n.componentWillUnmount=function(){this.unlisten&&this.unlisten()},n.render=function(){return o.createElement(I.Provider,{value:{history:this.props.history,location:this.state.location,match:t.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}},o.createElement(L.Provider,{children:this.props.children||null,value:this.props.history}))},t}(o.Component);o.Component,o.Component;var j={},F=0;function M(e,t){void 0===t&&(t={}),("string"==typeof t||Array.isArray(t))&&(t={path:t});var n=t,r=n.path,o=n.exact,a=void 0!==o&&o,i=n.strict,l=void 0!==i&&i,u=n.sensitive,c=void 0!==u&&u;return[].concat(r).reduce((function(t,n){if(!n&&""!==n)return null;if(t)return t;var r=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=j[n]||(j[n]={});if(r[e])return r[e];var o=[],a={regexp:P()(e,o,t),keys:o};return F<1e4&&(r[e]=a,F++),a}(n,{end:a,strict:l,sensitive:c}),o=r.regexp,i=r.keys,u=o.exec(e);if(!u)return null;var s=u[0],f=u.slice(1),d=e===s;return a&&!d?null:{path:n,url:"/"===n&&""===s?"/":s,isExact:d,params:i.reduce((function(e,t,n){return e[t.name]=f[n],e}),{})}}),null)}var z=function(e){function t(){return e.apply(this,arguments)||this}return i(t,e),t.prototype.render=function(){var e=this;return o.createElement(I.Consumer,null,(function(t){t||d(!1);var n=e.props.location||t.location,r=c({},t,{location:n,match:e.props.computedMatch?e.props.computedMatch:e.props.path?M(n.pathname,e.props):t.match}),a=e.props,i=a.children,l=a.component,u=a.render;return Array.isArray(i)&&0===i.length&&(i=null),o.createElement(I.Provider,{value:r},r.match?i?"function"==typeof i?i(r):i:l?o.createElement(l,r):u?u(r):null:"function"==typeof i?i(r):null)}))},t}(o.Component);o.Component,o.Component,o.useContext;var D=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).history=S(t.props),t}return i(t,e),t.prototype.render=function(){return o.createElement(R,{history:this.history,children:this.props.children})},t}(o.Component);o.Component;var U=function(e,t){return"function"==typeof e?e(t):e},$=function(e,t){return"string"==typeof e?y(e,null,null,t):e},B=function(e){return e},H=o.forwardRef;void 0===H&&(H=B);var V=H((function(e,t){var n=e.innerRef,r=e.navigate,a=e.onClick,i=N(e,["innerRef","navigate","onClick"]),l=i.target,u=c({},i,{onClick:function(e){try{a&&a(e)}catch(t){throw e.preventDefault(),t}e.defaultPrevented||0!==e.button||l&&"_self"!==l||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),r())}});return u.ref=B!==H&&t||n,o.createElement("a",u)})),W=H((function(e,t){var n=e.component,r=void 0===n?V:n,a=e.replace,i=e.to,l=e.innerRef,u=N(e,["component","replace","to","innerRef"]);return o.createElement(I.Consumer,null,(function(e){e||d(!1);var n=e.history,s=$(U(i,e.location),e.location),f=s?n.createHref(s):"",p=c({},u,{href:f,navigate:function(){var t=U(i,e.location);(a?n.replace:n.push)(t)}});return B!==H?p.ref=t||l:p.innerRef=l,o.createElement(r,p)}))})),Q=function(e){return e},q=o.forwardRef;void 0===q&&(q=Q),q((function(e,t){var n=e["aria-current"],r=void 0===n?"page":n,a=e.activeClassName,i=void 0===a?"active":a,l=e.activeStyle,u=e.className,s=e.exact,f=e.isActive,p=e.location,h=e.sensitive,m=e.strict,v=e.style,y=e.to,g=e.innerRef,b=N(e,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","sensitive","strict","style","to","innerRef"]);return o.createElement(I.Consumer,null,(function(e){e||d(!1);var n=p||e.location,a=$(U(y,n),n),w=a.pathname,k=w&&w.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),E=k?M(n.pathname,{path:k,exact:s,sensitive:h,strict:m}):null,x=!!(f?f(E,n):E),S=x?function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter((function(e){return e})).join(" ")}(u,i):u,A=x?c({},v,{},l):v,C=c({"aria-current":x&&r||null,className:S,style:A,to:a},b);return Q!==q?C.ref=t||g:C.innerRef=g,o.createElement(W,C)}))})),n(1822);var K,Y=function(e,t){for(var n=0,r=t.length,o=e.length;n<r;n++,o++)e[o]=t[n];return e},J=function(e){this.Title="",this.ifFinished=!1,this.Memo="",this.AttachedFiles=[],this.OtherParticipants=[],this.EmergyLeval="Low",this.Title=e.Title,this.Person=e.Person,this.ExpireTime=e.ExpireTime,this.Memo=e.Memo?e.Memo:this.Memo,this.AttachedFiles=e.AttachedFiles?Y([],e.AttachedFiles):this.AttachedFiles,this.OtherParticipants=e.OtherParticipants?Y([],e.OtherParticipants):this.OtherParticipants,this.EmergyLeval=e.EmergyLeval?e.EmergyLeval:this.EmergyLeval};!function(e){e[e["星期一"]=0]="星期一",e[e["星期二"]=1]="星期二",e[e["星期三"]=2]="星期三",e[e["星期四"]=3]="星期四",e[e["星期五"]=4]="星期五",e[e["星期六"]=5]="星期六",e[e["星期日"]=6]="星期日"}(K||(K={}));n(8838),n(8132),n(8837),n(9730),n(9371);var X,G=n(7563),Z=(n(4286),X=function(e,t){return(X=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function n(){this.constructor=e}X(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),ee="rgb(109,121,123)";const te=function(e){function t(t){return e.call(this,t)||this}return Z(t,e),t.prototype.handleBtnClickItemFinished=function(){this.props.freshTasksList(this.props.item)},t.prototype.calculateDateText=function(){var e=this.props.item.ExpireTime;switch(this.props.description){case"已逾期":case"未来七天":return K[e.getDay()]+"  截止";case"以后":return e.getMonth()+"月"+e.getDate()+"日  截止"}return""},t.prototype.calculateTextColor=function(){return"已逾期"==this.props.description?"rgb(213,122,107)":ee},t.prototype.render=function(){return o.createElement("div",{className:"relative-position todo-content-box"},o.createElement(W,{to:"/editItem?"+G.stringify(this.props.item)},o.createElement("div",{style:{height:"80px"}},o.createElement("span",{style:{color:"rgb(98, 151, 204)"}},this.props.item.Person.Name),o.createElement("span",{style:{color:ee}},this.props.item.Title),o.createElement("span",{className:"absolute-position",style:{color:this.calculateTextColor(),right:"10px",top:"5px"}},this.calculateDateText()))),o.createElement("button",{disabled:this.props.item.ifFinished,className:(this.props.item.ifFinished?"button-styleok":"button-style")+" absolute-position",style:{right:"10px",bottom:"10px"},onClick:this.handleBtnClickItemFinished.bind(this)},"完成"))},t}(o.Component),ne=n.p+"images/right_afcf3c905679aca21abd4a3f1862082a.png",re=n.p+"images/down_4ce7b324c015b595d16260e34d9f4765.png";var oe=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();const ae=function(e){function t(t){var n=e.call(this,t)||this;return n.ifshowList=!1,n.Icon=ne,n}return oe(t,e),t.prototype.handleItemFinished=function(e){},t.prototype.handleClickHide=function(){this.Icon=this.Icon==re?ne:re,this.ifshowList=!this.ifshowList},t.prototype.freshTasksList=function(e){this.props.freshTasksList(e)},t.prototype.render=function(){var e=this;return o.createElement(o.Fragment,null,o.createElement("div",{onClick:this.handleClickHide.bind(this)},o.createElement("img",{className:"icon",src:this.Icon,alt:"down"}),o.createElement("b",null,this.props.description)),o.createElement("div",{className:this.ifshowList?"show":"hide"},this.props.list.map((function(t){return o.createElement(te,{description:e.props.description,key:t.Title,item:t,freshTasksList:e.freshTasksList.bind(e)})}))))},t}(o.Component),ie=n.p+"images/add_89c7714c7e1453bb31b8af591a98a020.png";var le=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();const ue=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.timer=null,t.state={TasksList:[],currentTime:Date.now()},t}return le(t,e),t.prototype.componentDidMount=function(){var e=this;this.setState({TasksList:this.props.TasksList.filter((function(e){return!e.ifFinished}))}),this.timer=setInterval((function(){e.setState({currentTime:Date.now()})}),1)},t.prototype.componentWillUnmount=function(){clearInterval(this.timer)},t.prototype.getExpireTasks=function(){var e=this.state.currentTime;return this.state.TasksList.filter((function(t){return t.ExpireTime.getTime()<e}))},t.prototype.getIn7DaysTasks=function(){var e=this.state.currentTime;return this.state.TasksList.filter((function(t){return t.ExpireTime.getTime()<=e+6048e5&&t.ExpireTime.getTime()>=e}))},t.prototype.getFutureComingTask=function(){var e=this.state.currentTime;return this.state.TasksList.filter((function(t){return t.ExpireTime.getTime()>e+6048e5}))},t.prototype.freshTasksList=function(e){this.props.freshTasksList(e)},t.prototype.render=function(){return o.createElement(o.Fragment,null,o.createElement(ae,{description:"已逾期",list:this.getExpireTasks(),freshTasksList:this.freshTasksList.bind(this)}),o.createElement(ae,{description:"未来七天",list:this.getIn7DaysTasks(),freshTasksList:this.freshTasksList.bind(this)}),o.createElement(ae,{description:"以后",list:this.getFutureComingTask(),freshTasksList:this.freshTasksList.bind(this)}),o.createElement("div",{className:"inline-center"},o.createElement(W,{to:"/VisitFinished"},"已处理的待办 >")),o.createElement(W,{to:"/VisitFinished"},o.createElement("img",{className:"add-btnicon",src:ie,alt:"Add TodoItem"})))},t}(o.Component),ce=n.p+"images/back_dcb16faaded2301508de61f5a3d2307d.png";var se=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();const fe=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.state={TasksList:[]},t}return se(t,e),t.prototype.componentDidMount=function(){this.setState({TasksList:this.props.TasksList.filter((function(e){return e.ifFinished}))})},t.prototype.render=function(){return o.createElement(o.Fragment,null,o.createElement(W,{to:"/"},o.createElement("img",{src:ce,className:"icon",alt:"back"})," Back"),this.state.TasksList.map((function(e){return o.createElement(te,{key:e.Title,description:"已完成",item:e})})))},t}(o.Component);n(5115),n(110),n(6142);const de=n.p+"images/person_a8a3af54f8182de617987207443b1634.png",pe=n.p+"images/priority-high_8cafd70868ae7800e75d1c1f99e62b2a.png",he=n.p+"images/participants_87e416a63d12b3eb67057238280c7b4f.png",me=n.p+"images/memo_5e5562bafd31461dd381cb3e54bf81cb.png",ve=n.p+"images/clock_375c2cd996626b4f2906cb105573ae7f.png";var ye=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),ge=function(){return(ge=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};const be=function(e){function t(t){var n=e.call(this,t)||this;return n.target=void 0,n.index=-1,n.props.TasksList.forEach((function(e,t){G.stringify(e)==globalThis.location.search.slice(1)&&(n.target=n.props.TasksList[t],n.index=t)})),n}return ye(t,e),t.prototype.componentDidMount=function(){this.setState(ge({},this.target))},t.prototype.componentWillUnmount=function(){this.props.handleRefreshTasksList(this.index,ge({},this.state))},t.prototype.render=function(){var e=this;return this.state&&o.createElement(o.Fragment,null,o.createElement(W,{to:"/"},o.createElement("img",{src:ce,className:"icon",alt:"back"})," Back"),o.createElement("div",{className:"edit-block"},o.createElement("div",{className:"item"},o.createElement("h1",null,o.createElement("input",{type:"checkbox",checked:this.state.ifFinished,onChange:function(t){console.log(t.target.value),e.setState({ifFinished:t.target.checked})}}),this.state.Title)),o.createElement("div",{className:"item"},o.createElement("img",{src:de,alt:"personIcon"}),"执行人: ",o.createElement("input",{type:"text",value:this.state.Person.Name})),o.createElement("div",{className:"item"},o.createElement("img",{src:ve,alt:"clockIcon"}),this.state.ExpireTime.toLocaleDateString()+"截止"),o.createElement("div",{className:"item"},o.createElement("img",{src:me,alt:"memoIcon"}),"备注:",o.createElement("input",{type:"text",value:this.state.Memo,placeholder:"点此添加备注",onChange:function(t){e.setState({Memo:t.target.value})}})),o.createElement("div",{className:"item"},o.createElement("img",{src:pe,alt:"priorityIcon"}),o.createElement("select",{name:"priority",value:this.state.EmergyLeval,onChange:function(t){e.setState({EmergyLeval:t.target.value})}},o.createElement("option",{value:"Low"},"较低"),o.createElement("option",{value:"Normal"},"普通"),o.createElement("option",{value:"Urgent"},"紧急"),o.createElement("option",{value:"ExtremeUrgent"},"非常紧急"))),o.createElement("div",{className:"item"},o.createElement("img",{src:he,alt:"participantIcon"}),"参与人:",o.createElement("span",null,this.state.Person.Name))))},t}(o.Component);var we=function(e,t){for(var n=0,r=t.length,o=e.length;n<r;n++,o++)e[o]=t[n];return e};const ke=function(){var e=(0,o.useState)([]),t=e[0],n=e[1];return(0,o.useEffect)((function(){var e,t;n(((e=[]).push(new J({Title:"Task1",Person:t={Name:"顾承（我）",Id:"00001"},ExpireTime:new Date(Date.now()+864e5)})),e.push(new J({Title:"Task2",Person:t,ExpireTime:new Date(Date.now()+1728e5),Memo:"Must do it"})),e.push(new J({Title:"Task3",Person:t,ExpireTime:new Date(Date.now()+864e6),Memo:"Must do it"})),e))}),[]),o.createElement(D,null,o.createElement(z,{path:"/",exact:!0,component:function(){return o.createElement(ue,{TasksList:t,freshTasksList:function(e){!function(e){var r=we([],t);t.forEach((function(t,n){t===e&&(r[n].ifFinished=!0)})),n(r)}(e)}})}}),o.createElement(z,{path:"/VisitFinished",render:function(){return o.createElement(fe,{TasksList:t})}}),o.createElement(z,{path:"/editItem",render:function(){return o.createElement(be,{TasksList:t,handleRefreshTasksList:function(e,r){if(-1!=e){var o=we([],t);o[e]=r,n(o),console.dir(t)}}})}}))};r.render(o.createElement(ke,null),document.querySelector("#app"))},4963:e=>{e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},7007:(e,t,n)=>{var r=n(5286);e.exports=function(e){if(!r(e))throw TypeError(e+" is not an object!");return e}},9315:(e,t,n)=>{var r=n(2110),o=n(875),a=n(2337);e.exports=function(e){return function(t,n,i){var l,u=r(t),c=o(u.length),s=a(i,c);if(e&&n!=n){for(;c>s;)if((l=u[s++])!=l)return!0}else for(;c>s;s++)if((e||s in u)&&u[s]===n)return e||s||0;return!e&&-1}}},50:(e,t,n)=>{var r=n(741),o=n(9797),a=n(508),i=n(875),l=n(6886);e.exports=function(e,t){var n=1==e,u=2==e,c=3==e,s=4==e,f=6==e,d=5==e||f,p=t||l;return function(t,l,h){for(var m,v,y=a(t),g=o(y),b=r(l,h,3),w=i(g.length),k=0,E=n?p(t,w):u?p(t,0):void 0;w>k;k++)if((d||k in g)&&(v=b(m=g[k],k,y),e))if(n)E[k]=v;else if(v)switch(e){case 3:return!0;case 5:return m;case 6:return k;case 2:E.push(m)}else if(s)return!1;return f?-1:c||s?s:E}}},2736:(e,t,n)=>{var r=n(5286),o=n(4302),a=n(6314)("species");e.exports=function(e){var t;return o(e)&&("function"!=typeof(t=e.constructor)||t!==Array&&!o(t.prototype)||(t=void 0),r(t)&&null===(t=t[a])&&(t=void 0)),void 0===t?Array:t}},6886:(e,t,n)=>{var r=n(2736);e.exports=function(e,t){return new(r(e))(t)}},4398:(e,t,n)=>{"use strict";var r=n(4963),o=n(5286),a=n(7242),i=[].slice,l={},u=function(e,t,n){if(!(t in l)){for(var r=[],o=0;o<t;o++)r[o]="a["+o+"]";l[t]=Function("F,a","return new F("+r.join(",")+")")}return l[t](e,n)};e.exports=Function.bind||function(e){var t=r(this),n=i.call(arguments,1),l=function(){var r=n.concat(i.call(arguments));return this instanceof l?u(t,r.length,r):a(t,r,e)};return o(t.prototype)&&(l.prototype=t.prototype),l}},1488:(e,t,n)=>{var r=n(2032),o=n(6314)("toStringTag"),a="Arguments"==r(function(){return arguments}());e.exports=function(e){var t,n,i;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),o))?n:a?r(t):"Object"==(i=r(t))&&"function"==typeof t.callee?"Arguments":i}},2032:e=>{var t={}.toString;e.exports=function(e){return t.call(e).slice(8,-1)}},5645:e=>{var t=e.exports={version:"2.6.12"};"number"==typeof __e&&(__e=t)},741:(e,t,n)=>{var r=n(4963);e.exports=function(e,t,n){if(r(e),void 0===t)return e;switch(n){case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,o){return e.call(t,n,r,o)}}return function(){return e.apply(t,arguments)}}},1355:e=>{e.exports=function(e){if(null==e)throw TypeError("Can't call method on  "+e);return e}},7057:(e,t,n)=>{e.exports=!n(4253)((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}))},2457:(e,t,n)=>{var r=n(5286),o=n(3816).document,a=r(o)&&r(o.createElement);e.exports=function(e){return a?o.createElement(e):{}}},4430:e=>{e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},2985:(e,t,n)=>{var r=n(3816),o=n(5645),a=n(7728),i=n(7234),l=n(741),u=function(e,t,n){var c,s,f,d,p=e&u.F,h=e&u.G,m=e&u.S,v=e&u.P,y=e&u.B,g=h?r:m?r[t]||(r[t]={}):(r[t]||{}).prototype,b=h?o:o[t]||(o[t]={}),w=b.prototype||(b.prototype={});for(c in h&&(n=t),n)f=((s=!p&&g&&void 0!==g[c])?g:n)[c],d=y&&s?l(f,r):v&&"function"==typeof f?l(Function.call,f):f,g&&i(g,c,f,e&u.U),b[c]!=f&&a(b,c,d),v&&w[c]!=f&&(w[c]=f)};r.core=o,u.F=1,u.G=2,u.S=4,u.P=8,u.B=16,u.W=32,u.U=64,u.R=128,e.exports=u},4253:e=>{e.exports=function(e){try{return!!e()}catch(e){return!0}}},8082:(e,t,n)=>{"use strict";n(8269);var r=n(7234),o=n(7728),a=n(4253),i=n(1355),l=n(6314),u=n(1165),c=l("species"),s=!a((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")})),f=function(){var e=/(?:)/,t=e.exec;e.exec=function(){return t.apply(this,arguments)};var n="ab".split(e);return 2===n.length&&"a"===n[0]&&"b"===n[1]}();e.exports=function(e,t,n){var d=l(e),p=!a((function(){var t={};return t[d]=function(){return 7},7!=""[e](t)})),h=p?!a((function(){var t=!1,n=/a/;return n.exec=function(){return t=!0,null},"split"===e&&(n.constructor={},n.constructor[c]=function(){return n}),n[d](""),!t})):void 0;if(!p||!h||"replace"===e&&!s||"split"===e&&!f){var m=/./[d],v=n(i,d,""[e],(function(e,t,n,r,o){return t.exec===u?p&&!o?{done:!0,value:m.call(t,n,r)}:{done:!0,value:e.call(n,t,r)}:{done:!1}})),y=v[0],g=v[1];r(String.prototype,e,y),o(RegExp.prototype,d,2==t?function(e,t){return g.call(e,this,t)}:function(e){return g.call(e,this)})}}},3218:(e,t,n)=>{"use strict";var r=n(7007);e.exports=function(){var e=r(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t}},18:(e,t,n)=>{e.exports=n(3825)("native-function-to-string",Function.toString)},3816:e=>{var t=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=t)},9181:e=>{var t={}.hasOwnProperty;e.exports=function(e,n){return t.call(e,n)}},7728:(e,t,n)=>{var r=n(9275),o=n(681);e.exports=n(7057)?function(e,t,n){return r.f(e,t,o(1,n))}:function(e,t,n){return e[t]=n,e}},639:(e,t,n)=>{var r=n(3816).document;e.exports=r&&r.documentElement},1734:(e,t,n)=>{e.exports=!n(7057)&&!n(4253)((function(){return 7!=Object.defineProperty(n(2457)("div"),"a",{get:function(){return 7}}).a}))},7242:e=>{e.exports=function(e,t,n){var r=void 0===n;switch(t.length){case 0:return r?e():e.call(n);case 1:return r?e(t[0]):e.call(n,t[0]);case 2:return r?e(t[0],t[1]):e.call(n,t[0],t[1]);case 3:return r?e(t[0],t[1],t[2]):e.call(n,t[0],t[1],t[2]);case 4:return r?e(t[0],t[1],t[2],t[3]):e.call(n,t[0],t[1],t[2],t[3])}return e.apply(n,t)}},9797:(e,t,n)=>{var r=n(2032);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==r(e)?e.split(""):Object(e)}},4302:(e,t,n)=>{var r=n(2032);e.exports=Array.isArray||function(e){return"Array"==r(e)}},5286:e=>{e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},4461:e=>{e.exports=!1},5345:(e,t,n)=>{"use strict";var r=n(7057),o=n(7184),a=n(4548),i=n(4682),l=n(508),u=n(9797),c=Object.assign;e.exports=!c||n(4253)((function(){var e={},t={},n=Symbol(),r="abcdefghijklmnopqrst";return e[n]=7,r.split("").forEach((function(e){t[e]=e})),7!=c({},e)[n]||Object.keys(c({},t)).join("")!=r}))?function(e,t){for(var n=l(e),c=arguments.length,s=1,f=a.f,d=i.f;c>s;)for(var p,h=u(arguments[s++]),m=f?o(h).concat(f(h)):o(h),v=m.length,y=0;v>y;)p=m[y++],r&&!d.call(h,p)||(n[p]=h[p]);return n}:c},2503:(e,t,n)=>{var r=n(7007),o=n(5588),a=n(4430),i=n(9335)("IE_PROTO"),l=function(){},u=function(){var e,t=n(2457)("iframe"),r=a.length;for(t.style.display="none",n(639).appendChild(t),t.src="javascript:",(e=t.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),u=e.F;r--;)delete u.prototype[a[r]];return u()};e.exports=Object.create||function(e,t){var n;return null!==e?(l.prototype=r(e),n=new l,l.prototype=null,n[i]=e):n=u(),void 0===t?n:o(n,t)}},9275:(e,t,n)=>{var r=n(7007),o=n(1734),a=n(1689),i=Object.defineProperty;t.f=n(7057)?Object.defineProperty:function(e,t,n){if(r(e),t=a(t,!0),r(n),o)try{return i(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(e[t]=n.value),e}},5588:(e,t,n)=>{var r=n(9275),o=n(7007),a=n(7184);e.exports=n(7057)?Object.defineProperties:function(e,t){o(e);for(var n,i=a(t),l=i.length,u=0;l>u;)r.f(e,n=i[u++],t[n]);return e}},8693:(e,t,n)=>{var r=n(4682),o=n(681),a=n(2110),i=n(1689),l=n(9181),u=n(1734),c=Object.getOwnPropertyDescriptor;t.f=n(7057)?c:function(e,t){if(e=a(e),t=i(t,!0),u)try{return c(e,t)}catch(e){}if(l(e,t))return o(!r.f.call(e,t),e[t])}},4548:(e,t)=>{t.f=Object.getOwnPropertySymbols},189:(e,t,n)=>{var r=n(9181),o=n(2110),a=n(9315)(!1),i=n(9335)("IE_PROTO");e.exports=function(e,t){var n,l=o(e),u=0,c=[];for(n in l)n!=i&&r(l,n)&&c.push(n);for(;t.length>u;)r(l,n=t[u++])&&(~a(c,n)||c.push(n));return c}},7184:(e,t,n)=>{var r=n(189),o=n(4430);e.exports=Object.keys||function(e){return r(e,o)}},4682:(e,t)=>{t.f={}.propertyIsEnumerable},681:e=>{e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},7234:(e,t,n)=>{var r=n(3816),o=n(7728),a=n(9181),i=n(3953)("src"),l=n(18),u="toString",c=(""+l).split(u);n(5645).inspectSource=function(e){return l.call(e)},(e.exports=function(e,t,n,l){var u="function"==typeof n;u&&(a(n,"name")||o(n,"name",t)),e[t]!==n&&(u&&(a(n,i)||o(n,i,e[t]?""+e[t]:c.join(String(t)))),e===r?e[t]=n:l?e[t]?e[t]=n:o(e,t,n):(delete e[t],o(e,t,n)))})(Function.prototype,u,(function(){return"function"==typeof this&&this[i]||l.call(this)}))},7787:(e,t,n)=>{"use strict";var r=n(1488),o=RegExp.prototype.exec;e.exports=function(e,t){var n=e.exec;if("function"==typeof n){var a=n.call(e,t);if("object"!=typeof a)throw new TypeError("RegExp exec method returned something other than an Object or null");return a}if("RegExp"!==r(e))throw new TypeError("RegExp#exec called on incompatible receiver");return o.call(e,t)}},1165:(e,t,n)=>{"use strict";var r,o,a=n(3218),i=RegExp.prototype.exec,l=String.prototype.replace,u=i,c=(r=/a/,o=/b*/g,i.call(r,"a"),i.call(o,"a"),0!==r.lastIndex||0!==o.lastIndex),s=void 0!==/()??/.exec("")[1];(c||s)&&(u=function(e){var t,n,r,o,u=this;return s&&(n=new RegExp("^"+u.source+"$(?!\\s)",a.call(u))),c&&(t=u.lastIndex),r=i.call(u,e),c&&r&&(u.lastIndex=u.global?r.index+r[0].length:t),s&&r&&r.length>1&&l.call(r[0],n,(function(){for(o=1;o<arguments.length-2;o++)void 0===arguments[o]&&(r[o]=void 0)})),r}),e.exports=u},7195:e=>{e.exports=Object.is||function(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}},7375:(e,t,n)=>{var r=n(5286),o=n(7007),a=function(e,t){if(o(e),!r(t)&&null!==t)throw TypeError(t+": can't set as prototype!")};e.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(e,t,r){try{(r=n(741)(Function.call,n(8693).f(Object.prototype,"__proto__").set,2))(e,[]),t=!(e instanceof Array)}catch(e){t=!0}return function(e,n){return a(e,n),t?e.__proto__=n:r(e,n),e}}({},!1):void 0),check:a}},9335:(e,t,n)=>{var r=n(3825)("keys"),o=n(3953);e.exports=function(e){return r[e]||(r[e]=o(e))}},3825:(e,t,n)=>{var r=n(5645),o=n(3816),a="__core-js_shared__",i=o[a]||(o[a]={});(e.exports=function(e,t){return i[e]||(i[e]=void 0!==t?t:{})})("versions",[]).push({version:r.version,mode:n(4461)?"pure":"global",copyright:"© 2020 Denis Pushkarev (zloirock.ru)"})},7717:(e,t,n)=>{"use strict";var r=n(4253);e.exports=function(e,t){return!!e&&r((function(){t?e.call(null,(function(){}),1):e.call(null)}))}},2337:(e,t,n)=>{var r=n(1467),o=Math.max,a=Math.min;e.exports=function(e,t){return(e=r(e))<0?o(e+t,0):a(e,t)}},1467:e=>{var t=Math.ceil,n=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?n:t)(e)}},2110:(e,t,n)=>{var r=n(9797),o=n(1355);e.exports=function(e){return r(o(e))}},875:(e,t,n)=>{var r=n(1467),o=Math.min;e.exports=function(e){return e>0?o(r(e),9007199254740991):0}},508:(e,t,n)=>{var r=n(1355);e.exports=function(e){return Object(r(e))}},1689:(e,t,n)=>{var r=n(5286);e.exports=function(e,t){if(!r(e))return e;var n,o;if(t&&"function"==typeof(n=e.toString)&&!r(o=n.call(e)))return o;if("function"==typeof(n=e.valueOf)&&!r(o=n.call(e)))return o;if(!t&&"function"==typeof(n=e.toString)&&!r(o=n.call(e)))return o;throw TypeError("Can't convert object to primitive value")}},3953:e=>{var t=0,n=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++t+n).toString(36))}},6314:(e,t,n)=>{var r=n(3825)("wks"),o=n(3953),a=n(3816).Symbol,i="function"==typeof a;(e.exports=function(e){return r[e]||(r[e]=i&&a[e]||(i?a:o)("Symbol."+e))}).store=r},8837:(e,t,n)=>{"use strict";var r=n(2985),o=n(50)(2);r(r.P+r.F*!n(7717)([].filter,!0),"Array",{filter:function(e){return o(this,e,arguments[1])}})},4336:(e,t,n)=>{"use strict";var r=n(2985),o=n(50)(0),a=n(7717)([].forEach,!0);r(r.P+r.F*!a,"Array",{forEach:function(e){return o(this,e,arguments[1])}})},9371:(e,t,n)=>{"use strict";var r=n(2985),o=n(50)(1);r(r.P+r.F*!n(7717)([].map,!0),"Array",{map:function(e){return o(this,e,arguments[1])}})},110:(e,t,n)=>{"use strict";var r=n(2985),o=n(639),a=n(2032),i=n(2337),l=n(875),u=[].slice;r(r.P+r.F*n(4253)((function(){o&&u.call(o)})),"Array",{slice:function(e,t){var n=l(this.length),r=a(this);if(t=void 0===t?n:t,"Array"==r)return u.call(this,e,t);for(var o=i(e,n),c=i(t,n),s=l(c-o),f=new Array(s),d=0;d<s;d++)f[d]="String"==r?this.charAt(o+d):this[o+d];return f}})},1822:(e,t,n)=>{var r=n(2985);r(r.S,"Date",{now:function(){return(new Date).getTime()}})},9730:(e,t,n)=>{var r=n(2985);r(r.P,"Function",{bind:n(4398)})},5115:(e,t,n)=>{var r=n(2985);r(r.S+r.F,"Object",{assign:n(5345)})},8132:(e,t,n)=>{var r=n(2985);r(r.S,"Object",{create:n(2503)})},8838:(e,t,n)=>{var r=n(2985);r(r.S,"Object",{setPrototypeOf:n(7375).set})},8269:(e,t,n)=>{"use strict";var r=n(1165);n(2985)({target:"RegExp",proto:!0,forced:r!==/./.exec},{exec:r})},6142:(e,t,n)=>{"use strict";var r=n(7007),o=n(7195),a=n(7787);n(8082)("search",1,(function(e,t,n,i){return[function(n){var r=e(this),o=null==n?void 0:n[t];return void 0!==o?o.call(n,r):new RegExp(n)[t](String(r))},function(e){var t=i(n,e,this);if(t.done)return t.value;var l=r(e),u=String(this),c=l.lastIndex;o(c,0)||(l.lastIndex=0);var s=a(l,u);return o(l.lastIndex,c)||(l.lastIndex=c),null===s?-1:s.index}]}))},9566:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>l});var r=n(4015),o=n.n(r),a=n(3645),i=n.n(a)()(o());i.push([e.id,"* {\n  font-family: 'Times New Roman', Times, serif;\n  font-size: 15px;\n  background-color: #f0f0eb;\n  margin-top: 15px;\n}\na {\n  text-decoration: none;\n  color: black;\n}\n.todo-content-box {\n  padding: 10px;\n  border-radius: 10px;\n  background-color: white;\n  margin: 5px;\n  height: 100px;\n}\n.todo-content-box * {\n  background-color: white;\n}\n.icon {\n  height: 10px;\n  width: 10px;\n}\n.inline-center {\n  text-align: center;\n}\n.hide {\n  display: none;\n}\n.show {\n  display: block;\n}\n.relative-position {\n  position: relative;\n}\n.absolute-position {\n  position: absolute;\n}\n.button-style {\n  border: none;\n  background-color: #e1eef8;\n  color: #6297cc;\n  border-radius: 10px;\n}\n.button-styleok {\n  border: none;\n  background-color: #e0f4ed;\n  color: #6aa981;\n  border-radius: 10px;\n}\n.add-btnicon {\n  height: 40px;\n  width: 40px;\n  position: absolute;\n  bottom: 40px;\n  right: 40px;\n}\n.edit-block {\n  background-color: white;\n  padding: 0px 10px 40px 20px;\n}\n.edit-block h1 {\n  font-size: 25px;\n}\n.edit-block * {\n  background-color: white;\n}\n.edit-block .item {\n  padding: 20px;\n  height: 30px;\n  border-bottom: rgba(137, 124, 136, 0.1) solid 1px;\n}\n.edit-block input {\n  border: none;\n}\n.edit-block img {\n  width: 20px;\n  height: 20px;\n  padding-right: 20px;\n  padding-bottom: -10px;\n}\n","",{version:3,sources:["webpack://./src/components/Todo/styles/style.less"],names:[],mappings:"AAAA;EACI,4CAAA;EACA,eAAA;EACA,yBAAA;EACA,gBAAA;AACJ;AACA;EACI,qBAAA;EACA,YAAA;AACJ;AACA;EAII,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,WAAA;EACA,aAAA;AAFJ;AANA;EAEQ,uBAAA;AAOR;AACA;EACI,YAAA;EACA,WAAA;AACJ;AACA;EACI,kBAAA;AACJ;AACA;EACI,aAAA;AACJ;AACA;EACI,cAAA;AACJ;AACA;EACI,kBAAA;AACJ;AACA;EACI,kBAAA;AACJ;AACA;EACI,YAAA;EACA,yBAAA;EACA,cAAA;EACA,mBAAA;AACJ;AACA;EACI,YAAA;EACA,yBAAA;EACA,cAAA;EACA,mBAAA;AACJ;AACA;EACI,YAAA;EACA,WAAA;EACA,kBAAA;EACA,YAAA;EACA,WAAA;AACJ;AAEA;EACI,uBAAA;EACA,2BAAA;AAAJ;AAFA;EAIQ,eAAA;AACR;AALA;EAOQ,uBAAA;AACR;AARA;EAUQ,aAAA;EACA,YAAA;EACA,iDAAA;AACR;AAbA;EAeQ,YAAA;AACR;AAhBA;EAkBQ,WAAA;EACA,YAAA;EACA,mBAAA;EACA,qBAAA;AACR",sourcesContent:["*{\n    font-family: 'Times New Roman', Times, serif;\n    font-size: 15px;\n    background-color: rgb(240,240,235);\n    margin-top:15px;\n}\na{\n    text-decoration: none;\n    color: black;\n}\n.todo-content-box{\n    *{\n        background-color:white;\n    }\n    padding: 10px;\n    border-radius: 10px;\n    background-color:white;\n    margin: 5px;\n    height: 100px;\n}\n.icon{\n    height: 10px;\n    width: 10px;\n}\n.inline-center{\n    text-align:center;\n}\n.hide{\n    display: none;\n}\n.show{\n    display: block;\n}\n.relative-position{\n    position: relative;\n}\n.absolute-position{\n    position: absolute;\n}\n.button-style{\n    border: none;\n    background-color: rgb(225,238,248);\n    color:rgb(98, 151, 204);\n    border-radius: 10px;\n}\n.button-styleok{\n    border: none;\n    background-color: rgb(224,244,237);\n    color:rgb(106, 169, 129);\n    border-radius: 10px;\n}\n.add-btnicon{\n    height: 40px;\n    width: 40px;\n    position: absolute;\n    bottom: 40px;\n    right: 40px;\n}\n\n.edit-block{\n    background-color: white;\n    padding: 0px 10px 40px 20px;\n    h1{\n        font-size: 25px;\n    }\n    * {\n        background-color: white;\n    }\n    .item{\n        padding: 20px;\n        height: 30px;\n        border-bottom: rgba(137,124,136,0.1) solid 1px;\n    }\n    input{\n        border: none;\n    }\n    img{\n        width: 20px;\n        height: 20px;\n        padding-right: 20px;\n        padding-bottom: -10px;\n    }\n}"],sourceRoot:""}]);const l=i},3645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=e(t);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var o={};if(r)for(var a=0;a<this.length;a++){var i=this[a][0];null!=i&&(o[i]=!0)}for(var l=0;l<e.length;l++){var u=[].concat(e[l]);r&&o[u[0]]||(n&&(u[2]?u[2]="".concat(n," and ").concat(u[2]):u[2]=n),t.push(u))}},t}},4015:e=>{"use strict";function t(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}e.exports=function(e){var n,r,o=(r=4,function(e){if(Array.isArray(e))return e}(n=e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,l=e[Symbol.iterator]();!(r=(i=l.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==l.return||l.return()}finally{if(o)throw a}}return n}}(n,r)||function(e,n){if(e){if("string"==typeof e)return t(e,n);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?t(e,n):void 0}}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=o[1],i=o[3];if("function"==typeof btoa){var l=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),u="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(l),c="/*# ".concat(u," */"),s=i.sources.map((function(e){return"/*# sourceURL=".concat(i.sourceRoot||"").concat(e," */")}));return[a].concat(s).concat([c]).join("\n")}return[a].join("\n")}},4020:e=>{"use strict";var t="%[a-f0-9]{2}",n=new RegExp(t,"gi"),r=new RegExp("("+t+")+","gi");function o(e,t){try{return decodeURIComponent(e.join(""))}catch(e){}if(1===e.length)return e;t=t||1;var n=e.slice(0,t),r=e.slice(t);return Array.prototype.concat.call([],o(n),o(r))}function a(e){try{return decodeURIComponent(e)}catch(a){for(var t=e.match(n),r=1;r<t.length;r++)t=(e=o(t,r).join("")).match(n);return e}}e.exports=function(e){if("string"!=typeof e)throw new TypeError("Expected `encodedURI` to be of type `string`, got `"+typeof e+"`");try{return e=e.replace(/\+/g," "),decodeURIComponent(e)}catch(t){return function(e){for(var t={"%FE%FF":"��","%FF%FE":"��"},n=r.exec(e);n;){try{t[n[0]]=decodeURIComponent(n[0])}catch(e){var o=a(n[0]);o!==n[0]&&(t[n[0]]=o)}n=r.exec(e)}t["%C2"]="�";for(var i=Object.keys(t),l=0;l<i.length;l++){var u=i[l];e=e.replace(new RegExp(u,"g"),t[u])}return e}(e)}}},2806:e=>{"use strict";e.exports=function(e,t){for(var n={},r=Object.keys(e),o=Array.isArray(t),a=0;a<r.length;a++){var i=r[a],l=e[i];(o?-1!==t.indexOf(i):t(i,l,e))&&(n[i]=l)}return n}},8679:(e,t,n)=>{"use strict";var r=n(9864),o={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},a={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},i={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},l={};function u(e){return r.isMemo(e)?i:l[e.$$typeof]||o}l[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},l[r.Memo]=i;var c=Object.defineProperty,s=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,h=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(h){var o=p(n);o&&o!==h&&e(t,o,r)}var i=s(n);f&&(i=i.concat(f(n)));for(var l=u(t),m=u(n),v=0;v<i.length;++v){var y=i[v];if(!(a[y]||r&&r[y]||m&&m[y]||l&&l[y])){var g=d(n,y);try{c(t,y,g)}catch(e){}}}}return t}},7418:e=>{"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function o(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,a){for(var i,l,u=o(e),c=1;c<arguments.length;c++){for(var s in i=Object(arguments[c]))n.call(i,s)&&(u[s]=i[s]);if(t){l=t(i);for(var f=0;f<l.length;f++)r.call(i,l[f])&&(u[l[f]]=i[l[f]])}}return u}},2703:(e,t,n)=>{"use strict";var r=n(414);function o(){}function a(){}a.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,a,i){if(i!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:a,resetWarningCache:o};return n.PropTypes=n,n}},5697:(e,t,n)=>{e.exports=n(2703)()},414:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},7563:(e,t,n)=>{"use strict";const r=n(610),o=n(4020),a=n(500),i=n(2806);function l(e){if("string"!=typeof e||1!==e.length)throw new TypeError("arrayFormatSeparator must be single character string")}function u(e,t){return t.encode?t.strict?r(e):encodeURIComponent(e):e}function c(e,t){return t.decode?o(e):e}function s(e){return Array.isArray(e)?e.sort():"object"==typeof e?s(Object.keys(e)).sort(((e,t)=>Number(e)-Number(t))).map((t=>e[t])):e}function f(e){const t=e.indexOf("#");return-1!==t&&(e=e.slice(0,t)),e}function d(e){const t=(e=f(e)).indexOf("?");return-1===t?"":e.slice(t+1)}function p(e,t){return t.parseNumbers&&!Number.isNaN(Number(e))&&"string"==typeof e&&""!==e.trim()?e=Number(e):!t.parseBooleans||null===e||"true"!==e.toLowerCase()&&"false"!==e.toLowerCase()||(e="true"===e.toLowerCase()),e}function h(e,t){l((t=Object.assign({decode:!0,sort:!0,arrayFormat:"none",arrayFormatSeparator:",",parseNumbers:!1,parseBooleans:!1},t)).arrayFormatSeparator);const n=function(e){let t;switch(e.arrayFormat){case"index":return(e,n,r)=>{t=/\[(\d*)\]$/.exec(e),e=e.replace(/\[\d*\]$/,""),t?(void 0===r[e]&&(r[e]={}),r[e][t[1]]=n):r[e]=n};case"bracket":return(e,n,r)=>{t=/(\[\])$/.exec(e),e=e.replace(/\[\]$/,""),t?void 0!==r[e]?r[e]=[].concat(r[e],n):r[e]=[n]:r[e]=n};case"comma":case"separator":return(t,n,r)=>{const o="string"==typeof n&&n.includes(e.arrayFormatSeparator),a="string"==typeof n&&!o&&c(n,e).includes(e.arrayFormatSeparator);n=a?c(n,e):n;const i=o||a?n.split(e.arrayFormatSeparator).map((t=>c(t,e))):null===n?n:c(n,e);r[t]=i};case"bracket-separator":return(t,n,r)=>{const o=/(\[\])$/.test(t);if(t=t.replace(/\[\]$/,""),!o)return void(r[t]=n?c(n,e):n);const a=null===n?[]:n.split(e.arrayFormatSeparator).map((t=>c(t,e)));void 0!==r[t]?r[t]=[].concat(r[t],a):r[t]=a};default:return(e,t,n)=>{void 0!==n[e]?n[e]=[].concat(n[e],t):n[e]=t}}}(t),r=Object.create(null);if("string"!=typeof e)return r;if(!(e=e.trim().replace(/^[?#&]/,"")))return r;for(const o of e.split("&")){if(""===o)continue;let[e,i]=a(t.decode?o.replace(/\+/g," "):o,"=");i=void 0===i?null:["comma","separator","bracket-separator"].includes(t.arrayFormat)?i:c(i,t),n(c(e,t),i,r)}for(const e of Object.keys(r)){const n=r[e];if("object"==typeof n&&null!==n)for(const e of Object.keys(n))n[e]=p(n[e],t);else r[e]=p(n,t)}return!1===t.sort?r:(!0===t.sort?Object.keys(r).sort():Object.keys(r).sort(t.sort)).reduce(((e,t)=>{const n=r[t];return Boolean(n)&&"object"==typeof n&&!Array.isArray(n)?e[t]=s(n):e[t]=n,e}),Object.create(null))}t.extract=d,t.parse=h,t.stringify=(e,t)=>{if(!e)return"";l((t=Object.assign({encode:!0,strict:!0,arrayFormat:"none",arrayFormatSeparator:","},t)).arrayFormatSeparator);const n=n=>t.skipNull&&null==e[n]||t.skipEmptyString&&""===e[n],r=function(e){switch(e.arrayFormat){case"index":return t=>(n,r)=>{const o=n.length;return void 0===r||e.skipNull&&null===r||e.skipEmptyString&&""===r?n:null===r?[...n,[u(t,e),"[",o,"]"].join("")]:[...n,[u(t,e),"[",u(o,e),"]=",u(r,e)].join("")]};case"bracket":return t=>(n,r)=>void 0===r||e.skipNull&&null===r||e.skipEmptyString&&""===r?n:null===r?[...n,[u(t,e),"[]"].join("")]:[...n,[u(t,e),"[]=",u(r,e)].join("")];case"comma":case"separator":case"bracket-separator":{const t="bracket-separator"===e.arrayFormat?"[]=":"=";return n=>(r,o)=>void 0===o||e.skipNull&&null===o||e.skipEmptyString&&""===o?r:(o=null===o?"":o,0===r.length?[[u(n,e),t,u(o,e)].join("")]:[[r,u(o,e)].join(e.arrayFormatSeparator)])}default:return t=>(n,r)=>void 0===r||e.skipNull&&null===r||e.skipEmptyString&&""===r?n:null===r?[...n,u(t,e)]:[...n,[u(t,e),"=",u(r,e)].join("")]}}(t),o={};for(const t of Object.keys(e))n(t)||(o[t]=e[t]);const a=Object.keys(o);return!1!==t.sort&&a.sort(t.sort),a.map((n=>{const o=e[n];return void 0===o?"":null===o?u(n,t):Array.isArray(o)?0===o.length&&"bracket-separator"===t.arrayFormat?u(n,t)+"[]":o.reduce(r(n),[]).join("&"):u(n,t)+"="+u(o,t)})).filter((e=>e.length>0)).join("&")},t.parseUrl=(e,t)=>{t=Object.assign({decode:!0},t);const[n,r]=a(e,"#");return Object.assign({url:n.split("?")[0]||"",query:h(d(e),t)},t&&t.parseFragmentIdentifier&&r?{fragmentIdentifier:c(r,t)}:{})},t.stringifyUrl=(e,n)=>{n=Object.assign({encode:!0,strict:!0},n);const r=f(e.url).split("?")[0]||"",o=t.extract(e.url),a=t.parse(o,{sort:!1}),i=Object.assign(a,e.query);let l=t.stringify(i,n);l&&(l=`?${l}`);let c=function(e){let t="";const n=e.indexOf("#");return-1!==n&&(t=e.slice(n)),t}(e.url);return e.fragmentIdentifier&&(c=`#${u(e.fragmentIdentifier,n)}`),`${r}${l}${c}`},t.pick=(e,n,r)=>{r=Object.assign({parseFragmentIdentifier:!0},r);const{url:o,query:a,fragmentIdentifier:l}=t.parseUrl(e,r);return t.stringifyUrl({url:o,query:i(a,n),fragmentIdentifier:l},r)},t.exclude=(e,n,r)=>{const o=Array.isArray(n)?e=>!n.includes(e):(e,t)=>!n(e,t);return t.pick(e,o,r)}},4448:(e,t,n)=>{"use strict";var r=n(7294),o=n(7418),a=n(3840);function i(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(i(227));var l=new Set,u={};function c(e,t){s(e,t),s(e+"Capture",t)}function s(e,t){for(u[e]=t,e=0;e<t.length;e++)l.add(t[e])}var f=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p=Object.prototype.hasOwnProperty,h={},m={};function v(e,t,n,r,o,a,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=a,this.removeEmptyString=i}var y={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){y[e]=new v(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];y[t]=new v(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){y[e]=new v(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){y[e]=new v(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){y[e]=new v(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){y[e]=new v(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){y[e]=new v(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){y[e]=new v(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){y[e]=new v(e,5,!1,e.toLowerCase(),null,!1,!1)}));var g=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function w(e,t,n,r){var o=y.hasOwnProperty(t)?y[t]:null;(null!==o?0===o.type:!r&&2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1]))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!p.call(m,e)||!p.call(h,e)&&(d.test(e)?m[e]=!0:(h[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(g,b);y[t]=new v(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(g,b);y[t]=new v(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(g,b);y[t]=new v(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){y[e]=new v(e,1,!1,e.toLowerCase(),null,!1,!1)})),y.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){y[e]=new v(e,1,!1,e.toLowerCase(),null,!0,!0)}));var k=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,E=60103,x=60106,S=60107,A=60108,C=60114,_=60109,T=60110,O=60112,P=60113,N=60120,L=60115,I=60116,R=60121,j=60128,F=60129,M=60130,z=60131;if("function"==typeof Symbol&&Symbol.for){var D=Symbol.for;E=D("react.element"),x=D("react.portal"),S=D("react.fragment"),A=D("react.strict_mode"),C=D("react.profiler"),_=D("react.provider"),T=D("react.context"),O=D("react.forward_ref"),P=D("react.suspense"),N=D("react.suspense_list"),L=D("react.memo"),I=D("react.lazy"),R=D("react.block"),D("react.scope"),j=D("react.opaque.id"),F=D("react.debug_trace_mode"),M=D("react.offscreen"),z=D("react.legacy_hidden")}var U,$="function"==typeof Symbol&&Symbol.iterator;function B(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=$&&e[$]||e["@@iterator"])?e:null}function H(e){if(void 0===U)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);U=t&&t[1]||""}return"\n"+U+e}var V=!1;function W(e,t){if(!e||V)return"";V=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(e){if(e&&r&&"string"==typeof e.stack){for(var o=e.stack.split("\n"),a=r.stack.split("\n"),i=o.length-1,l=a.length-1;1<=i&&0<=l&&o[i]!==a[l];)l--;for(;1<=i&&0<=l;i--,l--)if(o[i]!==a[l]){if(1!==i||1!==l)do{if(i--,0>--l||o[i]!==a[l])return"\n"+o[i].replace(" at new "," at ")}while(1<=i&&0<=l);break}}}finally{V=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?H(e):""}function Q(e){switch(e.tag){case 5:return H(e.type);case 16:return H("Lazy");case 13:return H("Suspense");case 19:return H("SuspenseList");case 0:case 2:case 15:return W(e.type,!1);case 11:return W(e.type.render,!1);case 22:return W(e.type._render,!1);case 1:return W(e.type,!0);default:return""}}function q(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case S:return"Fragment";case x:return"Portal";case C:return"Profiler";case A:return"StrictMode";case P:return"Suspense";case N:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case T:return(e.displayName||"Context")+".Consumer";case _:return(e._context.displayName||"Context")+".Provider";case O:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case L:return q(e.type);case R:return q(e._render);case I:t=e._payload,e=e._init;try{return q(e(t))}catch(e){}}return null}function K(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function Y(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function J(e){e._valueTracker||(e._valueTracker=function(e){var t=Y(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,a=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function X(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=Y(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function G(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Z(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=K(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function te(e,t){null!=(t=t.checked)&&w(e,"checked",t,!1)}function ne(e,t){te(e,t);var n=K(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?oe(e,t.type,n):t.hasOwnProperty("defaultValue")&&oe(e,t.type,K(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function re(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function oe(e,t,n){"number"===t&&G(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function ae(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function ie(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+K(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function le(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(i(91));return o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ue(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(i(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(i(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:K(n)}}function ce(e,t){var n=K(t.value),r=K(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function se(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var fe="http://www.w3.org/1999/xhtml";function de(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function pe(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?de(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var he,me,ve=(me=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((he=he||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=he.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return me(e,t)}))}:me);function ye(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ge={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},be=["Webkit","ms","Moz","O"];function we(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ge.hasOwnProperty(e)&&ge[e]?(""+t).trim():t+"px"}function ke(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=we(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(ge).forEach((function(e){be.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ge[t]=ge[e]}))}));var Ee=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function xe(e,t){if(t){if(Ee[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(i(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(i(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(i(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(i(62))}}function Se(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function Ae(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Ce=null,_e=null,Te=null;function Oe(e){if(e=Zr(e)){if("function"!=typeof Ce)throw Error(i(280));var t=e.stateNode;t&&(t=to(t),Ce(e.stateNode,e.type,t))}}function Pe(e){_e?Te?Te.push(e):Te=[e]:_e=e}function Ne(){if(_e){var e=_e,t=Te;if(Te=_e=null,Oe(e),t)for(e=0;e<t.length;e++)Oe(t[e])}}function Le(e,t){return e(t)}function Ie(e,t,n,r,o){return e(t,n,r,o)}function Re(){}var je=Le,Fe=!1,Me=!1;function ze(){null===_e&&null===Te||(Re(),Ne())}function De(e,t){var n=e.stateNode;if(null===n)return null;var r=to(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(i(231,t,typeof n));return n}var Ue=!1;if(f)try{var $e={};Object.defineProperty($e,"passive",{get:function(){Ue=!0}}),window.addEventListener("test",$e,$e),window.removeEventListener("test",$e,$e)}catch(me){Ue=!1}function Be(e,t,n,r,o,a,i,l,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var He=!1,Ve=null,We=!1,Qe=null,qe={onError:function(e){He=!0,Ve=e}};function Ke(e,t,n,r,o,a,i,l,u){He=!1,Ve=null,Be.apply(qe,arguments)}function Ye(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Je(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function Xe(e){if(Ye(e)!==e)throw Error(i(188))}function Ge(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ye(e)))throw Error(i(188));return t!==e?null:e}for(var n=e,r=t;;){var o=n.return;if(null===o)break;var a=o.alternate;if(null===a){if(null!==(r=o.return)){n=r;continue}break}if(o.child===a.child){for(a=o.child;a;){if(a===n)return Xe(o),e;if(a===r)return Xe(o),t;a=a.sibling}throw Error(i(188))}if(n.return!==r.return)n=o,r=a;else{for(var l=!1,u=o.child;u;){if(u===n){l=!0,n=o,r=a;break}if(u===r){l=!0,r=o,n=a;break}u=u.sibling}if(!l){for(u=a.child;u;){if(u===n){l=!0,n=a,r=o;break}if(u===r){l=!0,r=a,n=o;break}u=u.sibling}if(!l)throw Error(i(189))}}if(n.alternate!==r)throw Error(i(190))}if(3!==n.tag)throw Error(i(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function Ze(e,t){for(var n=e.alternate;null!==t;){if(t===e||t===n)return!0;t=t.return}return!1}var et,tt,nt,rt,ot=!1,at=[],it=null,lt=null,ut=null,ct=new Map,st=new Map,ft=[],dt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function pt(e,t,n,r,o){return{blockedOn:e,domEventName:t,eventSystemFlags:16|n,nativeEvent:o,targetContainers:[r]}}function ht(e,t){switch(e){case"focusin":case"focusout":it=null;break;case"dragenter":case"dragleave":lt=null;break;case"mouseover":case"mouseout":ut=null;break;case"pointerover":case"pointerout":ct.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":st.delete(t.pointerId)}}function mt(e,t,n,r,o,a){return null===e||e.nativeEvent!==a?(e=pt(t,n,r,o,a),null!==t&&null!==(t=Zr(t))&&tt(t),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==o&&-1===t.indexOf(o)&&t.push(o),e)}function vt(e){var t=Gr(e.target);if(null!==t){var n=Ye(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Je(n)))return e.blockedOn=t,void rt(e.lanePriority,(function(){a.unstable_runWithPriority(e.priority,(function(){nt(n)}))}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function yt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Gt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=Zr(n))&&tt(t),e.blockedOn=n,!1;t.shift()}return!0}function gt(e,t,n){yt(e)&&n.delete(t)}function bt(){for(ot=!1;0<at.length;){var e=at[0];if(null!==e.blockedOn){null!==(e=Zr(e.blockedOn))&&et(e);break}for(var t=e.targetContainers;0<t.length;){var n=Gt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n){e.blockedOn=n;break}t.shift()}null===e.blockedOn&&at.shift()}null!==it&&yt(it)&&(it=null),null!==lt&&yt(lt)&&(lt=null),null!==ut&&yt(ut)&&(ut=null),ct.forEach(gt),st.forEach(gt)}function wt(e,t){e.blockedOn===t&&(e.blockedOn=null,ot||(ot=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,bt)))}function kt(e){function t(t){return wt(t,e)}if(0<at.length){wt(at[0],e);for(var n=1;n<at.length;n++){var r=at[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==it&&wt(it,e),null!==lt&&wt(lt,e),null!==ut&&wt(ut,e),ct.forEach(t),st.forEach(t),n=0;n<ft.length;n++)(r=ft[n]).blockedOn===e&&(r.blockedOn=null);for(;0<ft.length&&null===(n=ft[0]).blockedOn;)vt(n),null===n.blockedOn&&ft.shift()}function Et(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var xt={animationend:Et("Animation","AnimationEnd"),animationiteration:Et("Animation","AnimationIteration"),animationstart:Et("Animation","AnimationStart"),transitionend:Et("Transition","TransitionEnd")},St={},At={};function Ct(e){if(St[e])return St[e];if(!xt[e])return e;var t,n=xt[e];for(t in n)if(n.hasOwnProperty(t)&&t in At)return St[e]=n[t];return e}f&&(At=document.createElement("div").style,"AnimationEvent"in window||(delete xt.animationend.animation,delete xt.animationiteration.animation,delete xt.animationstart.animation),"TransitionEvent"in window||delete xt.transitionend.transition);var _t=Ct("animationend"),Tt=Ct("animationiteration"),Ot=Ct("animationstart"),Pt=Ct("transitionend"),Nt=new Map,Lt=new Map,It=["abort","abort",_t,"animationEnd",Tt,"animationIteration",Ot,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Pt,"transitionEnd","waiting","waiting"];function Rt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],o=e[n+1];o="on"+(o[0].toUpperCase()+o.slice(1)),Lt.set(r,t),Nt.set(r,o),c(o,[r])}}(0,a.unstable_now)();var jt=8;function Ft(e){if(0!=(1&e))return jt=15,1;if(0!=(2&e))return jt=14,2;if(0!=(4&e))return jt=13,4;var t=24&e;return 0!==t?(jt=12,t):0!=(32&e)?(jt=11,32):0!=(t=192&e)?(jt=10,t):0!=(256&e)?(jt=9,256):0!=(t=3584&e)?(jt=8,t):0!=(4096&e)?(jt=7,4096):0!=(t=4186112&e)?(jt=6,t):0!=(t=62914560&e)?(jt=5,t):67108864&e?(jt=4,67108864):0!=(134217728&e)?(jt=3,134217728):0!=(t=805306368&e)?(jt=2,t):0!=(1073741824&e)?(jt=1,1073741824):(jt=8,e)}function Mt(e,t){var n=e.pendingLanes;if(0===n)return jt=0;var r=0,o=0,a=e.expiredLanes,i=e.suspendedLanes,l=e.pingedLanes;if(0!==a)r=a,o=jt=15;else if(0!=(a=134217727&n)){var u=a&~i;0!==u?(r=Ft(u),o=jt):0!=(l&=a)&&(r=Ft(l),o=jt)}else 0!=(a=n&~i)?(r=Ft(a),o=jt):0!==l&&(r=Ft(l),o=jt);if(0===r)return 0;if(r=n&((0>(r=31-Ht(r))?0:1<<r)<<1)-1,0!==t&&t!==r&&0==(t&i)){if(Ft(t),o<=jt)return t;jt=o}if(0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)o=1<<(n=31-Ht(t)),r|=e[n],t&=~o;return r}function zt(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Dt(e,t){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=Ut(24&~t))?Dt(10,t):e;case 10:return 0===(e=Ut(192&~t))?Dt(8,t):e;case 8:return 0===(e=Ut(3584&~t))&&0===(e=Ut(4186112&~t))&&(e=512),e;case 2:return 0===(t=Ut(805306368&~t))&&(t=268435456),t}throw Error(i(358,e))}function Ut(e){return e&-e}function $t(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function Bt(e,t,n){e.pendingLanes|=t;var r=t-1;e.suspendedLanes&=r,e.pingedLanes&=r,(e=e.eventTimes)[t=31-Ht(t)]=n}var Ht=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Vt(e)/Wt|0)|0},Vt=Math.log,Wt=Math.LN2,Qt=a.unstable_UserBlockingPriority,qt=a.unstable_runWithPriority,Kt=!0;function Yt(e,t,n,r){Fe||Re();var o=Xt,a=Fe;Fe=!0;try{Ie(o,e,t,n,r)}finally{(Fe=a)||ze()}}function Jt(e,t,n,r){qt(Qt,Xt.bind(null,e,t,n,r))}function Xt(e,t,n,r){var o;if(Kt)if((o=0==(4&t))&&0<at.length&&-1<dt.indexOf(e))e=pt(null,e,t,n,r),at.push(e);else{var a=Gt(e,t,n,r);if(null===a)o&&ht(e,r);else{if(o){if(-1<dt.indexOf(e))return e=pt(a,e,t,n,r),void at.push(e);if(function(e,t,n,r,o){switch(t){case"focusin":return it=mt(it,e,t,n,r,o),!0;case"dragenter":return lt=mt(lt,e,t,n,r,o),!0;case"mouseover":return ut=mt(ut,e,t,n,r,o),!0;case"pointerover":var a=o.pointerId;return ct.set(a,mt(ct.get(a)||null,e,t,n,r,o)),!0;case"gotpointercapture":return a=o.pointerId,st.set(a,mt(st.get(a)||null,e,t,n,r,o)),!0}return!1}(a,e,t,n,r))return;ht(e,r)}Nr(e,t,r,null,n)}}}function Gt(e,t,n,r){var o=Ae(r);if(null!==(o=Gr(o))){var a=Ye(o);if(null===a)o=null;else{var i=a.tag;if(13===i){if(null!==(o=Je(a)))return o;o=null}else if(3===i){if(a.stateNode.hydrate)return 3===a.tag?a.stateNode.containerInfo:null;o=null}else a!==o&&(o=null)}}return Nr(e,t,r,o,n),null}var Zt=null,en=null,tn=null;function nn(){if(tn)return tn;var e,t,n=en,r=n.length,o="value"in Zt?Zt.value:Zt.textContent,a=o.length;for(e=0;e<r&&n[e]===o[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===o[a-t];t++);return tn=o.slice(e,1<t?1-t:void 0)}function rn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function on(){return!0}function an(){return!1}function ln(e){function t(t,n,r,o,a){for(var i in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=o,this.target=a,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(o):o[i]);return this.isDefaultPrevented=(null!=o.defaultPrevented?o.defaultPrevented:!1===o.returnValue)?on:an,this.isPropagationStopped=an,this}return o(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=on)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=on)},persist:function(){},isPersistent:on}),t}var un,cn,sn,fn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},dn=ln(fn),pn=o({},fn,{view:0,detail:0}),hn=ln(pn),mn=o({},pn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Cn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==sn&&(sn&&"mousemove"===e.type?(un=e.screenX-sn.screenX,cn=e.screenY-sn.screenY):cn=un=0,sn=e),un)},movementY:function(e){return"movementY"in e?e.movementY:cn}}),vn=ln(mn),yn=ln(o({},mn,{dataTransfer:0})),gn=ln(o({},pn,{relatedTarget:0})),bn=ln(o({},fn,{animationName:0,elapsedTime:0,pseudoElement:0})),wn=ln(o({},fn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}})),kn=ln(o({},fn,{data:0})),En={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},xn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Sn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function An(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Sn[e])&&!!t[e]}function Cn(){return An}var _n=ln(o({},pn,{key:function(e){if(e.key){var t=En[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=rn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?xn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Cn,charCode:function(e){return"keypress"===e.type?rn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?rn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}})),Tn=ln(o({},mn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),On=ln(o({},pn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Cn})),Pn=ln(o({},fn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Nn=ln(o({},mn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0})),Ln=[9,13,27,32],In=f&&"CompositionEvent"in window,Rn=null;f&&"documentMode"in document&&(Rn=document.documentMode);var jn=f&&"TextEvent"in window&&!Rn,Fn=f&&(!In||Rn&&8<Rn&&11>=Rn),Mn=String.fromCharCode(32),zn=!1;function Dn(e,t){switch(e){case"keyup":return-1!==Ln.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Un(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var $n=!1,Bn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Hn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Bn[e.type]:"textarea"===t}function Vn(e,t,n,r){Pe(r),0<(t=Ir(t,"onChange")).length&&(n=new dn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Wn=null,Qn=null;function qn(e){Ar(e,0)}function Kn(e){if(X(eo(e)))return e}function Yn(e,t){if("change"===e)return t}var Jn=!1;if(f){var Xn;if(f){var Gn="oninput"in document;if(!Gn){var Zn=document.createElement("div");Zn.setAttribute("oninput","return;"),Gn="function"==typeof Zn.oninput}Xn=Gn}else Xn=!1;Jn=Xn&&(!document.documentMode||9<document.documentMode)}function er(){Wn&&(Wn.detachEvent("onpropertychange",tr),Qn=Wn=null)}function tr(e){if("value"===e.propertyName&&Kn(Qn)){var t=[];if(Vn(t,Qn,e,Ae(e)),e=qn,Fe)e(t);else{Fe=!0;try{Le(e,t)}finally{Fe=!1,ze()}}}}function nr(e,t,n){"focusin"===e?(er(),Qn=n,(Wn=t).attachEvent("onpropertychange",tr)):"focusout"===e&&er()}function rr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Kn(Qn)}function or(e,t){if("click"===e)return Kn(t)}function ar(e,t){if("input"===e||"change"===e)return Kn(t)}var ir="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},lr=Object.prototype.hasOwnProperty;function ur(e,t){if(ir(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!lr.call(t,n[r])||!ir(e[n[r]],t[n[r]]))return!1;return!0}function cr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function sr(e,t){var n,r=cr(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=cr(r)}}function fr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?fr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function dr(){for(var e=window,t=G();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=G((e=t.contentWindow).document)}return t}function pr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var hr=f&&"documentMode"in document&&11>=document.documentMode,mr=null,vr=null,yr=null,gr=!1;function br(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;gr||null==mr||mr!==G(r)||(r="selectionStart"in(r=mr)&&pr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},yr&&ur(yr,r)||(yr=r,0<(r=Ir(vr,"onSelect")).length&&(t=new dn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=mr)))}Rt("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Rt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Rt(It,2);for(var wr="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),kr=0;kr<wr.length;kr++)Lt.set(wr[kr],0);s("onMouseEnter",["mouseout","mouseover"]),s("onMouseLeave",["mouseout","mouseover"]),s("onPointerEnter",["pointerout","pointerover"]),s("onPointerLeave",["pointerout","pointerover"]),c("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),c("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),c("onBeforeInput",["compositionend","keypress","textInput","paste"]),c("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Er="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),xr=new Set("cancel close invalid load scroll toggle".split(" ").concat(Er));function Sr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,o,a,l,u,c){if(Ke.apply(this,arguments),He){if(!He)throw Error(i(198));var s=Ve;He=!1,Ve=null,We||(We=!0,Qe=s)}}(r,t,void 0,e),e.currentTarget=null}function Ar(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],o=r.event;r=r.listeners;e:{var a=void 0;if(t)for(var i=r.length-1;0<=i;i--){var l=r[i],u=l.instance,c=l.currentTarget;if(l=l.listener,u!==a&&o.isPropagationStopped())break e;Sr(o,l,c),a=u}else for(i=0;i<r.length;i++){if(u=(l=r[i]).instance,c=l.currentTarget,l=l.listener,u!==a&&o.isPropagationStopped())break e;Sr(o,l,c),a=u}}}if(We)throw e=Qe,We=!1,Qe=null,e}function Cr(e,t){var n=no(t),r=e+"__bubble";n.has(r)||(Pr(t,e,2,!1),n.add(r))}var _r="_reactListening"+Math.random().toString(36).slice(2);function Tr(e){e[_r]||(e[_r]=!0,l.forEach((function(t){xr.has(t)||Or(t,!1,e,null),Or(t,!0,e,null)})))}function Or(e,t,n,r){var o=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,a=n;if("selectionchange"===e&&9!==n.nodeType&&(a=n.ownerDocument),null!==r&&!t&&xr.has(e)){if("scroll"!==e)return;o|=2,a=r}var i=no(a),l=e+"__"+(t?"capture":"bubble");i.has(l)||(t&&(o|=4),Pr(a,e,o,t),i.add(l))}function Pr(e,t,n,r){var o=Lt.get(t);switch(void 0===o?2:o){case 0:o=Yt;break;case 1:o=Jt;break;default:o=Xt}n=o.bind(null,t,n,e),o=void 0,!Ue||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(o=!0),r?void 0!==o?e.addEventListener(t,n,{capture:!0,passive:o}):e.addEventListener(t,n,!0):void 0!==o?e.addEventListener(t,n,{passive:o}):e.addEventListener(t,n,!1)}function Nr(e,t,n,r,o){var a=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var i=r.tag;if(3===i||4===i){var l=r.stateNode.containerInfo;if(l===o||8===l.nodeType&&l.parentNode===o)break;if(4===i)for(i=r.return;null!==i;){var u=i.tag;if((3===u||4===u)&&((u=i.stateNode.containerInfo)===o||8===u.nodeType&&u.parentNode===o))return;i=i.return}for(;null!==l;){if(null===(i=Gr(l)))return;if(5===(u=i.tag)||6===u){r=a=i;continue e}l=l.parentNode}}r=r.return}!function(e,t,n){if(Me)return e();Me=!0;try{je(e,t,n)}finally{Me=!1,ze()}}((function(){var r=a,o=Ae(n),i=[];e:{var l=Nt.get(e);if(void 0!==l){var u=dn,c=e;switch(e){case"keypress":if(0===rn(n))break e;case"keydown":case"keyup":u=_n;break;case"focusin":c="focus",u=gn;break;case"focusout":c="blur",u=gn;break;case"beforeblur":case"afterblur":u=gn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=vn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=yn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=On;break;case _t:case Tt:case Ot:u=bn;break;case Pt:u=Pn;break;case"scroll":u=hn;break;case"wheel":u=Nn;break;case"copy":case"cut":case"paste":u=wn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=Tn}var s=0!=(4&t),f=!s&&"scroll"===e,d=s?null!==l?l+"Capture":null:l;s=[];for(var p,h=r;null!==h;){var m=(p=h).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==d&&null!=(m=De(h,d))&&s.push(Lr(h,m,p))),f)break;h=h.return}0<s.length&&(l=new u(l,c,null,n,o),i.push({event:l,listeners:s}))}}if(0==(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(l="mouseover"===e||"pointerover"===e)||0!=(16&t)||!(c=n.relatedTarget||n.fromElement)||!Gr(c)&&!c[Jr])&&(u||l)&&(l=o.window===o?o:(l=o.ownerDocument)?l.defaultView||l.parentWindow:window,u?(u=r,null!==(c=(c=n.relatedTarget||n.toElement)?Gr(c):null)&&(c!==(f=Ye(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(u=null,c=r),u!==c)){if(s=vn,m="onMouseLeave",d="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(s=Tn,m="onPointerLeave",d="onPointerEnter",h="pointer"),f=null==u?l:eo(u),p=null==c?l:eo(c),(l=new s(m,h+"leave",u,n,o)).target=f,l.relatedTarget=p,m=null,Gr(o)===r&&((s=new s(d,h+"enter",c,n,o)).target=p,s.relatedTarget=f,m=s),f=m,u&&c)e:{for(d=c,h=0,p=s=u;p;p=Rr(p))h++;for(p=0,m=d;m;m=Rr(m))p++;for(;0<h-p;)s=Rr(s),h--;for(;0<p-h;)d=Rr(d),p--;for(;h--;){if(s===d||null!==d&&s===d.alternate)break e;s=Rr(s),d=Rr(d)}s=null}else s=null;null!==u&&jr(i,l,u,s,!1),null!==c&&null!==f&&jr(i,f,c,s,!0)}if("select"===(u=(l=r?eo(r):window).nodeName&&l.nodeName.toLowerCase())||"input"===u&&"file"===l.type)var v=Yn;else if(Hn(l))if(Jn)v=ar;else{v=rr;var y=nr}else(u=l.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===l.type||"radio"===l.type)&&(v=or);switch(v&&(v=v(e,r))?Vn(i,v,n,o):(y&&y(e,l,r),"focusout"===e&&(y=l._wrapperState)&&y.controlled&&"number"===l.type&&oe(l,"number",l.value)),y=r?eo(r):window,e){case"focusin":(Hn(y)||"true"===y.contentEditable)&&(mr=y,vr=r,yr=null);break;case"focusout":yr=vr=mr=null;break;case"mousedown":gr=!0;break;case"contextmenu":case"mouseup":case"dragend":gr=!1,br(i,n,o);break;case"selectionchange":if(hr)break;case"keydown":case"keyup":br(i,n,o)}var g;if(In)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else $n?Dn(e,n)&&(b="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(b="onCompositionStart");b&&(Fn&&"ko"!==n.locale&&($n||"onCompositionStart"!==b?"onCompositionEnd"===b&&$n&&(g=nn()):(en="value"in(Zt=o)?Zt.value:Zt.textContent,$n=!0)),0<(y=Ir(r,b)).length&&(b=new kn(b,e,null,n,o),i.push({event:b,listeners:y}),(g||null!==(g=Un(n)))&&(b.data=g))),(g=jn?function(e,t){switch(e){case"compositionend":return Un(t);case"keypress":return 32!==t.which?null:(zn=!0,Mn);case"textInput":return(e=t.data)===Mn&&zn?null:e;default:return null}}(e,n):function(e,t){if($n)return"compositionend"===e||!In&&Dn(e,t)?(e=nn(),tn=en=Zt=null,$n=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Fn&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))&&0<(r=Ir(r,"onBeforeInput")).length&&(o=new kn("onBeforeInput","beforeinput",null,n,o),i.push({event:o,listeners:r}),o.data=g)}Ar(i,t)}))}function Lr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Ir(e,t){for(var n=t+"Capture",r=[];null!==e;){var o=e,a=o.stateNode;5===o.tag&&null!==a&&(o=a,null!=(a=De(e,n))&&r.unshift(Lr(e,a,o)),null!=(a=De(e,t))&&r.push(Lr(e,a,o))),e=e.return}return r}function Rr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function jr(e,t,n,r,o){for(var a=t._reactName,i=[];null!==n&&n!==r;){var l=n,u=l.alternate,c=l.stateNode;if(null!==u&&u===r)break;5===l.tag&&null!==c&&(l=c,o?null!=(u=De(n,a))&&i.unshift(Lr(n,u,l)):o||null!=(u=De(n,a))&&i.push(Lr(n,u,l))),n=n.return}0!==i.length&&e.push({event:t,listeners:i})}function Fr(){}var Mr=null,zr=null;function Dr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Ur(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var $r="function"==typeof setTimeout?setTimeout:void 0,Br="function"==typeof clearTimeout?clearTimeout:void 0;function Hr(e){(1===e.nodeType||9===e.nodeType&&null!=(e=e.body))&&(e.textContent="")}function Vr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function Wr(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var Qr=0,qr=Math.random().toString(36).slice(2),Kr="__reactFiber$"+qr,Yr="__reactProps$"+qr,Jr="__reactContainer$"+qr,Xr="__reactEvents$"+qr;function Gr(e){var t=e[Kr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Jr]||n[Kr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=Wr(e);null!==e;){if(n=e[Kr])return n;e=Wr(e)}return t}n=(e=n).parentNode}return null}function Zr(e){return!(e=e[Kr]||e[Jr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function eo(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(i(33))}function to(e){return e[Yr]||null}function no(e){var t=e[Xr];return void 0===t&&(t=e[Xr]=new Set),t}var ro=[],oo=-1;function ao(e){return{current:e}}function io(e){0>oo||(e.current=ro[oo],ro[oo]=null,oo--)}function lo(e,t){oo++,ro[oo]=e.current,e.current=t}var uo={},co=ao(uo),so=ao(!1),fo=uo;function po(e,t){var n=e.type.contextTypes;if(!n)return uo;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,a={};for(o in n)a[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function ho(e){return null!=e.childContextTypes}function mo(){io(so),io(co)}function vo(e,t,n){if(co.current!==uo)throw Error(i(168));lo(co,t),lo(so,n)}function yo(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var a in r=r.getChildContext())if(!(a in e))throw Error(i(108,q(t)||"Unknown",a));return o({},n,r)}function go(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||uo,fo=co.current,lo(co,e),lo(so,so.current),!0}function bo(e,t,n){var r=e.stateNode;if(!r)throw Error(i(169));n?(e=yo(e,t,fo),r.__reactInternalMemoizedMergedChildContext=e,io(so),io(co),lo(co,e)):io(so),lo(so,n)}var wo=null,ko=null,Eo=a.unstable_runWithPriority,xo=a.unstable_scheduleCallback,So=a.unstable_cancelCallback,Ao=a.unstable_shouldYield,Co=a.unstable_requestPaint,_o=a.unstable_now,To=a.unstable_getCurrentPriorityLevel,Oo=a.unstable_ImmediatePriority,Po=a.unstable_UserBlockingPriority,No=a.unstable_NormalPriority,Lo=a.unstable_LowPriority,Io=a.unstable_IdlePriority,Ro={},jo=void 0!==Co?Co:function(){},Fo=null,Mo=null,zo=!1,Do=_o(),Uo=1e4>Do?_o:function(){return _o()-Do};function $o(){switch(To()){case Oo:return 99;case Po:return 98;case No:return 97;case Lo:return 96;case Io:return 95;default:throw Error(i(332))}}function Bo(e){switch(e){case 99:return Oo;case 98:return Po;case 97:return No;case 96:return Lo;case 95:return Io;default:throw Error(i(332))}}function Ho(e,t){return e=Bo(e),Eo(e,t)}function Vo(e,t,n){return e=Bo(e),xo(e,t,n)}function Wo(){if(null!==Mo){var e=Mo;Mo=null,So(e)}Qo()}function Qo(){if(!zo&&null!==Fo){zo=!0;var e=0;try{var t=Fo;Ho(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Fo=null}catch(t){throw null!==Fo&&(Fo=Fo.slice(e+1)),xo(Oo,Wo),t}finally{zo=!1}}}var qo=k.ReactCurrentBatchConfig;function Ko(e,t){if(e&&e.defaultProps){for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var Yo=ao(null),Jo=null,Xo=null,Go=null;function Zo(){Go=Xo=Jo=null}function ea(e){var t=Yo.current;io(Yo),e.type._context._currentValue=t}function ta(e,t){for(;null!==e;){var n=e.alternate;if((e.childLanes&t)===t){if(null===n||(n.childLanes&t)===t)break;n.childLanes|=t}else e.childLanes|=t,null!==n&&(n.childLanes|=t);e=e.return}}function na(e,t){Jo=e,Go=Xo=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(Ii=!0),e.firstContext=null)}function ra(e,t){if(Go!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Go=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Xo){if(null===Jo)throw Error(i(308));Xo=t,Jo.dependencies={lanes:0,firstContext:t,responders:null}}else Xo=Xo.next=t;return e._currentValue}var oa=!1;function aa(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function ia(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function la(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function ua(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function ca(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var o=null,a=null;if(null!==(n=n.firstBaseUpdate)){do{var i={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===a?o=a=i:a=a.next=i,n=n.next}while(null!==n);null===a?o=a=t:a=a.next=t}else o=a=t;return n={baseState:r.baseState,firstBaseUpdate:o,lastBaseUpdate:a,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function sa(e,t,n,r){var a=e.updateQueue;oa=!1;var i=a.firstBaseUpdate,l=a.lastBaseUpdate,u=a.shared.pending;if(null!==u){a.shared.pending=null;var c=u,s=c.next;c.next=null,null===l?i=s:l.next=s,l=c;var f=e.alternate;if(null!==f){var d=(f=f.updateQueue).lastBaseUpdate;d!==l&&(null===d?f.firstBaseUpdate=s:d.next=s,f.lastBaseUpdate=c)}}if(null!==i){for(d=a.baseState,l=0,f=s=c=null;;){u=i.lane;var p=i.eventTime;if((r&u)===u){null!==f&&(f=f.next={eventTime:p,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var h=e,m=i;switch(u=t,p=n,m.tag){case 1:if("function"==typeof(h=m.payload)){d=h.call(p,d,u);break e}d=h;break e;case 3:h.flags=-4097&h.flags|64;case 0:if(null==(u="function"==typeof(h=m.payload)?h.call(p,d,u):h))break e;d=o({},d,u);break e;case 2:oa=!0}}null!==i.callback&&(e.flags|=32,null===(u=a.effects)?a.effects=[i]:u.push(i))}else p={eventTime:p,lane:u,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===f?(s=f=p,c=d):f=f.next=p,l|=u;if(null===(i=i.next)){if(null===(u=a.shared.pending))break;i=u.next,u.next=null,a.lastBaseUpdate=u,a.shared.pending=null}}null===f&&(c=d),a.baseState=c,a.firstBaseUpdate=s,a.lastBaseUpdate=f,jl|=l,e.lanes=l,e.memoizedState=d}}function fa(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],o=r.callback;if(null!==o){if(r.callback=null,r=n,"function"!=typeof o)throw Error(i(191,o));o.call(r)}}}var da=(new r.Component).refs;function pa(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var ha={isMounted:function(e){return!!(e=e._reactInternals)&&Ye(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=iu(),o=lu(e),a=la(r,o);a.payload=t,null!=n&&(a.callback=n),ua(e,a),uu(e,o,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=iu(),o=lu(e),a=la(r,o);a.tag=1,a.payload=t,null!=n&&(a.callback=n),ua(e,a),uu(e,o,r)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=iu(),r=lu(e),o=la(n,r);o.tag=2,null!=t&&(o.callback=t),ua(e,o),uu(e,r,n)}};function ma(e,t,n,r,o,a,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,a,i):!(t.prototype&&t.prototype.isPureReactComponent&&ur(n,r)&&ur(o,a))}function va(e,t,n){var r=!1,o=uo,a=t.contextType;return"object"==typeof a&&null!==a?a=ra(a):(o=ho(t)?fo:co.current,a=(r=null!=(r=t.contextTypes))?po(e,o):uo),t=new t(n,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ha,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=a),t}function ya(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&ha.enqueueReplaceState(t,t.state,null)}function ga(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=da,aa(e);var a=t.contextType;"object"==typeof a&&null!==a?o.context=ra(a):(a=ho(t)?fo:co.current,o.context=po(e,a)),sa(e,n,o,r),o.state=e.memoizedState,"function"==typeof(a=t.getDerivedStateFromProps)&&(pa(e,t,a,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&ha.enqueueReplaceState(o,o.state,null),sa(e,n,o,r),o.state=e.memoizedState),"function"==typeof o.componentDidMount&&(e.flags|=4)}var ba=Array.isArray;function wa(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(i(309));var r=n.stateNode}if(!r)throw Error(i(147,e));var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===da&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}if("string"!=typeof e)throw Error(i(284));if(!n._owner)throw Error(i(290,e))}return e}function ka(e,t){if("textarea"!==e.type)throw Error(i(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t))}function Ea(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.flags=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t){return(e=Uu(e,t)).index=0,e.sibling=null,e}function a(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags=2,n):r:(t.flags=2,n):n}function l(t){return e&&null===t.alternate&&(t.flags=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Vu(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=wa(e,t,n),r.return=e,r):((r=$u(n.type,n.key,n.props,null,e.mode,r)).ref=wa(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Wu(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,a){return null===t||7!==t.tag?((t=Bu(n,e.mode,r,a)).return=e,t):((t=o(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Vu(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case E:return(n=$u(t.type,t.key,t.props,null,e.mode,n)).ref=wa(e,null,t),n.return=e,n;case x:return(t=Wu(t,e.mode,n)).return=e,t}if(ba(t)||B(t))return(t=Bu(t,e.mode,n,null)).return=e,t;ka(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case E:return n.key===o?n.type===S?f(e,t,n.props.children,r,o):c(e,t,n,r):null;case x:return n.key===o?s(e,t,n,r):null}if(ba(n)||B(n))return null!==o?null:f(e,t,n,r,null);ka(e,n)}return null}function h(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case E:return e=e.get(null===r.key?n:r.key)||null,r.type===S?f(t,e,r.props.children,o,r.key):c(t,e,r,o);case x:return s(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(ba(r)||B(r))return f(t,e=e.get(n)||null,r,o,null);ka(t,r)}return null}function m(o,i,l,u){for(var c=null,s=null,f=i,m=i=0,v=null;null!==f&&m<l.length;m++){f.index>m?(v=f,f=null):v=f.sibling;var y=p(o,f,l[m],u);if(null===y){null===f&&(f=v);break}e&&f&&null===y.alternate&&t(o,f),i=a(y,i,m),null===s?c=y:s.sibling=y,s=y,f=v}if(m===l.length)return n(o,f),c;if(null===f){for(;m<l.length;m++)null!==(f=d(o,l[m],u))&&(i=a(f,i,m),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(o,f);m<l.length;m++)null!==(v=h(f,o,m,l[m],u))&&(e&&null!==v.alternate&&f.delete(null===v.key?m:v.key),i=a(v,i,m),null===s?c=v:s.sibling=v,s=v);return e&&f.forEach((function(e){return t(o,e)})),c}function v(o,l,u,c){var s=B(u);if("function"!=typeof s)throw Error(i(150));if(null==(u=s.call(u)))throw Error(i(151));for(var f=s=null,m=l,v=l=0,y=null,g=u.next();null!==m&&!g.done;v++,g=u.next()){m.index>v?(y=m,m=null):y=m.sibling;var b=p(o,m,g.value,c);if(null===b){null===m&&(m=y);break}e&&m&&null===b.alternate&&t(o,m),l=a(b,l,v),null===f?s=b:f.sibling=b,f=b,m=y}if(g.done)return n(o,m),s;if(null===m){for(;!g.done;v++,g=u.next())null!==(g=d(o,g.value,c))&&(l=a(g,l,v),null===f?s=g:f.sibling=g,f=g);return s}for(m=r(o,m);!g.done;v++,g=u.next())null!==(g=h(m,o,v,g.value,c))&&(e&&null!==g.alternate&&m.delete(null===g.key?v:g.key),l=a(g,l,v),null===f?s=g:f.sibling=g,f=g);return e&&m.forEach((function(e){return t(o,e)})),s}return function(e,r,a,u){var c="object"==typeof a&&null!==a&&a.type===S&&null===a.key;c&&(a=a.props.children);var s="object"==typeof a&&null!==a;if(s)switch(a.$$typeof){case E:e:{for(s=a.key,c=r;null!==c;){if(c.key===s){switch(c.tag){case 7:if(a.type===S){n(e,c.sibling),(r=o(c,a.props.children)).return=e,e=r;break e}break;default:if(c.elementType===a.type){n(e,c.sibling),(r=o(c,a.props)).ref=wa(e,c,a),r.return=e,e=r;break e}}n(e,c);break}t(e,c),c=c.sibling}a.type===S?((r=Bu(a.props.children,e.mode,u,a.key)).return=e,e=r):((u=$u(a.type,a.key,a.props,null,e.mode,u)).ref=wa(e,r,a),u.return=e,e=u)}return l(e);case x:e:{for(c=a.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===a.containerInfo&&r.stateNode.implementation===a.implementation){n(e,r.sibling),(r=o(r,a.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Wu(a,e.mode,u)).return=e,e=r}return l(e)}if("string"==typeof a||"number"==typeof a)return a=""+a,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,a)).return=e,e=r):(n(e,r),(r=Vu(a,e.mode,u)).return=e,e=r),l(e);if(ba(a))return m(e,r,a,u);if(B(a))return v(e,r,a,u);if(s&&ka(e,a),void 0===a&&!c)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(i(152,q(e.type)||"Component"))}return n(e,r)}}var xa=Ea(!0),Sa=Ea(!1),Aa={},Ca=ao(Aa),_a=ao(Aa),Ta=ao(Aa);function Oa(e){if(e===Aa)throw Error(i(174));return e}function Pa(e,t){switch(lo(Ta,t),lo(_a,e),lo(Ca,Aa),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:pe(null,"");break;default:t=pe(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}io(Ca),lo(Ca,t)}function Na(){io(Ca),io(_a),io(Ta)}function La(e){Oa(Ta.current);var t=Oa(Ca.current),n=pe(t,e.type);t!==n&&(lo(_a,e),lo(Ca,n))}function Ia(e){_a.current===e&&(io(Ca),io(_a))}var Ra=ao(0);function ja(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var Fa=null,Ma=null,za=!1;function Da(e,t){var n=zu(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Ua(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function $a(e){if(za){var t=Ma;if(t){var n=t;if(!Ua(e,t)){if(!(t=Vr(n.nextSibling))||!Ua(e,t))return e.flags=-1025&e.flags|2,za=!1,void(Fa=e);Da(Fa,n)}Fa=e,Ma=Vr(t.firstChild)}else e.flags=-1025&e.flags|2,za=!1,Fa=e}}function Ba(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Fa=e}function Ha(e){if(e!==Fa)return!1;if(!za)return Ba(e),za=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Ur(t,e.memoizedProps))for(t=Ma;t;)Da(e,t),t=Vr(t.nextSibling);if(Ba(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(i(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){Ma=Vr(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}Ma=null}}else Ma=Fa?Vr(e.stateNode.nextSibling):null;return!0}function Va(){Ma=Fa=null,za=!1}var Wa=[];function Qa(){for(var e=0;e<Wa.length;e++)Wa[e]._workInProgressVersionPrimary=null;Wa.length=0}var qa=k.ReactCurrentDispatcher,Ka=k.ReactCurrentBatchConfig,Ya=0,Ja=null,Xa=null,Ga=null,Za=!1,ei=!1;function ti(){throw Error(i(321))}function ni(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!ir(e[n],t[n]))return!1;return!0}function ri(e,t,n,r,o,a){if(Ya=a,Ja=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,qa.current=null===e||null===e.memoizedState?Oi:Pi,e=n(r,o),ei){a=0;do{if(ei=!1,!(25>a))throw Error(i(301));a+=1,Ga=Xa=null,t.updateQueue=null,qa.current=Ni,e=n(r,o)}while(ei)}if(qa.current=Ti,t=null!==Xa&&null!==Xa.next,Ya=0,Ga=Xa=Ja=null,Za=!1,t)throw Error(i(300));return e}function oi(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Ga?Ja.memoizedState=Ga=e:Ga=Ga.next=e,Ga}function ai(){if(null===Xa){var e=Ja.alternate;e=null!==e?e.memoizedState:null}else e=Xa.next;var t=null===Ga?Ja.memoizedState:Ga.next;if(null!==t)Ga=t,Xa=e;else{if(null===e)throw Error(i(310));e={memoizedState:(Xa=e).memoizedState,baseState:Xa.baseState,baseQueue:Xa.baseQueue,queue:Xa.queue,next:null},null===Ga?Ja.memoizedState=Ga=e:Ga=Ga.next=e}return Ga}function ii(e,t){return"function"==typeof t?t(e):t}function li(e){var t=ai(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var r=Xa,o=r.baseQueue,a=n.pending;if(null!==a){if(null!==o){var l=o.next;o.next=a.next,a.next=l}r.baseQueue=o=a,n.pending=null}if(null!==o){o=o.next,r=r.baseState;var u=l=a=null,c=o;do{var s=c.lane;if((Ya&s)===s)null!==u&&(u=u.next={lane:0,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),r=c.eagerReducer===e?c.eagerState:e(r,c.action);else{var f={lane:s,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===u?(l=u=f,a=r):u=u.next=f,Ja.lanes|=s,jl|=s}c=c.next}while(null!==c&&c!==o);null===u?a=r:u.next=l,ir(r,t.memoizedState)||(Ii=!0),t.memoizedState=r,t.baseState=a,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function ui(e){var t=ai(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var r=n.dispatch,o=n.pending,a=t.memoizedState;if(null!==o){n.pending=null;var l=o=o.next;do{a=e(a,l.action),l=l.next}while(l!==o);ir(a,t.memoizedState)||(Ii=!0),t.memoizedState=a,null===t.baseQueue&&(t.baseState=a),n.lastRenderedState=a}return[a,r]}function ci(e,t,n){var r=t._getVersion;r=r(t._source);var o=t._workInProgressVersionPrimary;if(null!==o?e=o===r:(e=e.mutableReadLanes,(e=(Ya&e)===e)&&(t._workInProgressVersionPrimary=r,Wa.push(t))),e)return n(t._source);throw Wa.push(t),Error(i(350))}function si(e,t,n,r){var o=_l;if(null===o)throw Error(i(349));var a=t._getVersion,l=a(t._source),u=qa.current,c=u.useState((function(){return ci(o,t,n)})),s=c[1],f=c[0];c=Ga;var d=e.memoizedState,p=d.refs,h=p.getSnapshot,m=d.source;d=d.subscribe;var v=Ja;return e.memoizedState={refs:p,source:t,subscribe:r},u.useEffect((function(){p.getSnapshot=n,p.setSnapshot=s;var e=a(t._source);if(!ir(l,e)){e=n(t._source),ir(f,e)||(s(e),e=lu(v),o.mutableReadLanes|=e&o.pendingLanes),e=o.mutableReadLanes,o.entangledLanes|=e;for(var r=o.entanglements,i=e;0<i;){var u=31-Ht(i),c=1<<u;r[u]|=e,i&=~c}}}),[n,t,r]),u.useEffect((function(){return r(t._source,(function(){var e=p.getSnapshot,n=p.setSnapshot;try{n(e(t._source));var r=lu(v);o.mutableReadLanes|=r&o.pendingLanes}catch(e){n((function(){throw e}))}}))}),[t,r]),ir(h,n)&&ir(m,t)&&ir(d,r)||((e={pending:null,dispatch:null,lastRenderedReducer:ii,lastRenderedState:f}).dispatch=s=_i.bind(null,Ja,e),c.queue=e,c.baseQueue=null,f=ci(o,t,n),c.memoizedState=c.baseState=f),f}function fi(e,t,n){return si(ai(),e,t,n)}function di(e){var t=oi();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:ii,lastRenderedState:e}).dispatch=_i.bind(null,Ja,e),[t.memoizedState,e]}function pi(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Ja.updateQueue)?(t={lastEffect:null},Ja.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function hi(e){return e={current:e},oi().memoizedState=e}function mi(){return ai().memoizedState}function vi(e,t,n,r){var o=oi();Ja.flags|=e,o.memoizedState=pi(1|t,n,void 0,void 0===r?null:r)}function yi(e,t,n,r){var o=ai();r=void 0===r?null:r;var a=void 0;if(null!==Xa){var i=Xa.memoizedState;if(a=i.destroy,null!==r&&ni(r,i.deps))return void pi(t,n,a,r)}Ja.flags|=e,o.memoizedState=pi(1|t,n,a,r)}function gi(e,t){return vi(516,4,e,t)}function bi(e,t){return yi(516,4,e,t)}function wi(e,t){return yi(4,2,e,t)}function ki(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Ei(e,t,n){return n=null!=n?n.concat([e]):null,yi(4,2,ki.bind(null,t,e),n)}function xi(){}function Si(e,t){var n=ai();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&ni(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Ai(e,t){var n=ai();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&ni(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Ci(e,t){var n=$o();Ho(98>n?98:n,(function(){e(!0)})),Ho(97<n?97:n,(function(){var n=Ka.transition;Ka.transition=1;try{e(!1),t()}finally{Ka.transition=n}}))}function _i(e,t,n){var r=iu(),o=lu(e),a={lane:o,action:n,eagerReducer:null,eagerState:null,next:null},i=t.pending;if(null===i?a.next=a:(a.next=i.next,i.next=a),t.pending=a,i=e.alternate,e===Ja||null!==i&&i===Ja)ei=Za=!0;else{if(0===e.lanes&&(null===i||0===i.lanes)&&null!==(i=t.lastRenderedReducer))try{var l=t.lastRenderedState,u=i(l,n);if(a.eagerReducer=i,a.eagerState=u,ir(u,l))return}catch(e){}uu(e,o,r)}}var Ti={readContext:ra,useCallback:ti,useContext:ti,useEffect:ti,useImperativeHandle:ti,useLayoutEffect:ti,useMemo:ti,useReducer:ti,useRef:ti,useState:ti,useDebugValue:ti,useDeferredValue:ti,useTransition:ti,useMutableSource:ti,useOpaqueIdentifier:ti,unstable_isNewReconciler:!1},Oi={readContext:ra,useCallback:function(e,t){return oi().memoizedState=[e,void 0===t?null:t],e},useContext:ra,useEffect:gi,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,vi(4,2,ki.bind(null,t,e),n)},useLayoutEffect:function(e,t){return vi(4,2,e,t)},useMemo:function(e,t){var n=oi();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=oi();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=_i.bind(null,Ja,e),[r.memoizedState,e]},useRef:hi,useState:di,useDebugValue:xi,useDeferredValue:function(e){var t=di(e),n=t[0],r=t[1];return gi((function(){var t=Ka.transition;Ka.transition=1;try{r(e)}finally{Ka.transition=t}}),[e]),n},useTransition:function(){var e=di(!1),t=e[0];return hi(e=Ci.bind(null,e[1])),[e,t]},useMutableSource:function(e,t,n){var r=oi();return r.memoizedState={refs:{getSnapshot:t,setSnapshot:null},source:e,subscribe:n},si(r,e,t,n)},useOpaqueIdentifier:function(){if(za){var e=!1,t=function(e){return{$$typeof:j,toString:e,valueOf:e}}((function(){throw e||(e=!0,n("r:"+(Qr++).toString(36))),Error(i(355))})),n=di(t)[1];return 0==(2&Ja.mode)&&(Ja.flags|=516,pi(5,(function(){n("r:"+(Qr++).toString(36))}),void 0,null)),t}return di(t="r:"+(Qr++).toString(36)),t},unstable_isNewReconciler:!1},Pi={readContext:ra,useCallback:Si,useContext:ra,useEffect:bi,useImperativeHandle:Ei,useLayoutEffect:wi,useMemo:Ai,useReducer:li,useRef:mi,useState:function(){return li(ii)},useDebugValue:xi,useDeferredValue:function(e){var t=li(ii),n=t[0],r=t[1];return bi((function(){var t=Ka.transition;Ka.transition=1;try{r(e)}finally{Ka.transition=t}}),[e]),n},useTransition:function(){var e=li(ii)[0];return[mi().current,e]},useMutableSource:fi,useOpaqueIdentifier:function(){return li(ii)[0]},unstable_isNewReconciler:!1},Ni={readContext:ra,useCallback:Si,useContext:ra,useEffect:bi,useImperativeHandle:Ei,useLayoutEffect:wi,useMemo:Ai,useReducer:ui,useRef:mi,useState:function(){return ui(ii)},useDebugValue:xi,useDeferredValue:function(e){var t=ui(ii),n=t[0],r=t[1];return bi((function(){var t=Ka.transition;Ka.transition=1;try{r(e)}finally{Ka.transition=t}}),[e]),n},useTransition:function(){var e=ui(ii)[0];return[mi().current,e]},useMutableSource:fi,useOpaqueIdentifier:function(){return ui(ii)[0]},unstable_isNewReconciler:!1},Li=k.ReactCurrentOwner,Ii=!1;function Ri(e,t,n,r){t.child=null===e?Sa(t,null,n,r):xa(t,e.child,n,r)}function ji(e,t,n,r,o){n=n.render;var a=t.ref;return na(t,o),r=ri(e,t,n,r,a,o),null===e||Ii?(t.flags|=1,Ri(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~o,Zi(e,t,o))}function Fi(e,t,n,r,o,a){if(null===e){var i=n.type;return"function"!=typeof i||Du(i)||void 0!==i.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=$u(n.type,null,r,t,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=i,Mi(e,t,i,r,o,a))}return i=e.child,0==(o&a)&&(o=i.memoizedProps,(n=null!==(n=n.compare)?n:ur)(o,r)&&e.ref===t.ref)?Zi(e,t,a):(t.flags|=1,(e=Uu(i,r)).ref=t.ref,e.return=t,t.child=e)}function Mi(e,t,n,r,o,a){if(null!==e&&ur(e.memoizedProps,r)&&e.ref===t.ref){if(Ii=!1,0==(a&o))return t.lanes=e.lanes,Zi(e,t,a);0!=(16384&e.flags)&&(Ii=!0)}return Ui(e,t,n,r,a)}function zi(e,t,n){var r=t.pendingProps,o=r.children,a=null!==e?e.memoizedState:null;if("hidden"===r.mode||"unstable-defer-without-hiding"===r.mode)if(0==(4&t.mode))t.memoizedState={baseLanes:0},vu(0,n);else{if(0==(1073741824&n))return e=null!==a?a.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e},vu(0,e),null;t.memoizedState={baseLanes:0},vu(0,null!==a?a.baseLanes:n)}else null!==a?(r=a.baseLanes|n,t.memoizedState=null):r=n,vu(0,r);return Ri(e,t,o,n),t.child}function Di(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=128)}function Ui(e,t,n,r,o){var a=ho(n)?fo:co.current;return a=po(t,a),na(t,o),n=ri(e,t,n,r,a,o),null===e||Ii?(t.flags|=1,Ri(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~o,Zi(e,t,o))}function $i(e,t,n,r,o){if(ho(n)){var a=!0;go(t)}else a=!1;if(na(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),va(t,n,r),ga(t,n,r,o),r=!0;else if(null===e){var i=t.stateNode,l=t.memoizedProps;i.props=l;var u=i.context,c=n.contextType;c="object"==typeof c&&null!==c?ra(c):po(t,c=ho(n)?fo:co.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof i.getSnapshotBeforeUpdate;f||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==r||u!==c)&&ya(t,i,r,c),oa=!1;var d=t.memoizedState;i.state=d,sa(t,r,i,o),u=t.memoizedState,l!==r||d!==u||so.current||oa?("function"==typeof s&&(pa(t,n,s,r),u=t.memoizedState),(l=oa||ma(t,n,l,r,d,u,c))?(f||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(t.flags|=4)):("function"==typeof i.componentDidMount&&(t.flags|=4),t.memoizedProps=r,t.memoizedState=u),i.props=r,i.state=u,i.context=c,r=l):("function"==typeof i.componentDidMount&&(t.flags|=4),r=!1)}else{i=t.stateNode,ia(e,t),l=t.memoizedProps,c=t.type===t.elementType?l:Ko(t.type,l),i.props=c,f=t.pendingProps,d=i.context,u="object"==typeof(u=n.contextType)&&null!==u?ra(u):po(t,u=ho(n)?fo:co.current);var p=n.getDerivedStateFromProps;(s="function"==typeof p||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==f||d!==u)&&ya(t,i,r,u),oa=!1,d=t.memoizedState,i.state=d,sa(t,r,i,o);var h=t.memoizedState;l!==f||d!==h||so.current||oa?("function"==typeof p&&(pa(t,n,p,r),h=t.memoizedState),(c=oa||ma(t,n,c,r,d,h,u))?(s||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,h,u),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,h,u)),"function"==typeof i.componentDidUpdate&&(t.flags|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(t.flags|=256)):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),t.memoizedProps=r,t.memoizedState=h),i.props=r,i.state=h,i.context=u,r=c):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),r=!1)}return Bi(e,t,n,r,a,o)}function Bi(e,t,n,r,o,a){Di(e,t);var i=0!=(64&t.flags);if(!r&&!i)return o&&bo(t,n,!1),Zi(e,t,a);r=t.stateNode,Li.current=t;var l=i&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&i?(t.child=xa(t,e.child,null,a),t.child=xa(t,null,l,a)):Ri(e,t,l,a),t.memoizedState=r.state,o&&bo(t,n,!0),t.child}function Hi(e){var t=e.stateNode;t.pendingContext?vo(0,t.pendingContext,t.pendingContext!==t.context):t.context&&vo(0,t.context,!1),Pa(e,t.containerInfo)}var Vi,Wi,Qi,qi={dehydrated:null,retryLane:0};function Ki(e,t,n){var r,o=t.pendingProps,a=Ra.current,i=!1;return(r=0!=(64&t.flags))||(r=(null===e||null!==e.memoizedState)&&0!=(2&a)),r?(i=!0,t.flags&=-65):null!==e&&null===e.memoizedState||void 0===o.fallback||!0===o.unstable_avoidThisFallback||(a|=1),lo(Ra,1&a),null===e?(void 0!==o.fallback&&$a(t),e=o.children,a=o.fallback,i?(e=Yi(t,e,a,n),t.child.memoizedState={baseLanes:n},t.memoizedState=qi,e):"number"==typeof o.unstable_expectedLoadTime?(e=Yi(t,e,a,n),t.child.memoizedState={baseLanes:n},t.memoizedState=qi,t.lanes=33554432,e):((n=Hu({mode:"visible",children:e},t.mode,n,null)).return=t,t.child=n)):(e.memoizedState,i?(o=function(e,t,n,r,o){var a=t.mode,i=e.child;e=i.sibling;var l={mode:"hidden",children:n};return 0==(2&a)&&t.child!==i?((n=t.child).childLanes=0,n.pendingProps=l,null!==(i=n.lastEffect)?(t.firstEffect=n.firstEffect,t.lastEffect=i,i.nextEffect=null):t.firstEffect=t.lastEffect=null):n=Uu(i,l),null!==e?r=Uu(e,r):(r=Bu(r,a,o,null)).flags|=2,r.return=t,n.return=t,n.sibling=r,t.child=n,r}(e,t,o.children,o.fallback,n),i=t.child,a=e.child.memoizedState,i.memoizedState=null===a?{baseLanes:n}:{baseLanes:a.baseLanes|n},i.childLanes=e.childLanes&~n,t.memoizedState=qi,o):(n=function(e,t,n,r){var o=e.child;return e=o.sibling,n=Uu(o,{mode:"visible",children:n}),0==(2&t.mode)&&(n.lanes=r),n.return=t,n.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,t.firstEffect=t.lastEffect=e),t.child=n}(e,t,o.children,n),t.memoizedState=null,n))}function Yi(e,t,n,r){var o=e.mode,a=e.child;return t={mode:"hidden",children:t},0==(2&o)&&null!==a?(a.childLanes=0,a.pendingProps=t):a=Hu(t,o,0,null),n=Bu(n,o,r,null),a.return=e,n.return=e,a.sibling=n,e.child=a,n}function Ji(e,t){e.lanes|=t;var n=e.alternate;null!==n&&(n.lanes|=t),ta(e.return,t)}function Xi(e,t,n,r,o,a){var i=e.memoizedState;null===i?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:o,lastEffect:a}:(i.isBackwards=t,i.rendering=null,i.renderingStartTime=0,i.last=r,i.tail=n,i.tailMode=o,i.lastEffect=a)}function Gi(e,t,n){var r=t.pendingProps,o=r.revealOrder,a=r.tail;if(Ri(e,t,r.children,n),0!=(2&(r=Ra.current)))r=1&r|2,t.flags|=64;else{if(null!==e&&0!=(64&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Ji(e,n);else if(19===e.tag)Ji(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(lo(Ra,r),0==(2&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(n=t.child,o=null;null!==n;)null!==(e=n.alternate)&&null===ja(e)&&(o=n),n=n.sibling;null===(n=o)?(o=t.child,t.child=null):(o=n.sibling,n.sibling=null),Xi(t,!1,o,n,a,t.lastEffect);break;case"backwards":for(n=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===ja(e)){t.child=o;break}e=o.sibling,o.sibling=n,n=o,o=e}Xi(t,!0,n,null,a,t.lastEffect);break;case"together":Xi(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Zi(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),jl|=t.lanes,0!=(n&t.childLanes)){if(null!==e&&t.child!==e.child)throw Error(i(153));if(null!==t.child){for(n=Uu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Uu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}return null}function el(e,t){if(!za)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function tl(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return ho(t.type)&&mo(),null;case 3:return Na(),io(so),io(co),Qa(),(r=t.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(Ha(t)?t.flags|=4:r.hydrate||(t.flags|=256)),null;case 5:Ia(t);var a=Oa(Ta.current);if(n=t.type,null!==e&&null!=t.stateNode)Wi(e,t,n,r),e.ref!==t.ref&&(t.flags|=128);else{if(!r){if(null===t.stateNode)throw Error(i(166));return null}if(e=Oa(Ca.current),Ha(t)){r=t.stateNode,n=t.type;var l=t.memoizedProps;switch(r[Kr]=t,r[Yr]=l,n){case"dialog":Cr("cancel",r),Cr("close",r);break;case"iframe":case"object":case"embed":Cr("load",r);break;case"video":case"audio":for(e=0;e<Er.length;e++)Cr(Er[e],r);break;case"source":Cr("error",r);break;case"img":case"image":case"link":Cr("error",r),Cr("load",r);break;case"details":Cr("toggle",r);break;case"input":ee(r,l),Cr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!l.multiple},Cr("invalid",r);break;case"textarea":ue(r,l),Cr("invalid",r)}for(var c in xe(n,l),e=null,l)l.hasOwnProperty(c)&&(a=l[c],"children"===c?"string"==typeof a?r.textContent!==a&&(e=["children",a]):"number"==typeof a&&r.textContent!==""+a&&(e=["children",""+a]):u.hasOwnProperty(c)&&null!=a&&"onScroll"===c&&Cr("scroll",r));switch(n){case"input":J(r),re(r,l,!0);break;case"textarea":J(r),se(r);break;case"select":case"option":break;default:"function"==typeof l.onClick&&(r.onclick=Fr)}r=e,t.updateQueue=r,null!==r&&(t.flags|=4)}else{switch(c=9===a.nodeType?a:a.ownerDocument,e===fe&&(e=de(n)),e===fe?"script"===n?((e=c.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=c.createElement(n,{is:r.is}):(e=c.createElement(n),"select"===n&&(c=e,r.multiple?c.multiple=!0:r.size&&(c.size=r.size))):e=c.createElementNS(e,n),e[Kr]=t,e[Yr]=r,Vi(e,t),t.stateNode=e,c=Se(n,r),n){case"dialog":Cr("cancel",e),Cr("close",e),a=r;break;case"iframe":case"object":case"embed":Cr("load",e),a=r;break;case"video":case"audio":for(a=0;a<Er.length;a++)Cr(Er[a],e);a=r;break;case"source":Cr("error",e),a=r;break;case"img":case"image":case"link":Cr("error",e),Cr("load",e),a=r;break;case"details":Cr("toggle",e),a=r;break;case"input":ee(e,r),a=Z(e,r),Cr("invalid",e);break;case"option":a=ae(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},a=o({},r,{value:void 0}),Cr("invalid",e);break;case"textarea":ue(e,r),a=le(e,r),Cr("invalid",e);break;default:a=r}xe(n,a);var s=a;for(l in s)if(s.hasOwnProperty(l)){var f=s[l];"style"===l?ke(e,f):"dangerouslySetInnerHTML"===l?null!=(f=f?f.__html:void 0)&&ve(e,f):"children"===l?"string"==typeof f?("textarea"!==n||""!==f)&&ye(e,f):"number"==typeof f&&ye(e,""+f):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(u.hasOwnProperty(l)?null!=f&&"onScroll"===l&&Cr("scroll",e):null!=f&&w(e,l,f,c))}switch(n){case"input":J(e),re(e,r,!1);break;case"textarea":J(e),se(e);break;case"option":null!=r.value&&e.setAttribute("value",""+K(r.value));break;case"select":e.multiple=!!r.multiple,null!=(l=r.value)?ie(e,!!r.multiple,l,!1):null!=r.defaultValue&&ie(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof a.onClick&&(e.onclick=Fr)}Dr(n,r)&&(t.flags|=4)}null!==t.ref&&(t.flags|=128)}return null;case 6:if(e&&null!=t.stateNode)Qi(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(i(166));n=Oa(Ta.current),Oa(Ca.current),Ha(t)?(r=t.stateNode,n=t.memoizedProps,r[Kr]=t,r.nodeValue!==n&&(t.flags|=4)):((r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[Kr]=t,t.stateNode=r)}return null;case 13:return io(Ra),r=t.memoizedState,0!=(64&t.flags)?(t.lanes=n,t):(r=null!==r,n=!1,null===e?void 0!==t.memoizedProps.fallback&&Ha(t):n=null!==e.memoizedState,r&&!n&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Ra.current)?0===Ll&&(Ll=3):(0!==Ll&&3!==Ll||(Ll=4),null===_l||0==(134217727&jl)&&0==(134217727&Fl)||du(_l,Ol))),(r||n)&&(t.flags|=4),null);case 4:return Na(),null===e&&Tr(t.stateNode.containerInfo),null;case 10:return ea(t),null;case 17:return ho(t.type)&&mo(),null;case 19:if(io(Ra),null===(r=t.memoizedState))return null;if(l=0!=(64&t.flags),null===(c=r.rendering))if(l)el(r,!1);else{if(0!==Ll||null!==e&&0!=(64&e.flags))for(e=t.child;null!==e;){if(null!==(c=ja(e))){for(t.flags|=64,el(r,!1),null!==(l=c.updateQueue)&&(t.updateQueue=l,t.flags|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=n,n=t.child;null!==n;)e=r,(l=n).flags&=2,l.nextEffect=null,l.firstEffect=null,l.lastEffect=null,null===(c=l.alternate)?(l.childLanes=0,l.lanes=e,l.child=null,l.memoizedProps=null,l.memoizedState=null,l.updateQueue=null,l.dependencies=null,l.stateNode=null):(l.childLanes=c.childLanes,l.lanes=c.lanes,l.child=c.child,l.memoizedProps=c.memoizedProps,l.memoizedState=c.memoizedState,l.updateQueue=c.updateQueue,l.type=c.type,e=c.dependencies,l.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return lo(Ra,1&Ra.current|2),t.child}e=e.sibling}null!==r.tail&&Uo()>Ul&&(t.flags|=64,l=!0,el(r,!1),t.lanes=33554432)}else{if(!l)if(null!==(e=ja(c))){if(t.flags|=64,l=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),el(r,!0),null===r.tail&&"hidden"===r.tailMode&&!c.alternate&&!za)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Uo()-r.renderingStartTime>Ul&&1073741824!==n&&(t.flags|=64,l=!0,el(r,!1),t.lanes=33554432);r.isBackwards?(c.sibling=t.child,t.child=c):(null!==(n=r.last)?n.sibling=c:t.child=c,r.last=c)}return null!==r.tail?(n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Uo(),n.sibling=null,t=Ra.current,lo(Ra,l?1&t|2:1&t),n):null;case 23:case 24:return yu(),null!==e&&null!==e.memoizedState!=(null!==t.memoizedState)&&"unstable-defer-without-hiding"!==r.mode&&(t.flags|=4),null}throw Error(i(156,t.tag))}function nl(e){switch(e.tag){case 1:ho(e.type)&&mo();var t=e.flags;return 4096&t?(e.flags=-4097&t|64,e):null;case 3:if(Na(),io(so),io(co),Qa(),0!=(64&(t=e.flags)))throw Error(i(285));return e.flags=-4097&t|64,e;case 5:return Ia(e),null;case 13:return io(Ra),4096&(t=e.flags)?(e.flags=-4097&t|64,e):null;case 19:return io(Ra),null;case 4:return Na(),null;case 10:return ea(e),null;case 23:case 24:return yu(),null;default:return null}}function rl(e,t){try{var n="",r=t;do{n+=Q(r),r=r.return}while(r);var o=n}catch(e){o="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:o}}function ol(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}Vi=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Wi=function(e,t,n,r){var a=e.memoizedProps;if(a!==r){e=t.stateNode,Oa(Ca.current);var i,l=null;switch(n){case"input":a=Z(e,a),r=Z(e,r),l=[];break;case"option":a=ae(e,a),r=ae(e,r),l=[];break;case"select":a=o({},a,{value:void 0}),r=o({},r,{value:void 0}),l=[];break;case"textarea":a=le(e,a),r=le(e,r),l=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(e.onclick=Fr)}for(f in xe(n,r),n=null,a)if(!r.hasOwnProperty(f)&&a.hasOwnProperty(f)&&null!=a[f])if("style"===f){var c=a[f];for(i in c)c.hasOwnProperty(i)&&(n||(n={}),n[i]="")}else"dangerouslySetInnerHTML"!==f&&"children"!==f&&"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(u.hasOwnProperty(f)?l||(l=[]):(l=l||[]).push(f,null));for(f in r){var s=r[f];if(c=null!=a?a[f]:void 0,r.hasOwnProperty(f)&&s!==c&&(null!=s||null!=c))if("style"===f)if(c){for(i in c)!c.hasOwnProperty(i)||s&&s.hasOwnProperty(i)||(n||(n={}),n[i]="");for(i in s)s.hasOwnProperty(i)&&c[i]!==s[i]&&(n||(n={}),n[i]=s[i])}else n||(l||(l=[]),l.push(f,n)),n=s;else"dangerouslySetInnerHTML"===f?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(l=l||[]).push(f,s)):"children"===f?"string"!=typeof s&&"number"!=typeof s||(l=l||[]).push(f,""+s):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&(u.hasOwnProperty(f)?(null!=s&&"onScroll"===f&&Cr("scroll",e),l||c===s||(l=[])):"object"==typeof s&&null!==s&&s.$$typeof===j?s.toString():(l=l||[]).push(f,s))}n&&(l=l||[]).push("style",n);var f=l;(t.updateQueue=f)&&(t.flags|=4)}},Qi=function(e,t,n,r){n!==r&&(t.flags|=4)};var al="function"==typeof WeakMap?WeakMap:Map;function il(e,t,n){(n=la(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Vl||(Vl=!0,Wl=r),ol(0,t)},n}function ll(e,t,n){(n=la(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return ol(0,t),r(o)}}var a=e.stateNode;return null!==a&&"function"==typeof a.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Ql?Ql=new Set([this]):Ql.add(this),ol(0,t));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}var ul="function"==typeof WeakSet?WeakSet:Set;function cl(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Ru(e,t)}else t.current=null}function sl(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.flags&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Ko(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:return void(256&t.flags&&Hr(t.stateNode.containerInfo));case 5:case 6:case 4:case 17:return}throw Error(i(163))}function fl(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{if(3==(3&e.tag)){var r=e.create;e.destroy=r()}e=e.next}while(e!==t)}if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{var o=e;r=o.next,0!=(4&(o=o.tag))&&0!=(1&o)&&(Nu(n,e),Pu(n,e)),e=r}while(e!==t)}return;case 1:return e=n.stateNode,4&n.flags&&(null===t?e.componentDidMount():(r=n.elementType===n.type?t.memoizedProps:Ko(n.type,t.memoizedProps),e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(t=n.updateQueue)&&fa(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}fa(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.flags&&Dr(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&kt(n)))));case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(i(163))}function dl(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)"function"==typeof(r=r.style).setProperty?r.setProperty("display","none","important"):r.display="none";else{r=n.stateNode;var o=n.memoizedProps.style;o=null!=o&&o.hasOwnProperty("display")?o.display:null,r.style.display=we("display",o)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else if((23!==n.tag&&24!==n.tag||null===n.memoizedState||n===e)&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}function pl(e,t){if(ko&&"function"==typeof ko.onCommitFiberUnmount)try{ko.onCommitFiberUnmount(wo,t)}catch(e){}switch(t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var n=e=e.next;do{var r=n,o=r.destroy;if(r=r.tag,void 0!==o)if(0!=(4&r))Nu(t,n);else{r=t;try{o()}catch(e){Ru(r,e)}}n=n.next}while(n!==e)}break;case 1:if(cl(t),"function"==typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){Ru(t,e)}break;case 5:cl(t);break;case 4:bl(e,t)}}function hl(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function ml(e){return 5===e.tag||3===e.tag||4===e.tag}function vl(e){e:{for(var t=e.return;null!==t;){if(ml(t))break e;t=t.return}throw Error(i(160))}var n=t;switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(i(161))}16&n.flags&&(ye(t,""),n.flags&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||ml(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.flags)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.flags)){n=n.stateNode;break e}}r?yl(e,n,t):gl(e,n,t)}function yl(e,t,n){var r=e.tag,o=5===r||6===r;if(o)e=o?e.stateNode:e.stateNode.instance,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Fr));else if(4!==r&&null!==(e=e.child))for(yl(e,t,n),e=e.sibling;null!==e;)yl(e,t,n),e=e.sibling}function gl(e,t,n){var r=e.tag,o=5===r||6===r;if(o)e=o?e.stateNode:e.stateNode.instance,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(gl(e,t,n),e=e.sibling;null!==e;)gl(e,t,n),e=e.sibling}function bl(e,t){for(var n,r,o=t,a=!1;;){if(!a){a=o.return;e:for(;;){if(null===a)throw Error(i(160));switch(n=a.stateNode,a.tag){case 5:r=!1;break e;case 3:case 4:n=n.containerInfo,r=!0;break e}a=a.return}a=!0}if(5===o.tag||6===o.tag){e:for(var l=e,u=o,c=u;;)if(pl(l,c),null!==c.child&&4!==c.tag)c.child.return=c,c=c.child;else{if(c===u)break e;for(;null===c.sibling;){if(null===c.return||c.return===u)break e;c=c.return}c.sibling.return=c.return,c=c.sibling}r?(l=n,u=o.stateNode,8===l.nodeType?l.parentNode.removeChild(u):l.removeChild(u)):n.removeChild(o.stateNode)}else if(4===o.tag){if(null!==o.child){n=o.stateNode.containerInfo,r=!0,o.child.return=o,o=o.child;continue}}else if(pl(e,o),null!==o.child){o.child.return=o,o=o.child;continue}if(o===t)break;for(;null===o.sibling;){if(null===o.return||o.return===t)return;4===(o=o.return).tag&&(a=!1)}o.sibling.return=o.return,o=o.sibling}}function wl(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:var n=t.updateQueue;if(null!==(n=null!==n?n.lastEffect:null)){var r=n=n.next;do{3==(3&r.tag)&&(e=r.destroy,r.destroy=void 0,void 0!==e&&e()),r=r.next}while(r!==n)}return;case 1:return;case 5:if(null!=(n=t.stateNode)){r=t.memoizedProps;var o=null!==e?e.memoizedProps:r;e=t.type;var a=t.updateQueue;if(t.updateQueue=null,null!==a){for(n[Yr]=r,"input"===e&&"radio"===r.type&&null!=r.name&&te(n,r),Se(e,o),t=Se(e,r),o=0;o<a.length;o+=2){var l=a[o],u=a[o+1];"style"===l?ke(n,u):"dangerouslySetInnerHTML"===l?ve(n,u):"children"===l?ye(n,u):w(n,l,u,t)}switch(e){case"input":ne(n,r);break;case"textarea":ce(n,r);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(a=r.value)?ie(n,!!r.multiple,a,!1):e!==!!r.multiple&&(null!=r.defaultValue?ie(n,!!r.multiple,r.defaultValue,!0):ie(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(i(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((n=t.stateNode).hydrate&&(n.hydrate=!1,kt(n.containerInfo)));case 12:return;case 13:return null!==t.memoizedState&&(Dl=Uo(),dl(t.child,!0)),void kl(t);case 19:return void kl(t);case 17:return;case 23:case 24:return void dl(t,null!==t.memoizedState)}throw Error(i(163))}function kl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new ul),t.forEach((function(t){var r=Fu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function El(e,t){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&null!==(t=t.memoizedState)&&null===t.dehydrated}var xl=Math.ceil,Sl=k.ReactCurrentDispatcher,Al=k.ReactCurrentOwner,Cl=0,_l=null,Tl=null,Ol=0,Pl=0,Nl=ao(0),Ll=0,Il=null,Rl=0,jl=0,Fl=0,Ml=0,zl=null,Dl=0,Ul=1/0;function $l(){Ul=Uo()+500}var Bl,Hl=null,Vl=!1,Wl=null,Ql=null,ql=!1,Kl=null,Yl=90,Jl=[],Xl=[],Gl=null,Zl=0,eu=null,tu=-1,nu=0,ru=0,ou=null,au=!1;function iu(){return 0!=(48&Cl)?Uo():-1!==tu?tu:tu=Uo()}function lu(e){if(0==(2&(e=e.mode)))return 1;if(0==(4&e))return 99===$o()?1:2;if(0===nu&&(nu=Rl),0!==qo.transition){0!==ru&&(ru=null!==zl?zl.pendingLanes:0),e=nu;var t=4186112&~ru;return 0==(t&=-t)&&0==(t=(e=4186112&~e)&-e)&&(t=8192),t}return e=$o(),e=Dt(0!=(4&Cl)&&98===e?12:e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),nu)}function uu(e,t,n){if(50<Zl)throw Zl=0,eu=null,Error(i(185));if(null===(e=cu(e,t)))return null;Bt(e,t,n),e===_l&&(Fl|=t,4===Ll&&du(e,Ol));var r=$o();1===t?0!=(8&Cl)&&0==(48&Cl)?pu(e):(su(e,n),0===Cl&&($l(),Wo())):(0==(4&Cl)||98!==r&&99!==r||(null===Gl?Gl=new Set([e]):Gl.add(e)),su(e,n)),zl=e}function cu(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}function su(e,t){for(var n=e.callbackNode,r=e.suspendedLanes,o=e.pingedLanes,a=e.expirationTimes,l=e.pendingLanes;0<l;){var u=31-Ht(l),c=1<<u,s=a[u];if(-1===s){if(0==(c&r)||0!=(c&o)){s=t,Ft(c);var f=jt;a[u]=10<=f?s+250:6<=f?s+5e3:-1}}else s<=t&&(e.expiredLanes|=c);l&=~c}if(r=Mt(e,e===_l?Ol:0),t=jt,0===r)null!==n&&(n!==Ro&&So(n),e.callbackNode=null,e.callbackPriority=0);else{if(null!==n){if(e.callbackPriority===t)return;n!==Ro&&So(n)}15===t?(n=pu.bind(null,e),null===Fo?(Fo=[n],Mo=xo(Oo,Qo)):Fo.push(n),n=Ro):n=14===t?Vo(99,pu.bind(null,e)):Vo(n=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(i(358,e))}}(t),fu.bind(null,e)),e.callbackPriority=t,e.callbackNode=n}}function fu(e){if(tu=-1,ru=nu=0,0!=(48&Cl))throw Error(i(327));var t=e.callbackNode;if(Ou()&&e.callbackNode!==t)return null;var n=Mt(e,e===_l?Ol:0);if(0===n)return null;var r=n,o=Cl;Cl|=16;var a=wu();for(_l===e&&Ol===r||($l(),gu(e,r));;)try{xu();break}catch(t){bu(e,t)}if(Zo(),Sl.current=a,Cl=o,null!==Tl?r=0:(_l=null,Ol=0,r=Ll),0!=(Rl&Fl))gu(e,0);else if(0!==r){if(2===r&&(Cl|=64,e.hydrate&&(e.hydrate=!1,Hr(e.containerInfo)),0!==(n=zt(e))&&(r=ku(e,n))),1===r)throw t=Il,gu(e,0),du(e,n),su(e,Uo()),t;switch(e.finishedWork=e.current.alternate,e.finishedLanes=n,r){case 0:case 1:throw Error(i(345));case 2:Cu(e);break;case 3:if(du(e,n),(62914560&n)===n&&10<(r=Dl+500-Uo())){if(0!==Mt(e,0))break;if(((o=e.suspendedLanes)&n)!==n){iu(),e.pingedLanes|=e.suspendedLanes&o;break}e.timeoutHandle=$r(Cu.bind(null,e),r);break}Cu(e);break;case 4:if(du(e,n),(4186112&n)===n)break;for(r=e.eventTimes,o=-1;0<n;){var l=31-Ht(n);a=1<<l,(l=r[l])>o&&(o=l),n&=~a}if(n=o,10<(n=(120>(n=Uo()-n)?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*xl(n/1960))-n)){e.timeoutHandle=$r(Cu.bind(null,e),n);break}Cu(e);break;case 5:Cu(e);break;default:throw Error(i(329))}}return su(e,Uo()),e.callbackNode===t?fu.bind(null,e):null}function du(e,t){for(t&=~Ml,t&=~Fl,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-Ht(t),r=1<<n;e[n]=-1,t&=~r}}function pu(e){if(0!=(48&Cl))throw Error(i(327));if(Ou(),e===_l&&0!=(e.expiredLanes&Ol)){var t=Ol,n=ku(e,t);0!=(Rl&Fl)&&(n=ku(e,t=Mt(e,t)))}else n=ku(e,t=Mt(e,0));if(0!==e.tag&&2===n&&(Cl|=64,e.hydrate&&(e.hydrate=!1,Hr(e.containerInfo)),0!==(t=zt(e))&&(n=ku(e,t))),1===n)throw n=Il,gu(e,0),du(e,t),su(e,Uo()),n;return e.finishedWork=e.current.alternate,e.finishedLanes=t,Cu(e),su(e,Uo()),null}function hu(e,t){var n=Cl;Cl|=1;try{return e(t)}finally{0===(Cl=n)&&($l(),Wo())}}function mu(e,t){var n=Cl;Cl&=-2,Cl|=8;try{return e(t)}finally{0===(Cl=n)&&($l(),Wo())}}function vu(e,t){lo(Nl,Pl),Pl|=t,Rl|=t}function yu(){Pl=Nl.current,io(Nl)}function gu(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,Br(n)),null!==Tl)for(n=Tl.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&mo();break;case 3:Na(),io(so),io(co),Qa();break;case 5:Ia(r);break;case 4:Na();break;case 13:case 19:io(Ra);break;case 10:ea(r);break;case 23:case 24:yu()}n=n.return}_l=e,Tl=Uu(e.current,null),Ol=Pl=Rl=t,Ll=0,Il=null,Ml=Fl=jl=0}function bu(e,t){for(;;){var n=Tl;try{if(Zo(),qa.current=Ti,Za){for(var r=Ja.memoizedState;null!==r;){var o=r.queue;null!==o&&(o.pending=null),r=r.next}Za=!1}if(Ya=0,Ga=Xa=Ja=null,ei=!1,Al.current=null,null===n||null===n.return){Ll=1,Il=t,Tl=null;break}e:{var a=e,i=n.return,l=n,u=t;if(t=Ol,l.flags|=2048,l.firstEffect=l.lastEffect=null,null!==u&&"object"==typeof u&&"function"==typeof u.then){var c=u;if(0==(2&l.mode)){var s=l.alternate;s?(l.updateQueue=s.updateQueue,l.memoizedState=s.memoizedState,l.lanes=s.lanes):(l.updateQueue=null,l.memoizedState=null)}var f=0!=(1&Ra.current),d=i;do{var p;if(p=13===d.tag){var h=d.memoizedState;if(null!==h)p=null!==h.dehydrated;else{var m=d.memoizedProps;p=void 0!==m.fallback&&(!0!==m.unstable_avoidThisFallback||!f)}}if(p){var v=d.updateQueue;if(null===v){var y=new Set;y.add(c),d.updateQueue=y}else v.add(c);if(0==(2&d.mode)){if(d.flags|=64,l.flags|=16384,l.flags&=-2981,1===l.tag)if(null===l.alternate)l.tag=17;else{var g=la(-1,1);g.tag=2,ua(l,g)}l.lanes|=1;break e}u=void 0,l=t;var b=a.pingCache;if(null===b?(b=a.pingCache=new al,u=new Set,b.set(c,u)):void 0===(u=b.get(c))&&(u=new Set,b.set(c,u)),!u.has(l)){u.add(l);var w=ju.bind(null,a,c,l);c.then(w,w)}d.flags|=4096,d.lanes=t;break e}d=d.return}while(null!==d);u=Error((q(l.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==Ll&&(Ll=2),u=rl(u,l),d=i;do{switch(d.tag){case 3:a=u,d.flags|=4096,t&=-t,d.lanes|=t,ca(d,il(0,a,t));break e;case 1:a=u;var k=d.type,E=d.stateNode;if(0==(64&d.flags)&&("function"==typeof k.getDerivedStateFromError||null!==E&&"function"==typeof E.componentDidCatch&&(null===Ql||!Ql.has(E)))){d.flags|=4096,t&=-t,d.lanes|=t,ca(d,ll(d,a,t));break e}}d=d.return}while(null!==d)}Au(n)}catch(e){t=e,Tl===n&&null!==n&&(Tl=n=n.return);continue}break}}function wu(){var e=Sl.current;return Sl.current=Ti,null===e?Ti:e}function ku(e,t){var n=Cl;Cl|=16;var r=wu();for(_l===e&&Ol===t||gu(e,t);;)try{Eu();break}catch(t){bu(e,t)}if(Zo(),Cl=n,Sl.current=r,null!==Tl)throw Error(i(261));return _l=null,Ol=0,Ll}function Eu(){for(;null!==Tl;)Su(Tl)}function xu(){for(;null!==Tl&&!Ao();)Su(Tl)}function Su(e){var t=Bl(e.alternate,e,Pl);e.memoizedProps=e.pendingProps,null===t?Au(e):Tl=t,Al.current=null}function Au(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(2048&t.flags)){if(null!==(n=tl(n,t,Pl)))return void(Tl=n);if(24!==(n=t).tag&&23!==n.tag||null===n.memoizedState||0!=(1073741824&Pl)||0==(4&n.mode)){for(var r=0,o=n.child;null!==o;)r|=o.lanes|o.childLanes,o=o.sibling;n.childLanes=r}null!==e&&0==(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=t.firstEffect),e.lastEffect=t.lastEffect),1<t.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=t:e.firstEffect=t,e.lastEffect=t))}else{if(null!==(n=nl(t)))return n.flags&=2047,void(Tl=n);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(t=t.sibling))return void(Tl=t);Tl=t=e}while(null!==t);0===Ll&&(Ll=5)}function Cu(e){var t=$o();return Ho(99,_u.bind(null,e,t)),null}function _u(e,t){do{Ou()}while(null!==Kl);if(0!=(48&Cl))throw Error(i(327));var n=e.finishedWork;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(i(177));e.callbackNode=null;var r=n.lanes|n.childLanes,o=r,a=e.pendingLanes&~o;e.pendingLanes=o,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=o,e.mutableReadLanes&=o,e.entangledLanes&=o,o=e.entanglements;for(var l=e.eventTimes,u=e.expirationTimes;0<a;){var c=31-Ht(a),s=1<<c;o[c]=0,l[c]=-1,u[c]=-1,a&=~s}if(null!==Gl&&0==(24&r)&&Gl.has(e)&&Gl.delete(e),e===_l&&(Tl=_l=null,Ol=0),1<n.flags?null!==n.lastEffect?(n.lastEffect.nextEffect=n,r=n.firstEffect):r=n:r=n.firstEffect,null!==r){if(o=Cl,Cl|=32,Al.current=null,Mr=Kt,pr(l=dr())){if("selectionStart"in l)u={start:l.selectionStart,end:l.selectionEnd};else e:if(u=(u=l.ownerDocument)&&u.defaultView||window,(s=u.getSelection&&u.getSelection())&&0!==s.rangeCount){u=s.anchorNode,a=s.anchorOffset,c=s.focusNode,s=s.focusOffset;try{u.nodeType,c.nodeType}catch(e){u=null;break e}var f=0,d=-1,p=-1,h=0,m=0,v=l,y=null;t:for(;;){for(var g;v!==u||0!==a&&3!==v.nodeType||(d=f+a),v!==c||0!==s&&3!==v.nodeType||(p=f+s),3===v.nodeType&&(f+=v.nodeValue.length),null!==(g=v.firstChild);)y=v,v=g;for(;;){if(v===l)break t;if(y===u&&++h===a&&(d=f),y===c&&++m===s&&(p=f),null!==(g=v.nextSibling))break;y=(v=y).parentNode}v=g}u=-1===d||-1===p?null:{start:d,end:p}}else u=null;u=u||{start:0,end:0}}else u=null;zr={focusedElem:l,selectionRange:u},Kt=!1,ou=null,au=!1,Hl=r;do{try{Tu()}catch(e){if(null===Hl)throw Error(i(330));Ru(Hl,e),Hl=Hl.nextEffect}}while(null!==Hl);ou=null,Hl=r;do{try{for(l=e;null!==Hl;){var b=Hl.flags;if(16&b&&ye(Hl.stateNode,""),128&b){var w=Hl.alternate;if(null!==w){var k=w.ref;null!==k&&("function"==typeof k?k(null):k.current=null)}}switch(1038&b){case 2:vl(Hl),Hl.flags&=-3;break;case 6:vl(Hl),Hl.flags&=-3,wl(Hl.alternate,Hl);break;case 1024:Hl.flags&=-1025;break;case 1028:Hl.flags&=-1025,wl(Hl.alternate,Hl);break;case 4:wl(Hl.alternate,Hl);break;case 8:bl(l,u=Hl);var E=u.alternate;hl(u),null!==E&&hl(E)}Hl=Hl.nextEffect}}catch(e){if(null===Hl)throw Error(i(330));Ru(Hl,e),Hl=Hl.nextEffect}}while(null!==Hl);if(k=zr,w=dr(),b=k.focusedElem,l=k.selectionRange,w!==b&&b&&b.ownerDocument&&fr(b.ownerDocument.documentElement,b)){null!==l&&pr(b)&&(w=l.start,void 0===(k=l.end)&&(k=w),"selectionStart"in b?(b.selectionStart=w,b.selectionEnd=Math.min(k,b.value.length)):(k=(w=b.ownerDocument||document)&&w.defaultView||window).getSelection&&(k=k.getSelection(),u=b.textContent.length,E=Math.min(l.start,u),l=void 0===l.end?E:Math.min(l.end,u),!k.extend&&E>l&&(u=l,l=E,E=u),u=sr(b,E),a=sr(b,l),u&&a&&(1!==k.rangeCount||k.anchorNode!==u.node||k.anchorOffset!==u.offset||k.focusNode!==a.node||k.focusOffset!==a.offset)&&((w=w.createRange()).setStart(u.node,u.offset),k.removeAllRanges(),E>l?(k.addRange(w),k.extend(a.node,a.offset)):(w.setEnd(a.node,a.offset),k.addRange(w))))),w=[];for(k=b;k=k.parentNode;)1===k.nodeType&&w.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"==typeof b.focus&&b.focus(),b=0;b<w.length;b++)(k=w[b]).element.scrollLeft=k.left,k.element.scrollTop=k.top}Kt=!!Mr,zr=Mr=null,e.current=n,Hl=r;do{try{for(b=e;null!==Hl;){var x=Hl.flags;if(36&x&&fl(b,Hl.alternate,Hl),128&x){w=void 0;var S=Hl.ref;if(null!==S){var A=Hl.stateNode;switch(Hl.tag){case 5:w=A;break;default:w=A}"function"==typeof S?S(w):S.current=w}}Hl=Hl.nextEffect}}catch(e){if(null===Hl)throw Error(i(330));Ru(Hl,e),Hl=Hl.nextEffect}}while(null!==Hl);Hl=null,jo(),Cl=o}else e.current=n;if(ql)ql=!1,Kl=e,Yl=t;else for(Hl=r;null!==Hl;)t=Hl.nextEffect,Hl.nextEffect=null,8&Hl.flags&&((x=Hl).sibling=null,x.stateNode=null),Hl=t;if(0===(r=e.pendingLanes)&&(Ql=null),1===r?e===eu?Zl++:(Zl=0,eu=e):Zl=0,n=n.stateNode,ko&&"function"==typeof ko.onCommitFiberRoot)try{ko.onCommitFiberRoot(wo,n,void 0,64==(64&n.current.flags))}catch(e){}if(su(e,Uo()),Vl)throw Vl=!1,e=Wl,Wl=null,e;return 0!=(8&Cl)||Wo(),null}function Tu(){for(;null!==Hl;){var e=Hl.alternate;au||null===ou||(0!=(8&Hl.flags)?Ze(Hl,ou)&&(au=!0):13===Hl.tag&&El(e,Hl)&&Ze(Hl,ou)&&(au=!0));var t=Hl.flags;0!=(256&t)&&sl(e,Hl),0==(512&t)||ql||(ql=!0,Vo(97,(function(){return Ou(),null}))),Hl=Hl.nextEffect}}function Ou(){if(90!==Yl){var e=97<Yl?97:Yl;return Yl=90,Ho(e,Lu)}return!1}function Pu(e,t){Jl.push(t,e),ql||(ql=!0,Vo(97,(function(){return Ou(),null})))}function Nu(e,t){Xl.push(t,e),ql||(ql=!0,Vo(97,(function(){return Ou(),null})))}function Lu(){if(null===Kl)return!1;var e=Kl;if(Kl=null,0!=(48&Cl))throw Error(i(331));var t=Cl;Cl|=32;var n=Xl;Xl=[];for(var r=0;r<n.length;r+=2){var o=n[r],a=n[r+1],l=o.destroy;if(o.destroy=void 0,"function"==typeof l)try{l()}catch(e){if(null===a)throw Error(i(330));Ru(a,e)}}for(n=Jl,Jl=[],r=0;r<n.length;r+=2){o=n[r],a=n[r+1];try{var u=o.create;o.destroy=u()}catch(e){if(null===a)throw Error(i(330));Ru(a,e)}}for(u=e.current.firstEffect;null!==u;)e=u.nextEffect,u.nextEffect=null,8&u.flags&&(u.sibling=null,u.stateNode=null),u=e;return Cl=t,Wo(),!0}function Iu(e,t,n){ua(e,t=il(0,t=rl(n,t),1)),t=iu(),null!==(e=cu(e,1))&&(Bt(e,1,t),su(e,t))}function Ru(e,t){if(3===e.tag)Iu(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){Iu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Ql||!Ql.has(r))){var o=ll(n,e=rl(t,e),1);if(ua(n,o),o=iu(),null!==(n=cu(n,1)))Bt(n,1,o),su(n,o);else if("function"==typeof r.componentDidCatch&&(null===Ql||!Ql.has(r)))try{r.componentDidCatch(t,e)}catch(e){}break}}n=n.return}}function ju(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=iu(),e.pingedLanes|=e.suspendedLanes&n,_l===e&&(Ol&n)===n&&(4===Ll||3===Ll&&(62914560&Ol)===Ol&&500>Uo()-Dl?gu(e,0):Ml|=n),su(e,t)}function Fu(e,t){var n=e.stateNode;null!==n&&n.delete(t),0==(t=0)&&(0==(2&(t=e.mode))?t=1:0==(4&t)?t=99===$o()?1:2:(0===nu&&(nu=Rl),0===(t=Ut(62914560&~nu))&&(t=4194304))),n=iu(),null!==(e=cu(e,t))&&(Bt(e,t,n),su(e,n))}function Mu(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function zu(e,t,n,r){return new Mu(e,t,n,r)}function Du(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Uu(e,t){var n=e.alternate;return null===n?((n=zu(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function $u(e,t,n,r,o,a){var l=2;if(r=e,"function"==typeof e)Du(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case S:return Bu(n.children,o,a,t);case F:l=8,o|=16;break;case A:l=8,o|=1;break;case C:return(e=zu(12,n,t,8|o)).elementType=C,e.type=C,e.lanes=a,e;case P:return(e=zu(13,n,t,o)).type=P,e.elementType=P,e.lanes=a,e;case N:return(e=zu(19,n,t,o)).elementType=N,e.lanes=a,e;case M:return Hu(n,o,a,t);case z:return(e=zu(24,n,t,o)).elementType=z,e.lanes=a,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case _:l=10;break e;case T:l=9;break e;case O:l=11;break e;case L:l=14;break e;case I:l=16,r=null;break e;case R:l=22;break e}throw Error(i(130,null==e?e:typeof e,""))}return(t=zu(l,n,t,o)).elementType=e,t.type=r,t.lanes=a,t}function Bu(e,t,n,r){return(e=zu(7,e,r,t)).lanes=n,e}function Hu(e,t,n,r){return(e=zu(23,e,r,t)).elementType=M,e.lanes=n,e}function Vu(e,t,n){return(e=zu(6,e,null,t)).lanes=n,e}function Wu(e,t,n){return(t=zu(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Qu(e,t,n){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=$t(0),this.expirationTimes=$t(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=$t(0),this.mutableSourceEagerHydrationData=null}function qu(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:x,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Ku(e,t,n,r){var o=t.current,a=iu(),l=lu(o);e:if(n){t:{if(Ye(n=n._reactInternals)!==n||1!==n.tag)throw Error(i(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(ho(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(i(171))}if(1===n.tag){var c=n.type;if(ho(c)){n=yo(n,c,u);break e}}n=u}else n=uo;return null===t.context?t.context=n:t.pendingContext=n,(t=la(a,l)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),ua(o,t),uu(o,l,a),l}function Yu(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Ju(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Xu(e,t){Ju(e,t),(e=e.alternate)&&Ju(e,t)}function Gu(e,t,n){var r=null!=n&&null!=n.hydrationOptions&&n.hydrationOptions.mutableSources||null;if(n=new Qu(e,t,null!=n&&!0===n.hydrate),t=zu(3,null,null,2===t?7:1===t?3:0),n.current=t,t.stateNode=n,aa(t),e[Jr]=n.current,Tr(8===e.nodeType?e.parentNode:e),r)for(e=0;e<r.length;e++){var o=(t=r[e])._getVersion;o=o(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,o]:n.mutableSourceEagerHydrationData.push(t,o)}this._internalRoot=n}function Zu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function ec(e,t,n,r,o){var a=n._reactRootContainer;if(a){var i=a._internalRoot;if("function"==typeof o){var l=o;o=function(){var e=Yu(i);l.call(e)}}Ku(t,i,e,o)}else{if(a=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Gu(e,0,t?{hydrate:!0}:void 0)}(n,r),i=a._internalRoot,"function"==typeof o){var u=o;o=function(){var e=Yu(i);u.call(e)}}mu((function(){Ku(t,i,e,o)}))}return Yu(i)}function tc(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Zu(t))throw Error(i(200));return qu(e,t,null,n)}Bl=function(e,t,n){var r=t.lanes;if(null!==e)if(e.memoizedProps!==t.pendingProps||so.current)Ii=!0;else{if(0==(n&r)){switch(Ii=!1,t.tag){case 3:Hi(t),Va();break;case 5:La(t);break;case 1:ho(t.type)&&go(t);break;case 4:Pa(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value;var o=t.type._context;lo(Yo,o._currentValue),o._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!=(n&t.child.childLanes)?Ki(e,t,n):(lo(Ra,1&Ra.current),null!==(t=Zi(e,t,n))?t.sibling:null);lo(Ra,1&Ra.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(64&e.flags)){if(r)return Gi(e,t,n);t.flags|=64}if(null!==(o=t.memoizedState)&&(o.rendering=null,o.tail=null,o.lastEffect=null),lo(Ra,Ra.current),r)break;return null;case 23:case 24:return t.lanes=0,zi(e,t,n)}return Zi(e,t,n)}Ii=0!=(16384&e.flags)}else Ii=!1;switch(t.lanes=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,o=po(t,co.current),na(t,n),o=ri(null,t,r,e,o,n),t.flags|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,ho(r)){var a=!0;go(t)}else a=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,aa(t);var l=r.getDerivedStateFromProps;"function"==typeof l&&pa(t,r,l,e),o.updater=ha,t.stateNode=o,o._reactInternals=t,ga(t,r,e,n),t=Bi(null,t,r,!0,a,n)}else t.tag=0,Ri(null,t,o,n),t=t.child;return t;case 16:o=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,o=(a=o._init)(o._payload),t.type=o,a=t.tag=function(e){if("function"==typeof e)return Du(e)?1:0;if(null!=e){if((e=e.$$typeof)===O)return 11;if(e===L)return 14}return 2}(o),e=Ko(o,e),a){case 0:t=Ui(null,t,o,e,n);break e;case 1:t=$i(null,t,o,e,n);break e;case 11:t=ji(null,t,o,e,n);break e;case 14:t=Fi(null,t,o,Ko(o.type,e),r,n);break e}throw Error(i(306,o,""))}return t;case 0:return r=t.type,o=t.pendingProps,Ui(e,t,r,o=t.elementType===r?o:Ko(r,o),n);case 1:return r=t.type,o=t.pendingProps,$i(e,t,r,o=t.elementType===r?o:Ko(r,o),n);case 3:if(Hi(t),r=t.updateQueue,null===e||null===r)throw Error(i(282));if(r=t.pendingProps,o=null!==(o=t.memoizedState)?o.element:null,ia(e,t),sa(t,r,null,n),(r=t.memoizedState.element)===o)Va(),t=Zi(e,t,n);else{if((a=(o=t.stateNode).hydrate)&&(Ma=Vr(t.stateNode.containerInfo.firstChild),Fa=t,a=za=!0),a){if(null!=(e=o.mutableSourceEagerHydrationData))for(o=0;o<e.length;o+=2)(a=e[o])._workInProgressVersionPrimary=e[o+1],Wa.push(a);for(n=Sa(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|1024,n=n.sibling}else Ri(e,t,r,n),Va();t=t.child}return t;case 5:return La(t),null===e&&$a(t),r=t.type,o=t.pendingProps,a=null!==e?e.memoizedProps:null,l=o.children,Ur(r,o)?l=null:null!==a&&Ur(r,a)&&(t.flags|=16),Di(e,t),Ri(e,t,l,n),t.child;case 6:return null===e&&$a(t),null;case 13:return Ki(e,t,n);case 4:return Pa(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=xa(t,null,r,n):Ri(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,ji(e,t,r,o=t.elementType===r?o:Ko(r,o),n);case 7:return Ri(e,t,t.pendingProps,n),t.child;case 8:case 12:return Ri(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,o=t.pendingProps,l=t.memoizedProps,a=o.value;var u=t.type._context;if(lo(Yo,u._currentValue),u._currentValue=a,null!==l)if(u=l.value,0==(a=ir(u,a)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,a):1073741823))){if(l.children===o.children&&!so.current){t=Zi(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.dependencies;if(null!==c){l=u.child;for(var s=c.firstContext;null!==s;){if(s.context===r&&0!=(s.observedBits&a)){1===u.tag&&((s=la(-1,n&-n)).tag=2,ua(u,s)),u.lanes|=n,null!==(s=u.alternate)&&(s.lanes|=n),ta(u.return,n),c.lanes|=n;break}s=s.next}}else l=10===u.tag&&u.type===t.type?null:u.child;if(null!==l)l.return=u;else for(l=u;null!==l;){if(l===t){l=null;break}if(null!==(u=l.sibling)){u.return=l.return,l=u;break}l=l.return}u=l}Ri(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(a=t.pendingProps).children,na(t,n),r=r(o=ra(o,a.unstable_observedBits)),t.flags|=1,Ri(e,t,r,n),t.child;case 14:return a=Ko(o=t.type,t.pendingProps),Fi(e,t,o,a=Ko(o.type,a),r,n);case 15:return Mi(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:Ko(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,ho(r)?(e=!0,go(t)):e=!1,na(t,n),va(t,r,o),ga(t,r,o,n),Bi(null,t,r,!0,e,n);case 19:return Gi(e,t,n);case 23:case 24:return zi(e,t,n)}throw Error(i(156,t.tag))},Gu.prototype.render=function(e){Ku(e,this._internalRoot,null,null)},Gu.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Ku(null,e,null,(function(){t[Jr]=null}))},et=function(e){13===e.tag&&(uu(e,4,iu()),Xu(e,4))},tt=function(e){13===e.tag&&(uu(e,67108864,iu()),Xu(e,67108864))},nt=function(e){if(13===e.tag){var t=iu(),n=lu(e);uu(e,n,t),Xu(e,n)}},rt=function(e,t){return t()},Ce=function(e,t,n){switch(t){case"input":if(ne(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=to(r);if(!o)throw Error(i(90));X(r),ne(r,o)}}}break;case"textarea":ce(e,n);break;case"select":null!=(t=n.value)&&ie(e,!!n.multiple,t,!1)}},Le=hu,Ie=function(e,t,n,r,o){var a=Cl;Cl|=4;try{return Ho(98,e.bind(null,t,n,r,o))}finally{0===(Cl=a)&&($l(),Wo())}},Re=function(){0==(49&Cl)&&(function(){if(null!==Gl){var e=Gl;Gl=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,su(e,Uo())}))}Wo()}(),Ou())},je=function(e,t){var n=Cl;Cl|=2;try{return e(t)}finally{0===(Cl=n)&&($l(),Wo())}};var nc={Events:[Zr,eo,to,Pe,Ne,Ou,{current:!1}]},rc={findFiberByHostInstance:Gr,bundleType:0,version:"17.0.2",rendererPackageName:"react-dom"},oc={bundleType:rc.bundleType,version:rc.version,rendererPackageName:rc.rendererPackageName,rendererConfig:rc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:k.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Ge(e))?null:e.stateNode},findFiberByHostInstance:rc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var ac=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!ac.isDisabled&&ac.supportsFiber)try{wo=ac.inject(oc),ko=ac}catch(me){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=nc,t.createPortal=tc,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(i(188));throw Error(i(268,Object.keys(e)))}return null===(e=Ge(t))?null:e.stateNode},t.flushSync=function(e,t){var n=Cl;if(0!=(48&n))return e(t);Cl|=1;try{if(e)return Ho(99,e.bind(null,t))}finally{Cl=n,Wo()}},t.hydrate=function(e,t,n){if(!Zu(t))throw Error(i(200));return ec(null,e,t,!0,n)},t.render=function(e,t,n){if(!Zu(t))throw Error(i(200));return ec(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Zu(e))throw Error(i(40));return!!e._reactRootContainer&&(mu((function(){ec(null,null,e,!1,(function(){e._reactRootContainer=null,e[Jr]=null}))})),!0)},t.unstable_batchedUpdates=hu,t.unstable_createPortal=function(e,t){return tc(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Zu(n))throw Error(i(200));if(null==e||void 0===e._reactInternals)throw Error(i(38));return ec(e,t,n,!1,r)},t.version="17.0.2"},3935:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(4448)},9921:(e,t)=>{"use strict";var n="function"==typeof Symbol&&Symbol.for,r=n?Symbol.for("react.element"):60103,o=n?Symbol.for("react.portal"):60106,a=n?Symbol.for("react.fragment"):60107,i=n?Symbol.for("react.strict_mode"):60108,l=n?Symbol.for("react.profiler"):60114,u=n?Symbol.for("react.provider"):60109,c=n?Symbol.for("react.context"):60110,s=n?Symbol.for("react.async_mode"):60111,f=n?Symbol.for("react.concurrent_mode"):60111,d=n?Symbol.for("react.forward_ref"):60112,p=n?Symbol.for("react.suspense"):60113,h=n?Symbol.for("react.suspense_list"):60120,m=n?Symbol.for("react.memo"):60115,v=n?Symbol.for("react.lazy"):60116,y=n?Symbol.for("react.block"):60121,g=n?Symbol.for("react.fundamental"):60117,b=n?Symbol.for("react.responder"):60118,w=n?Symbol.for("react.scope"):60119;function k(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case r:switch(e=e.type){case s:case f:case a:case l:case i:case p:return e;default:switch(e=e&&e.$$typeof){case c:case d:case v:case m:case u:return e;default:return t}}case o:return t}}}function E(e){return k(e)===f}t.AsyncMode=s,t.ConcurrentMode=f,t.ContextConsumer=c,t.ContextProvider=u,t.Element=r,t.ForwardRef=d,t.Fragment=a,t.Lazy=v,t.Memo=m,t.Portal=o,t.Profiler=l,t.StrictMode=i,t.Suspense=p,t.isAsyncMode=function(e){return E(e)||k(e)===s},t.isConcurrentMode=E,t.isContextConsumer=function(e){return k(e)===c},t.isContextProvider=function(e){return k(e)===u},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===r},t.isForwardRef=function(e){return k(e)===d},t.isFragment=function(e){return k(e)===a},t.isLazy=function(e){return k(e)===v},t.isMemo=function(e){return k(e)===m},t.isPortal=function(e){return k(e)===o},t.isProfiler=function(e){return k(e)===l},t.isStrictMode=function(e){return k(e)===i},t.isSuspense=function(e){return k(e)===p},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===a||e===f||e===l||e===i||e===p||e===h||"object"==typeof e&&null!==e&&(e.$$typeof===v||e.$$typeof===m||e.$$typeof===u||e.$$typeof===c||e.$$typeof===d||e.$$typeof===g||e.$$typeof===b||e.$$typeof===w||e.$$typeof===y)},t.typeOf=k},9864:(e,t,n)=>{"use strict";e.exports=n(9921)},6585:e=>{e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},9658:(e,t,n)=>{var r=n(6585);e.exports=function e(t,n,o){return r(n)||(o=n||o,n=[]),o=o||{},t instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return s(e,t)}(t,n):r(t)?function(t,n,r){for(var o=[],a=0;a<t.length;a++)o.push(e(t[a],n,r).source);return s(new RegExp("(?:"+o.join("|")+")",f(r)),n)}(t,n,o):function(e,t,n){return d(a(e,n),t,n)}(t,n,o)},e.exports.parse=a,e.exports.compile=function(e,t){return l(a(e,t),t)},e.exports.tokensToFunction=l,e.exports.tokensToRegExp=d;var o=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function a(e,t){for(var n,r=[],a=0,i=0,l="",s=t&&t.delimiter||"/";null!=(n=o.exec(e));){var f=n[0],d=n[1],p=n.index;if(l+=e.slice(i,p),i=p+f.length,d)l+=d[1];else{var h=e[i],m=n[2],v=n[3],y=n[4],g=n[5],b=n[6],w=n[7];l&&(r.push(l),l="");var k=null!=m&&null!=h&&h!==m,E="+"===b||"*"===b,x="?"===b||"*"===b,S=n[2]||s,A=y||g;r.push({name:v||a++,prefix:m||"",delimiter:S,optional:x,repeat:E,partial:k,asterisk:!!w,pattern:A?c(A):w?".*":"[^"+u(S)+"]+?"})}}return i<e.length&&(l+=e.substr(i)),l&&r.push(l),r}function i(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function l(e,t){for(var n=new Array(e.length),o=0;o<e.length;o++)"object"==typeof e[o]&&(n[o]=new RegExp("^(?:"+e[o].pattern+")$",f(t)));return function(t,o){for(var a="",l=t||{},u=(o||{}).pretty?i:encodeURIComponent,c=0;c<e.length;c++){var s=e[c];if("string"!=typeof s){var f,d=l[s.name];if(null==d){if(s.optional){s.partial&&(a+=s.prefix);continue}throw new TypeError('Expected "'+s.name+'" to be defined')}if(r(d)){if(!s.repeat)throw new TypeError('Expected "'+s.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(s.optional)continue;throw new TypeError('Expected "'+s.name+'" to not be empty')}for(var p=0;p<d.length;p++){if(f=u(d[p]),!n[c].test(f))throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'", but received `'+JSON.stringify(f)+"`");a+=(0===p?s.prefix:s.delimiter)+f}}else{if(f=s.asterisk?encodeURI(d).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):u(d),!n[c].test(f))throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but received "'+f+'"');a+=s.prefix+f}}else a+=s}return a}}function u(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function c(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function s(e,t){return e.keys=t,e}function f(e){return e&&e.sensitive?"":"i"}function d(e,t,n){r(t)||(n=t||n,t=[]);for(var o=(n=n||{}).strict,a=!1!==n.end,i="",l=0;l<e.length;l++){var c=e[l];if("string"==typeof c)i+=u(c);else{var d=u(c.prefix),p="(?:"+c.pattern+")";t.push(c),c.repeat&&(p+="(?:"+d+p+")*"),i+=p=c.optional?c.partial?d+"("+p+")?":"(?:"+d+"("+p+"))?":d+"("+p+")"}}var h=u(n.delimiter||"/"),m=i.slice(-h.length)===h;return o||(i=(m?i.slice(0,-h.length):i)+"(?:"+h+"(?=$))?"),i+=a?"$":o&&m?"":"(?="+h+"|$)",s(new RegExp("^"+i,f(n)),t)}},2408:(e,t,n)=>{"use strict";var r=n(7418),o=60103,a=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var i=60109,l=60110,u=60112;t.Suspense=60113;var c=60115,s=60116;if("function"==typeof Symbol&&Symbol.for){var f=Symbol.for;o=f("react.element"),a=f("react.portal"),t.Fragment=f("react.fragment"),t.StrictMode=f("react.strict_mode"),t.Profiler=f("react.profiler"),i=f("react.provider"),l=f("react.context"),u=f("react.forward_ref"),t.Suspense=f("react.suspense"),c=f("react.memo"),s=f("react.lazy")}var d="function"==typeof Symbol&&Symbol.iterator;function p(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m={};function v(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||h}function y(){}function g(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||h}v.prototype.isReactComponent={},v.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(p(85));this.updater.enqueueSetState(this,e,t,"setState")},v.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},y.prototype=v.prototype;var b=g.prototype=new y;b.constructor=g,r(b,v.prototype),b.isPureReactComponent=!0;var w={current:null},k=Object.prototype.hasOwnProperty,E={key:!0,ref:!0,__self:!0,__source:!0};function x(e,t,n){var r,a={},i=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(i=""+t.key),t)k.call(t,r)&&!E.hasOwnProperty(r)&&(a[r]=t[r]);var u=arguments.length-2;if(1===u)a.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];a.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===a[r]&&(a[r]=u[r]);return{$$typeof:o,type:e,key:i,ref:l,props:a,_owner:w.current}}function S(e){return"object"==typeof e&&null!==e&&e.$$typeof===o}var A=/\/+/g;function C(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function _(e,t,n,r,i){var l=typeof e;"undefined"!==l&&"boolean"!==l||(e=null);var u=!1;if(null===e)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case o:case a:u=!0}}if(u)return i=i(u=e),e=""===r?"."+C(u,0):r,Array.isArray(i)?(n="",null!=e&&(n=e.replace(A,"$&/")+"/"),_(i,t,n,"",(function(e){return e}))):null!=i&&(S(i)&&(i=function(e,t){return{$$typeof:o,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,n+(!i.key||u&&u.key===i.key?"":(""+i.key).replace(A,"$&/")+"/")+e)),t.push(i)),1;if(u=0,r=""===r?".":r+":",Array.isArray(e))for(var c=0;c<e.length;c++){var s=r+C(l=e[c],c);u+=_(l,t,n,s,i)}else if("function"==typeof(s=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e)))for(e=s.call(e),c=0;!(l=e.next()).done;)u+=_(l=l.value,t,n,s=r+C(l,c++),i);else if("object"===l)throw t=""+e,Error(p(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return u}function T(e,t,n){if(null==e)return e;var r=[],o=0;return _(e,r,"","",(function(e){return t.call(n,e,o++)})),r}function O(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var P={current:null};function N(){var e=P.current;if(null===e)throw Error(p(321));return e}var L={ReactCurrentDispatcher:P,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:w,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:T,forEach:function(e,t,n){T(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return T(e,(function(){t++})),t},toArray:function(e){return T(e,(function(e){return e}))||[]},only:function(e){if(!S(e))throw Error(p(143));return e}},t.Component=v,t.PureComponent=g,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=L,t.cloneElement=function(e,t,n){if(null==e)throw Error(p(267,e));var a=r({},e.props),i=e.key,l=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(l=t.ref,u=w.current),void 0!==t.key&&(i=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(s in t)k.call(t,s)&&!E.hasOwnProperty(s)&&(a[s]=void 0===t[s]&&void 0!==c?c[s]:t[s])}var s=arguments.length-2;if(1===s)a.children=n;else if(1<s){c=Array(s);for(var f=0;f<s;f++)c[f]=arguments[f+2];a.children=c}return{$$typeof:o,type:e.type,key:i,ref:l,props:a,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:l,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},t.createElement=x,t.createFactory=function(e){var t=x.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=S,t.lazy=function(e){return{$$typeof:s,_payload:{_status:-1,_result:e},_init:O}},t.memo=function(e,t){return{$$typeof:c,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return N().useCallback(e,t)},t.useContext=function(e,t){return N().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return N().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return N().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return N().useLayoutEffect(e,t)},t.useMemo=function(e,t){return N().useMemo(e,t)},t.useReducer=function(e,t,n){return N().useReducer(e,t,n)},t.useRef=function(e){return N().useRef(e)},t.useState=function(e){return N().useState(e)},t.version="17.0.2"},7294:(e,t,n)=>{"use strict";e.exports=n(2408)},53:(e,t)=>{"use strict";var n,r,o,a;if("object"==typeof performance&&"function"==typeof performance.now){var i=performance;t.unstable_now=function(){return i.now()}}else{var l=Date,u=l.now();t.unstable_now=function(){return l.now()-u}}if("undefined"==typeof window||"function"!=typeof MessageChannel){var c=null,s=null,f=function(){if(null!==c)try{var e=t.unstable_now();c(!0,e),c=null}catch(e){throw setTimeout(f,0),e}};n=function(e){null!==c?setTimeout(n,0,e):(c=e,setTimeout(f,0))},r=function(e,t){s=setTimeout(e,t)},o=function(){clearTimeout(s)},t.unstable_shouldYield=function(){return!1},a=t.unstable_forceFrameRate=function(){}}else{var d=window.setTimeout,p=window.clearTimeout;if("undefined"!=typeof console){var h=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!=typeof h&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var m=!1,v=null,y=-1,g=5,b=0;t.unstable_shouldYield=function(){return t.unstable_now()>=b},a=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):g=0<e?Math.floor(1e3/e):5};var w=new MessageChannel,k=w.port2;w.port1.onmessage=function(){if(null!==v){var e=t.unstable_now();b=e+g;try{v(!0,e)?k.postMessage(null):(m=!1,v=null)}catch(e){throw k.postMessage(null),e}}else m=!1},n=function(e){v=e,m||(m=!0,k.postMessage(null))},r=function(e,n){y=d((function(){e(t.unstable_now())}),n)},o=function(){p(y),y=-1}}function E(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,o=e[r];if(!(void 0!==o&&0<A(o,t)))break e;e[r]=t,e[n]=o,n=r}}function x(e){return void 0===(e=e[0])?null:e}function S(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,o=e.length;r<o;){var a=2*(r+1)-1,i=e[a],l=a+1,u=e[l];if(void 0!==i&&0>A(i,n))void 0!==u&&0>A(u,i)?(e[r]=u,e[l]=n,r=l):(e[r]=i,e[a]=n,r=a);else{if(!(void 0!==u&&0>A(u,n)))break e;e[r]=u,e[l]=n,r=l}}}return t}return null}function A(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var C=[],_=[],T=1,O=null,P=3,N=!1,L=!1,I=!1;function R(e){for(var t=x(_);null!==t;){if(null===t.callback)S(_);else{if(!(t.startTime<=e))break;S(_),t.sortIndex=t.expirationTime,E(C,t)}t=x(_)}}function j(e){if(I=!1,R(e),!L)if(null!==x(C))L=!0,n(F);else{var t=x(_);null!==t&&r(j,t.startTime-e)}}function F(e,n){L=!1,I&&(I=!1,o()),N=!0;var a=P;try{for(R(n),O=x(C);null!==O&&(!(O.expirationTime>n)||e&&!t.unstable_shouldYield());){var i=O.callback;if("function"==typeof i){O.callback=null,P=O.priorityLevel;var l=i(O.expirationTime<=n);n=t.unstable_now(),"function"==typeof l?O.callback=l:O===x(C)&&S(C),R(n)}else S(C);O=x(C)}if(null!==O)var u=!0;else{var c=x(_);null!==c&&r(j,c.startTime-n),u=!1}return u}finally{O=null,P=a,N=!1}}var M=a;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){L||N||(L=!0,n(F))},t.unstable_getCurrentPriorityLevel=function(){return P},t.unstable_getFirstCallbackNode=function(){return x(C)},t.unstable_next=function(e){switch(P){case 1:case 2:case 3:var t=3;break;default:t=P}var n=P;P=t;try{return e()}finally{P=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=M,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=P;P=e;try{return t()}finally{P=n}},t.unstable_scheduleCallback=function(e,a,i){var l=t.unstable_now();switch(i="object"==typeof i&&null!==i&&"number"==typeof(i=i.delay)&&0<i?l+i:l,e){case 1:var u=-1;break;case 2:u=250;break;case 5:u=1073741823;break;case 4:u=1e4;break;default:u=5e3}return e={id:T++,callback:a,priorityLevel:e,startTime:i,expirationTime:u=i+u,sortIndex:-1},i>l?(e.sortIndex=i,E(_,e),null===x(C)&&e===x(_)&&(I?o():I=!0,r(j,i-l))):(e.sortIndex=u,E(C,e),L||N||(L=!0,n(F))),e},t.unstable_wrapCallback=function(e){var t=P;return function(){var n=P;P=t;try{return e.apply(this,arguments)}finally{P=n}}}},3840:(e,t,n)=>{"use strict";e.exports=n(53)},500:e=>{"use strict";e.exports=(e,t)=>{if("string"!=typeof e||"string"!=typeof t)throw new TypeError("Expected the arguments to be of type `string`");if(""===t)return[e];const n=e.indexOf(t);return-1===n?[e]:[e.slice(0,n),e.slice(n+t.length)]}},610:e=>{"use strict";e.exports=e=>encodeURIComponent(e).replace(/[!'()*]/g,(e=>`%${e.charCodeAt(0).toString(16).toUpperCase()}`))},4286:(e,t,n)=>{"use strict";var r=n(3379),o=n.n(r),a=n(9566),i=o()(a.default,{insert:"head",singleton:!1});if(!a.default.locals||e.hot.invalidate){var l=a.default.locals;e.hot.accept(9566,(t=>{a=n(9566),function(e,t,n){if(!e&&t||e&&!t)return!1;var r;for(r in e)if(e[r]!==t[r])return!1;for(r in t)if(!e[r])return!1;return!0}(l,a.default.locals)?(l=a.default.locals,i(a.default)):e.hot.invalidate()}))}e.hot.dispose((function(){i()})),a.default.locals},3379:(e,t,n)=>{"use strict";var r,o=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),a=[];function i(e){for(var t=-1,n=0;n<a.length;n++)if(a[n].identifier===e){t=n;break}return t}function l(e,t){for(var n={},r=[],o=0;o<e.length;o++){var l=e[o],u=t.base?l[0]+t.base:l[0],c=n[u]||0,s="".concat(u," ").concat(c);n[u]=c+1;var f=i(s),d={css:l[1],media:l[2],sourceMap:l[3]};-1!==f?(a[f].references++,a[f].updater(d)):a.push({identifier:s,updater:m(d,t),references:1}),r.push(s)}return r}function u(e){var t=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var a=n.nc;a&&(r.nonce=a)}if(Object.keys(r).forEach((function(e){t.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(t);else{var i=o(e.insert||"head");if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}return t}var c,s=(c=[],function(e,t){return c[e]=t,c.filter(Boolean).join("\n")});function f(e,t,n,r){var o=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=s(t,o);else{var a=document.createTextNode(o),i=e.childNodes;i[t]&&e.removeChild(i[t]),i.length?e.insertBefore(a,i[t]):e.appendChild(a)}}function d(e,t,n){var r=n.css,o=n.media,a=n.sourceMap;if(o?e.setAttribute("media",o):e.removeAttribute("media"),a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var p=null,h=0;function m(e,t){var n,r,o;if(t.singleton){var a=h++;n=p||(p=u(t)),r=f.bind(null,n,a,!1),o=f.bind(null,n,a,!0)}else n=u(t),r=d.bind(null,n,t),o=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=(void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r));var n=l(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<n.length;r++){var o=i(n[r]);a[o].references--}for(var u=l(e,t),c=0;c<n.length;c++){var s=i(n[c]);0===a[s].references&&(a[s].updater(),a.splice(s,1))}n=u}}}}},r={};function o(e){var t=r[e];if(void 0!==t){if(void 0!==t.error)throw t.error;return t.exports}var a=r[e]={id:e,exports:{}};try{var i={id:e,module:a,factory:n[e],require:o};o.i.forEach((function(e){e(i)})),a=i.module,i.factory.call(a.exports,a,a.exports,i.require)}catch(e){throw a.error=e,e}return a.exports}o.m=n,o.c=r,o.i=[],o.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return o.d(t,{a:t}),t},o.d=(e,t)=>{for(var n in t)o.o(t,n)&&!o.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},o.hu=e=>e+"."+o.h()+".hot-update.js",o.hmrF=()=>"main."+o.h()+".hot-update.json",o.h=()=>"7a14257d21505a674123",o.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),e={},t="typescriptDocs:",o.l=(n,r,a,i)=>{if(e[n])e[n].push(r);else{var l,u;if(void 0!==a)for(var c=document.getElementsByTagName("script"),s=0;s<c.length;s++){var f=c[s];if(f.getAttribute("src")==n||f.getAttribute("data-webpack")==t+a){l=f;break}}l||(u=!0,(l=document.createElement("script")).charset="utf-8",l.timeout=120,o.nc&&l.setAttribute("nonce",o.nc),l.setAttribute("data-webpack",t+a),l.src=n),e[n]=[r];var d=(t,r)=>{l.onerror=l.onload=null,clearTimeout(p);var o=e[n];if(delete e[n],l.parentNode&&l.parentNode.removeChild(l),o&&o.forEach((e=>e(r))),t)return t(r)},p=setTimeout(d.bind(null,void 0,{type:"timeout",target:l}),12e4);l.onerror=d.bind(null,l.onerror),l.onload=d.bind(null,l.onload),u&&document.head.appendChild(l)}},o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e,t,n,r,a={},i=o.c,l=[],u=[],c="idle";function s(e){c=e;for(var t=0;t<u.length;t++)u[t].call(null,e)}function f(e){if(0===t.length)return e();var n=t;return t=[],Promise.all(n).then((function(){return f(e)}))}function d(e){if("idle"!==c)throw new Error("check() is only allowed in idle status");return s("check"),o.hmrM().then((function(r){if(!r)return s(m()?"ready":"idle"),null;s("prepare");var a=[];return t=[],n=[],Promise.all(Object.keys(o.hmrC).reduce((function(e,t){return o.hmrC[t](r.c,r.r,r.m,e,n,a),e}),[])).then((function(){return f((function(){return e?h(e):(s("ready"),a)}))}))}))}function p(e){return"ready"!==c?Promise.resolve().then((function(){throw new Error("apply() is only allowed in ready status")})):h(e)}function h(e){e=e||{},m();var t=n.map((function(t){return t(e)}));n=void 0;var o,a=t.map((function(e){return e.error})).filter(Boolean);if(a.length>0)return s("abort"),Promise.resolve().then((function(){throw a[0]}));s("dispose"),t.forEach((function(e){e.dispose&&e.dispose()})),s("apply");var i=function(e){o||(o=e)},l=[];return t.forEach((function(e){if(e.apply){var t=e.apply(i);if(t)for(var n=0;n<t.length;n++)l.push(t[n])}})),o?(s("fail"),Promise.resolve().then((function(){throw o}))):r?h(e).then((function(e){return l.forEach((function(t){e.indexOf(t)<0&&e.push(t)})),e})):(s("idle"),Promise.resolve(l))}function m(){if(r)return n||(n=[]),Object.keys(o.hmrI).forEach((function(e){r.forEach((function(t){o.hmrI[e](t,n)}))})),r=void 0,!0}o.hmrD=a,o.i.push((function(h){var m,v,y,g,b=h.module,w=function(n,r){var o=i[r];if(!o)return n;var a=function(t){if(o.hot.active){if(i[t]){var a=i[t].parents;-1===a.indexOf(r)&&a.push(r)}else l=[r],e=t;-1===o.children.indexOf(t)&&o.children.push(t)}else console.warn("[HMR] unexpected require("+t+") from disposed module "+r),l=[];return n(t)},u=function(e){return{configurable:!0,enumerable:!0,get:function(){return n[e]},set:function(t){n[e]=t}}};for(var d in n)Object.prototype.hasOwnProperty.call(n,d)&&"e"!==d&&Object.defineProperty(a,d,u(d));return a.e=function(e){return function(e){switch(c){case"ready":return s("prepare"),t.push(e),f((function(){s("ready")})),e;case"prepare":return t.push(e),e;default:return e}}(n.e(e))},a}(h.require,h.id);b.hot=(m=h.id,v=b,g={_acceptedDependencies:{},_acceptedErrorHandlers:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_selfInvalidated:!1,_disposeHandlers:[],_main:y=e!==m,_requireSelf:function(){l=v.parents.slice(),e=y?void 0:m,o(m)},active:!0,accept:function(e,t,n){if(void 0===e)g._selfAccepted=!0;else if("function"==typeof e)g._selfAccepted=e;else if("object"==typeof e&&null!==e)for(var r=0;r<e.length;r++)g._acceptedDependencies[e[r]]=t||function(){},g._acceptedErrorHandlers[e[r]]=n;else g._acceptedDependencies[e]=t||function(){},g._acceptedErrorHandlers[e]=n},decline:function(e){if(void 0===e)g._selfDeclined=!0;else if("object"==typeof e&&null!==e)for(var t=0;t<e.length;t++)g._declinedDependencies[e[t]]=!0;else g._declinedDependencies[e]=!0},dispose:function(e){g._disposeHandlers.push(e)},addDisposeHandler:function(e){g._disposeHandlers.push(e)},removeDisposeHandler:function(e){var t=g._disposeHandlers.indexOf(e);t>=0&&g._disposeHandlers.splice(t,1)},invalidate:function(){switch(this._selfInvalidated=!0,c){case"idle":n=[],Object.keys(o.hmrI).forEach((function(e){o.hmrI[e](m,n)})),s("ready");break;case"ready":Object.keys(o.hmrI).forEach((function(e){o.hmrI[e](m,n)}));break;case"prepare":case"check":case"dispose":case"apply":(r=r||[]).push(m)}},check:d,apply:p,status:function(e){if(!e)return c;u.push(e)},addStatusHandler:function(e){u.push(e)},removeStatusHandler:function(e){var t=u.indexOf(e);t>=0&&u.splice(t,1)},data:a[m]},e=void 0,g),b.parents=l,b.children=[],l=[],h.require=w})),o.hmrC={},o.hmrI={}})(),(()=>{var e;o.g.importScripts&&(e=o.g.location+"");var t=o.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");n.length&&(e=n[n.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),o.p=e})(),(()=>{var e,t,n,r,a={179:0},i={};function l(e){return new Promise(((t,n)=>{i[e]=t;var r=o.p+o.hu(e),a=new Error;o.l(r,(t=>{if(i[e]){i[e]=void 0;var r=t&&("load"===t.type?"missing":t.type),o=t&&t.target&&t.target.src;a.message="Loading hot update chunk "+e+" failed.\n("+r+": "+o+")",a.name="ChunkLoadError",a.type=r,a.request=o,n(a)}}))}))}function u(i){function l(e){for(var t=[e],n={},r=t.map((function(e){return{chain:[e],id:e}}));r.length>0;){var a=r.pop(),i=a.id,l=a.chain,c=o.c[i];if(c&&(!c.hot._selfAccepted||c.hot._selfInvalidated)){if(c.hot._selfDeclined)return{type:"self-declined",chain:l,moduleId:i};if(c.hot._main)return{type:"unaccepted",chain:l,moduleId:i};for(var s=0;s<c.parents.length;s++){var f=c.parents[s],d=o.c[f];if(d){if(d.hot._declinedDependencies[i])return{type:"declined",chain:l.concat([f]),moduleId:i,parentId:f};-1===t.indexOf(f)&&(d.hot._acceptedDependencies[i]?(n[f]||(n[f]=[]),u(n[f],[i])):(delete n[f],t.push(f),r.push({chain:l.concat([f]),id:f})))}}}}return{type:"accepted",moduleId:e,outdatedModules:t,outdatedDependencies:n}}function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];-1===e.indexOf(r)&&e.push(r)}}o.f&&delete o.f.jsonpHmr,e=void 0;var c={},s=[],f={},d=function(e){console.warn("[HMR] unexpected require("+e.id+") to disposed module")};for(var p in t)if(o.o(t,p)){var h,m=t[p],v=!1,y=!1,g=!1,b="";switch((h=m?l(p):{type:"disposed",moduleId:p}).chain&&(b="\nUpdate propagation: "+h.chain.join(" -> ")),h.type){case"self-declined":i.onDeclined&&i.onDeclined(h),i.ignoreDeclined||(v=new Error("Aborted because of self decline: "+h.moduleId+b));break;case"declined":i.onDeclined&&i.onDeclined(h),i.ignoreDeclined||(v=new Error("Aborted because of declined dependency: "+h.moduleId+" in "+h.parentId+b));break;case"unaccepted":i.onUnaccepted&&i.onUnaccepted(h),i.ignoreUnaccepted||(v=new Error("Aborted because "+p+" is not accepted"+b));break;case"accepted":i.onAccepted&&i.onAccepted(h),y=!0;break;case"disposed":i.onDisposed&&i.onDisposed(h),g=!0;break;default:throw new Error("Unexception type "+h.type)}if(v)return{error:v};if(y)for(p in f[p]=m,u(s,h.outdatedModules),h.outdatedDependencies)o.o(h.outdatedDependencies,p)&&(c[p]||(c[p]=[]),u(c[p],h.outdatedDependencies[p]));g&&(u(s,[h.moduleId]),f[p]=d)}t=void 0;for(var w,k=[],E=0;E<s.length;E++){var x=s[E],S=o.c[x];S&&(S.hot._selfAccepted||S.hot._main)&&f[x]!==d&&!S.hot._selfInvalidated&&k.push({module:x,require:S.hot._requireSelf,errorHandler:S.hot._selfAccepted})}return{dispose:function(){var e;n.forEach((function(e){delete a[e]})),n=void 0;for(var t,r=s.slice();r.length>0;){var i=r.pop(),l=o.c[i];if(l){var u={},f=l.hot._disposeHandlers;for(E=0;E<f.length;E++)f[E].call(null,u);for(o.hmrD[i]=u,l.hot.active=!1,delete o.c[i],delete c[i],E=0;E<l.children.length;E++){var d=o.c[l.children[E]];d&&(e=d.parents.indexOf(i))>=0&&d.parents.splice(e,1)}}}for(var p in c)if(o.o(c,p)&&(l=o.c[p]))for(w=c[p],E=0;E<w.length;E++)t=w[E],(e=l.children.indexOf(t))>=0&&l.children.splice(e,1)},apply:function(e){for(var t in f)o.o(f,t)&&(o.m[t]=f[t]);for(var n=0;n<r.length;n++)r[n](o);for(var a in c)if(o.o(c,a)){var l=o.c[a];if(l){w=c[a];for(var u=[],d=[],p=[],h=0;h<w.length;h++){var m=w[h],v=l.hot._acceptedDependencies[m],y=l.hot._acceptedErrorHandlers[m];if(v){if(-1!==u.indexOf(v))continue;u.push(v),d.push(y),p.push(m)}}for(var g=0;g<u.length;g++)try{u[g].call(null,w)}catch(t){if("function"==typeof d[g])try{d[g](t,{moduleId:a,dependencyId:p[g]})}catch(n){i.onErrored&&i.onErrored({type:"accept-error-handler-errored",moduleId:a,dependencyId:p[g],error:n,originalError:t}),i.ignoreErrored||(e(n),e(t))}else i.onErrored&&i.onErrored({type:"accept-errored",moduleId:a,dependencyId:p[g],error:t}),i.ignoreErrored||e(t)}}}for(var b=0;b<k.length;b++){var E=k[b],x=E.module;try{E.require(x)}catch(t){if("function"==typeof E.errorHandler)try{E.errorHandler(t,{moduleId:x,module:o.c[x]})}catch(n){i.onErrored&&i.onErrored({type:"self-accept-error-handler-errored",moduleId:x,error:n,originalError:t}),i.ignoreErrored||(e(n),e(t))}else i.onErrored&&i.onErrored({type:"self-accept-errored",moduleId:x,error:t}),i.ignoreErrored||e(t)}}return s}}}self.webpackHotUpdatetypescriptDocs=(e,n,a)=>{for(var l in n)o.o(n,l)&&(t[l]=n[l]);a&&r.push(a),i[e]&&(i[e](),i[e]=void 0)},o.hmrI.jsonp=function(e,a){t||(t={},r=[],n=[],a.push(u)),o.o(t,e)||(t[e]=o.m[e])},o.hmrC.jsonp=function(i,c,s,f,d,p){d.push(u),e={},n=c,t=s.reduce((function(e,t){return e[t]=!1,e}),{}),r=[],i.forEach((function(t){o.o(a,t)&&void 0!==a[t]&&(f.push(l(t)),e[t]=!0)})),o.f&&(o.f.jsonpHmr=function(t,n){e&&!o.o(e,t)&&o.o(a,t)&&void 0!==a[t]&&(n.push(l(t)),e[t]=!0)})},o.hmrM=()=>{if("undefined"==typeof fetch)throw new Error("No browser support: need fetch API");return fetch(o.p+o.hmrF()).then((e=>{if(404!==e.status){if(!e.ok)throw new Error("Failed to fetch update manifest "+e.statusText);return e.json()}}))}})(),o(3013)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy93ZWJwYWNrL3J1bnRpbWUvbG9hZCBzY3JpcHQiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3MvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2V0UHJvdG90eXBlT2YuanMiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3MvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZS5qcyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzLmpzIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vbm9kZV9tb2R1bGVzL3Jlc29sdmUtcGF0aG5hbWUvZXNtL3Jlc29sdmUtcGF0aG5hbWUuanMiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3MvLi9ub2RlX21vZHVsZXMvdGlueS1pbnZhcmlhbnQvZGlzdC90aW55LWludmFyaWFudC5lc20uanMiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3MvLi9ub2RlX21vZHVsZXMvaGlzdG9yeS9lc20vaGlzdG9yeS5qcyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy8uL25vZGVfbW9kdWxlcy9taW5pLWNyZWF0ZS1yZWFjdC1jb250ZXh0L2Rpc3QvZXNtL2luZGV4LmpzIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UuanMiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3MvLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL2VzbS9yZWFjdC1yb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3MvLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9lc20vcmVhY3Qtcm91dGVyLWRvbS5qcyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy8uL3NyYy9jb21wb25lbnRzL1RvZG8vdHlwZXMudHMiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3MvLi9zcmMvY29tcG9uZW50cy9Ub2RvL1RvZG9JdGVtLnRzeCIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy8uL3NyYy9jb21wb25lbnRzL1RvZG8vaWNvbnMvcmlnaHQucG5nIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vc3JjL2NvbXBvbmVudHMvVG9kby9pY29ucy9kb3duLnBuZyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy8uL3NyYy9jb21wb25lbnRzL1RvZG8vVG9kb0l0ZW1MaXN0LnRzeCIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy8uL3NyYy9jb21wb25lbnRzL1RvZG8vaWNvbnMvYWRkLnBuZyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy8uL3NyYy9jb21wb25lbnRzL1RvZG8vVG9kb0NvbXBvbmVudC50c3giLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3MvLi9zcmMvY29tcG9uZW50cy9Ub2RvL2ljb25zL2JhY2sucG5nIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vc3JjL2NvbXBvbmVudHMvVG9kby9GaW5pc2hlZFRvZG8udHN4Iiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vc3JjL2NvbXBvbmVudHMvVG9kby9pY29ucy9wZXJzb24ucG5nIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vc3JjL2NvbXBvbmVudHMvVG9kby9pY29ucy9wcmlvcml0eS1oaWdoLnBuZyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy8uL3NyYy9jb21wb25lbnRzL1RvZG8vaWNvbnMvcGFydGljaXBhbnRzLnBuZyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy8uL3NyYy9jb21wb25lbnRzL1RvZG8vaWNvbnMvbWVtby5wbmciLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3MvLi9zcmMvY29tcG9uZW50cy9Ub2RvL2ljb25zL2Nsb2NrLnBuZyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy8uL3NyYy9jb21wb25lbnRzL1RvZG8vRWRpdFRvZG9JdGVtLnRzeCIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy8uL3NyYy9BcHAudHN4Iiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vc3JjL2NvbXBvbmVudHMvVG9kby9nbG9iYWwudHMiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3MvLi9zcmMvaW5kZXgudHN4Iiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYS1mdW5jdGlvbi5qcyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2FuLW9iamVjdC5qcyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2FycmF5LWluY2x1ZGVzLmpzIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYXJyYXktbWV0aG9kcy5qcyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2FycmF5LXNwZWNpZXMtY29uc3RydWN0b3IuanMiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3MvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hcnJheS1zcGVjaWVzLWNyZWF0ZS5qcyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2JpbmQuanMiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3MvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19jbGFzc29mLmpzIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fY29mLmpzIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fY29yZS5qcyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2N0eC5qcyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2RlZmluZWQuanMiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3MvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19kZXNjcmlwdG9ycy5qcyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2RvbS1jcmVhdGUuanMiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3MvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19lbnVtLWJ1Zy1rZXlzLmpzIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZXhwb3J0LmpzIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZmFpbHMuanMiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3MvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19maXgtcmUtd2tzLmpzIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZmxhZ3MuanMiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3MvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19mdW5jdGlvbi10by1zdHJpbmcuanMiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3MvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19nbG9iYWwuanMiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3MvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19oYXMuanMiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3MvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19oaWRlLmpzIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faHRtbC5qcyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2llOC1kb20tZGVmaW5lLmpzIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faW52b2tlLmpzIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faW9iamVjdC5qcyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2lzLWFycmF5LmpzIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXMtb2JqZWN0LmpzIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fbGlicmFyeS5qcyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC1hc3NpZ24uanMiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3MvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtY3JlYXRlLmpzIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWRwLmpzIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWRwcy5qcyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC1nb3BkLmpzIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWdvcHMuanMiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3MvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3Qta2V5cy1pbnRlcm5hbC5qcyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC1rZXlzLmpzIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LXBpZS5qcyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3Byb3BlcnR5LWRlc2MuanMiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3MvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19yZWRlZmluZS5qcyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3JlZ2V4cC1leGVjLWFic3RyYWN0LmpzIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fcmVnZXhwLWV4ZWMuanMiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3MvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zYW1lLXZhbHVlLmpzIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc2V0LXByb3RvLmpzIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc2hhcmVkLWtleS5qcyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3NoYXJlZC5qcyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3N0cmljdC1tZXRob2QuanMiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3MvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190by1hYnNvbHV0ZS1pbmRleC5qcyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3RvLWludGVnZXIuanMiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3MvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190by1pb2JqZWN0LmpzIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdG8tbGVuZ3RoLmpzIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdG8tb2JqZWN0LmpzIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdG8tcHJpbWl0aXZlLmpzIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdWlkLmpzIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fd2tzLmpzIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuZmlsdGVyLmpzIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuZm9yLWVhY2guanMiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3MvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5tYXAuanMiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3MvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5zbGljZS5qcyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmRhdGUubm93LmpzIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuZnVuY3Rpb24uYmluZC5qcyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5hc3NpZ24uanMiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3MvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3QuY3JlYXRlLmpzIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LnNldC1wcm90b3R5cGUtb2YuanMiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3MvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWdleHAuZXhlYy5qcyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZ2V4cC5zZWFyY2guanMiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3MvLi9zcmMvY29tcG9uZW50cy9Ub2RvL3N0eWxlcy9zdHlsZS5sZXNzIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9jc3NXaXRoTWFwcGluZ1RvU3RyaW5nLmpzIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vbm9kZV9tb2R1bGVzL2RlY29kZS11cmktY29tcG9uZW50L2luZGV4LmpzIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vbm9kZV9tb2R1bGVzL2ZpbHRlci1vYmovaW5kZXguanMiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3MvLi9ub2RlX21vZHVsZXMvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MvZGlzdC9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy5janMuanMiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3MvLi9ub2RlX21vZHVsZXMvb2JqZWN0LWFzc2lnbi9pbmRleC5qcyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcy5qcyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2luZGV4LmpzIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0LmpzIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vbm9kZV9tb2R1bGVzL3F1ZXJ5LXN0cmluZy9pbmRleC5qcyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vaW5kZXguanMiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3MvLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2luZGV4LmpzIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9ub2RlX21vZHVsZXMvaXNhcnJheS9pbmRleC5qcyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvbm9kZV9tb2R1bGVzL3BhdGgtdG8tcmVnZXhwL2luZGV4LmpzIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy8uL25vZGVfbW9kdWxlcy9yZWFjdC9pbmRleC5qcyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3MvLi9ub2RlX21vZHVsZXMvc3BsaXQtb24tZmlyc3QvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3MvLi9ub2RlX21vZHVsZXMvc3RyaWN0LXVyaS1lbmNvZGUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3MvLi9zcmMvY29tcG9uZW50cy9Ub2RvL3N0eWxlcy9zdHlsZS5sZXNzPzNhNmYiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3MvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3Mvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3Mvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3Mvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzL3dlYnBhY2svcnVudGltZS9nZXQgamF2YXNjcmlwdCB1cGRhdGUgY2h1bmsgZmlsZW5hbWUiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3Mvd2VicGFjay9ydW50aW1lL2dldCB1cGRhdGUgbWFuaWZlc3QgZmlsZW5hbWUiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3Mvd2VicGFjay9ydW50aW1lL2dldEZ1bGxIYXNoIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzL3dlYnBhY2svcnVudGltZS9nbG9iYWwiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdERvY3Mvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly90eXBlc2NyaXB0RG9jcy93ZWJwYWNrL3J1bnRpbWUvbWFrZSBuYW1lc3BhY2Ugb2JqZWN0Iiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzL3dlYnBhY2svcnVudGltZS9ob3QgbW9kdWxlIHJlcGxhY2VtZW50Iiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzL3dlYnBhY2svcnVudGltZS9wdWJsaWNQYXRoIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzL3dlYnBhY2svcnVudGltZS9qc29ucCBjaHVuayBsb2FkaW5nIiwid2VicGFjazovL3R5cGVzY3JpcHREb2NzL3dlYnBhY2svc3RhcnR1cCJdLCJuYW1lcyI6WyJpblByb2dyZXNzIiwiZGF0YVdlYnBhY2tQcmVmaXgiLCJfc2V0UHJvdG90eXBlT2YiLCJvIiwicCIsIk9iamVjdCIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiX2luaGVyaXRzTG9vc2UiLCJzdWJDbGFzcyIsInN1cGVyQ2xhc3MiLCJwcm90b3R5cGUiLCJjcmVhdGUiLCJjb25zdHJ1Y3RvciIsImFzc2lnbiIsInRhcmdldCIsImkiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJzb3VyY2UiLCJrZXkiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJhcHBseSIsInRoaXMiLCJpc0Fic29sdXRlIiwicGF0aG5hbWUiLCJjaGFyQXQiLCJzcGxpY2VPbmUiLCJsaXN0IiwiaW5kZXgiLCJrIiwibiIsInBvcCIsImNvbmRpdGlvbiIsIm1lc3NhZ2UiLCJFcnJvciIsImFkZExlYWRpbmdTbGFzaCIsInBhdGgiLCJzdHJpcEJhc2VuYW1lIiwicHJlZml4IiwidG9Mb3dlckNhc2UiLCJpbmRleE9mIiwiaGFzQmFzZW5hbWUiLCJzdWJzdHIiLCJzdHJpcFRyYWlsaW5nU2xhc2giLCJzbGljZSIsImNyZWF0ZVBhdGgiLCJsb2NhdGlvbiIsInNlYXJjaCIsImhhc2giLCJzdGF0ZSIsImN1cnJlbnRMb2NhdGlvbiIsImhhc2hJbmRleCIsInNlYXJjaEluZGV4IiwicGFyc2VQYXRoIiwidW5kZWZpbmVkIiwiZGVjb2RlVVJJIiwiZSIsIlVSSUVycm9yIiwidG8iLCJmcm9tIiwiaGFzVHJhaWxpbmdTbGFzaCIsInRvUGFydHMiLCJzcGxpdCIsImZyb21QYXJ0cyIsImlzVG9BYnMiLCJpc0Zyb21BYnMiLCJtdXN0RW5kQWJzIiwiY29uY2F0IiwibGFzdCIsInVwIiwicGFydCIsInVuc2hpZnQiLCJyZXN1bHQiLCJqb2luIiwiY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIiLCJwcm9tcHQiLCJsaXN0ZW5lcnMiLCJzZXRQcm9tcHQiLCJuZXh0UHJvbXB0IiwiY29uZmlybVRyYW5zaXRpb25UbyIsImFjdGlvbiIsImdldFVzZXJDb25maXJtYXRpb24iLCJjYWxsYmFjayIsImFwcGVuZExpc3RlbmVyIiwiZm4iLCJpc0FjdGl2ZSIsImxpc3RlbmVyIiwicHVzaCIsImZpbHRlciIsIml0ZW0iLCJub3RpZnlMaXN0ZW5lcnMiLCJfbGVuIiwiYXJncyIsIkFycmF5IiwiX2tleSIsImZvckVhY2giLCJjYW5Vc2VET00iLCJ3aW5kb3ciLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJnZXRDb25maXJtYXRpb24iLCJjb25maXJtIiwiUG9wU3RhdGVFdmVudCIsIkhhc2hDaGFuZ2VFdmVudCIsImdldEhpc3RvcnlTdGF0ZSIsImhpc3RvcnkiLCJjcmVhdGVCcm93c2VySGlzdG9yeSIsInByb3BzIiwidWEiLCJnbG9iYWxIaXN0b3J5IiwiY2FuVXNlSGlzdG9yeSIsIm5hdmlnYXRvciIsInVzZXJBZ2VudCIsIm5lZWRzSGFzaENoYW5nZUxpc3RlbmVyIiwiX3Byb3BzIiwiX3Byb3BzJGZvcmNlUmVmcmVzaCIsImZvcmNlUmVmcmVzaCIsIl9wcm9wcyRnZXRVc2VyQ29uZmlybSIsIl9wcm9wcyRrZXlMZW5ndGgiLCJrZXlMZW5ndGgiLCJiYXNlbmFtZSIsImdldERPTUxvY2F0aW9uIiwiaGlzdG9yeVN0YXRlIiwiX3JlZiIsIl93aW5kb3ckbG9jYXRpb24iLCJjcmVhdGVLZXkiLCJNYXRoIiwicmFuZG9tIiwidG9TdHJpbmciLCJ0cmFuc2l0aW9uTWFuYWdlciIsInNldFN0YXRlIiwibmV4dFN0YXRlIiwiaGFuZGxlUG9wU3RhdGUiLCJldmVudCIsImlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQiLCJoYW5kbGVQb3AiLCJoYW5kbGVIYXNoQ2hhbmdlIiwiZm9yY2VOZXh0UG9wIiwib2siLCJmcm9tTG9jYXRpb24iLCJ0b0xvY2F0aW9uIiwidG9JbmRleCIsImFsbEtleXMiLCJmcm9tSW5kZXgiLCJkZWx0YSIsImdvIiwicmV2ZXJ0UG9wIiwiaW5pdGlhbExvY2F0aW9uIiwiY3JlYXRlSHJlZiIsImxpc3RlbmVyQ291bnQiLCJjaGVja0RPTUxpc3RlbmVycyIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiaXNCbG9ja2VkIiwiaHJlZiIsInB1c2hTdGF0ZSIsInByZXZJbmRleCIsIm5leHRLZXlzIiwicmVwbGFjZSIsInJlcGxhY2VTdGF0ZSIsImdvQmFjayIsImdvRm9yd2FyZCIsImJsb2NrIiwidW5ibG9jayIsImxpc3RlbiIsInVubGlzdGVuIiwiTUFYX1NJR05FRF8zMV9CSVRfSU5UIiwiY29tbW9uanNHbG9iYWwiLCJnbG9iYWxUaGlzIiwiZyIsImNyZWF0ZUV2ZW50RW1pdHRlciIsInZhbHVlIiwiaGFuZGxlcnMiLCJvbiIsImhhbmRsZXIiLCJvZmYiLCJoIiwiZ2V0Iiwic2V0IiwibmV3VmFsdWUiLCJjaGFuZ2VkQml0cyIsImRlZmF1bHRWYWx1ZSIsImNhbGN1bGF0ZUNoYW5nZWRCaXRzIiwiX1Byb3ZpZGVyJGNoaWxkQ29udGV4IiwiX0NvbnN1bWVyJGNvbnRleHRUeXBlIiwiY29udGV4dFByb3AiLCJQcm92aWRlciIsIl9Db21wb25lbnQiLCJfdGhpcyIsImVtaXR0ZXIiLCJfcHJvdG8iLCJnZXRDaGlsZENvbnRleHQiLCJjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwibmV4dFByb3BzIiwib2xkVmFsdWUiLCJ4IiwieSIsInJlbmRlciIsImNoaWxkcmVuIiwiQ29tcG9uZW50IiwiY2hpbGRDb250ZXh0VHlwZXMiLCJDb25zdW1lciIsIl9Db21wb25lbnQyIiwiX3RoaXMyIiwiZ2V0VmFsdWUiLCJvblVwZGF0ZSIsIm9ic2VydmVkQml0cyIsIl9wcm90bzIiLCJjb21wb25lbnREaWRNb3VudCIsImNvbnRleHQiLCJjb21wb25lbnRXaWxsVW5tb3VudCIsImlzQXJyYXkiLCJjb250ZXh0VHlwZXMiLCJleGNsdWRlZCIsInNvdXJjZUtleXMiLCJrZXlzIiwiaGlzdG9yeUNvbnRleHQiLCJuYW1lIiwiZGlzcGxheU5hbWUiLCJjcmVhdGVOYW1lZENvbnRleHQiLCJjcmVhdGVOYW1lZENvbnRleHQkMSIsIlJvdXRlciIsIl9SZWFjdCRDb21wb25lbnQiLCJfaXNNb3VudGVkIiwiX3BlbmRpbmdMb2NhdGlvbiIsInN0YXRpY0NvbnRleHQiLCJjb21wdXRlUm9vdE1hdGNoIiwidXJsIiwicGFyYW1zIiwiaXNFeGFjdCIsIm1hdGNoIiwiY2FjaGUkMSIsImNhY2hlQ291bnQkMSIsIm1hdGNoUGF0aCIsIm9wdGlvbnMiLCJfb3B0aW9ucyIsIl9vcHRpb25zJGV4YWN0IiwiZXhhY3QiLCJfb3B0aW9ucyRzdHJpY3QiLCJzdHJpY3QiLCJfb3B0aW9ucyRzZW5zaXRpdmUiLCJzZW5zaXRpdmUiLCJyZWR1Y2UiLCJtYXRjaGVkIiwiX2NvbXBpbGVQYXRoIiwiY2FjaGVLZXkiLCJlbmQiLCJwYXRoQ2FjaGUiLCJyZWdleHAiLCJjb21waWxlUGF0aCQxIiwiZXhlYyIsInZhbHVlcyIsIm1lbW8iLCJSb3V0ZSIsImNvbnRleHQkMSIsImNvbXB1dGVkTWF0Y2giLCJfdGhpcyRwcm9wcyIsImNvbXBvbmVudCIsIkJyb3dzZXJSb3V0ZXIiLCJyZXNvbHZlVG9Mb2NhdGlvbiIsIm5vcm1hbGl6ZVRvTG9jYXRpb24iLCJmb3J3YXJkUmVmU2hpbSIsIkMiLCJmb3J3YXJkUmVmIiwiTGlua0FuY2hvciIsImZvcndhcmRlZFJlZiIsImlubmVyUmVmIiwibmF2aWdhdGUiLCJfb25DbGljayIsIm9uQ2xpY2siLCJyZXN0IiwiZXgiLCJwcmV2ZW50RGVmYXVsdCIsImRlZmF1bHRQcmV2ZW50ZWQiLCJidXR0b24iLCJtZXRhS2V5IiwiYWx0S2V5IiwiY3RybEtleSIsInNoaWZ0S2V5IiwiaXNNb2RpZmllZEV2ZW50IiwicmVmIiwiTGluayIsIl9yZWYyIiwiX3JlZjIkY29tcG9uZW50IiwiZm9yd2FyZFJlZlNoaW0kMSIsImZvcndhcmRSZWYkMSIsIl9yZWYkYXJpYUN1cnJlbnQiLCJhcmlhQ3VycmVudCIsIl9yZWYkYWN0aXZlQ2xhc3NOYW1lIiwiYWN0aXZlQ2xhc3NOYW1lIiwiYWN0aXZlU3R5bGUiLCJjbGFzc05hbWVQcm9wIiwiY2xhc3NOYW1lIiwiaXNBY3RpdmVQcm9wIiwibG9jYXRpb25Qcm9wIiwic3R5bGVQcm9wIiwic3R5bGUiLCJlc2NhcGVkUGF0aCIsImNsYXNzbmFtZXMiLCJqb2luQ2xhc3NuYW1lcyIsIkRheURpY3QiLCJwYXJhbSIsIlRpdGxlIiwiaWZGaW5pc2hlZCIsIk1lbW8iLCJBdHRhY2hlZEZpbGVzIiwiT3RoZXJQYXJ0aWNpcGFudHMiLCJFbWVyZ3lMZXZhbCIsIlBlcnNvbiIsIkV4cGlyZVRpbWUiLCJub3JtYWxUZXh0Q29sb3IiLCJoYW5kbGVCdG5DbGlja0l0ZW1GaW5pc2hlZCIsImZyZXNoVGFza3NMaXN0IiwiY2FsY3VsYXRlRGF0ZVRleHQiLCJleHBpcmVUaW1lIiwiZGVzY3JpcHRpb24iLCJnZXREYXkiLCJnZXRNb250aCIsImdldERhdGUiLCJjYWxjdWxhdGVUZXh0Q29sb3IiLCJoZWlnaHQiLCJjb2xvciIsIk5hbWUiLCJyaWdodCIsInRvcCIsImRpc2FibGVkIiwiYm90dG9tIiwiYmluZCIsImlmc2hvd0xpc3QiLCJJY29uIiwiaGFuZGxlSXRlbUZpbmlzaGVkIiwiaGFuZGxlQ2xpY2tIaWRlIiwiZG93biIsInNyYyIsImFsdCIsIm1hcCIsInRpbWVyIiwiVGFza3NMaXN0IiwiY3VycmVudFRpbWUiLCJEYXRlIiwibm93Iiwic2V0SW50ZXJ2YWwiLCJjbGVhckludGVydmFsIiwiZ2V0RXhwaXJlVGFza3MiLCJnZXRUaW1lIiwiZ2V0SW43RGF5c1Rhc2tzIiwiZ2V0RnV0dXJlQ29taW5nVGFzayIsImJhY2siLCJoYW5kbGVSZWZyZXNoVGFza3NMaXN0IiwidHlwZSIsImNoZWNrZWQiLCJvbkNoYW5nZSIsImNvbnNvbGUiLCJsb2ciLCJwZXJzb24iLCJjbG9jayIsInRvTG9jYWxlRGF0ZVN0cmluZyIsInBsYWNlaG9sZGVyIiwidXNlU3RhdGUiLCJkYXRhIiwic2V0RGF0YSIsInVzZUVmZmVjdCIsIlRlc3REYXRhIiwicGVyc29uMSIsIlJlYWxUYXNrIiwiSWQiLCJkYXRhY29weSIsIm1ha2VJdGVtRmluaXNoZWQiLCJuZXdEYXRhIiwiZGlyIiwicXVlcnlTZWxlY3RvciIsIm1vZHVsZSIsImV4cG9ydHMiLCJpdCIsIlR5cGVFcnJvciIsImlzT2JqZWN0IiwidG9JT2JqZWN0IiwidG9MZW5ndGgiLCJ0b0Fic29sdXRlSW5kZXgiLCJJU19JTkNMVURFUyIsIiR0aGlzIiwiZWwiLCJPIiwiY3R4IiwiSU9iamVjdCIsInRvT2JqZWN0IiwiYXNjIiwiVFlQRSIsIiRjcmVhdGUiLCJJU19NQVAiLCJJU19GSUxURVIiLCJJU19TT01FIiwiSVNfRVZFUlkiLCJJU19GSU5EX0lOREVYIiwiTk9fSE9MRVMiLCJjYWxsYmFja2ZuIiwidGhhdCIsInZhbCIsInJlcyIsInNlbGYiLCJmIiwiU1BFQ0lFUyIsIm9yaWdpbmFsIiwic3BlY2llc0NvbnN0cnVjdG9yIiwiYUZ1bmN0aW9uIiwiaW52b2tlIiwiYXJyYXlTbGljZSIsImZhY3RvcmllcyIsImNvbnN0cnVjdCIsIkYiLCJsZW4iLCJGdW5jdGlvbiIsInBhcnRBcmdzIiwiYm91bmQiLCJjb2YiLCJUQUciLCJBUkciLCJUIiwiQiIsInRyeUdldCIsImNhbGxlZSIsImNvcmUiLCJ2ZXJzaW9uIiwiX19lIiwiYSIsImIiLCJjIiwiZGVmaW5lUHJvcGVydHkiLCJpcyIsImdsb2JhbCIsImhpZGUiLCJyZWRlZmluZSIsIiRleHBvcnQiLCJvd24iLCJvdXQiLCJleHAiLCJJU19GT1JDRUQiLCJJU19HTE9CQUwiLCJHIiwiSVNfU1RBVElDIiwiUyIsIklTX1BST1RPIiwiUCIsIklTX0JJTkQiLCJleHBQcm90byIsIlUiLCJXIiwiUiIsImZhaWxzIiwiZGVmaW5lZCIsIndrcyIsInJlZ2V4cEV4ZWMiLCJSRVBMQUNFX1NVUFBPUlRTX05BTUVEX0dST1VQUyIsInJlIiwiZ3JvdXBzIiwiU1BMSVRfV09SS1NfV0lUSF9PVkVSV1JJVFRFTl9FWEVDIiwib3JpZ2luYWxFeGVjIiwiS0VZIiwiU1lNQk9MIiwiREVMRUdBVEVTX1RPX1NZTUJPTCIsIkRFTEVHQVRFU19UT19FWEVDIiwiZXhlY0NhbGxlZCIsIm5hdGl2ZVJlZ0V4cE1ldGhvZCIsImZucyIsIm5hdGl2ZU1ldGhvZCIsInN0ciIsImFyZzIiLCJmb3JjZVN0cmluZ01ldGhvZCIsImRvbmUiLCJzdHJmbiIsInJ4Zm4iLCJTdHJpbmciLCJSZWdFeHAiLCJzdHJpbmciLCJhcmciLCJhbk9iamVjdCIsImlnbm9yZUNhc2UiLCJtdWx0aWxpbmUiLCJ1bmljb2RlIiwic3RpY2t5IiwiX19nIiwiZFAiLCJjcmVhdGVEZXNjIiwib2JqZWN0IiwiZG9jdW1lbnRFbGVtZW50IiwidW4iLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsIkRFU0NSSVBUT1JTIiwiZ2V0S2V5cyIsImdPUFMiLCJwSUUiLCIkYXNzaWduIiwiQSIsIlN5bWJvbCIsIksiLCJhTGVuIiwiZ2V0U3ltYm9scyIsImlzRW51bSIsImoiLCJkUHMiLCJlbnVtQnVnS2V5cyIsIklFX1BST1RPIiwiRW1wdHkiLCJjcmVhdGVEaWN0IiwiaWZyYW1lRG9jdW1lbnQiLCJpZnJhbWUiLCJkaXNwbGF5IiwiY29udGVudFdpbmRvdyIsIm9wZW4iLCJ3cml0ZSIsImx0IiwiY2xvc2UiLCJQcm9wZXJ0aWVzIiwiSUU4X0RPTV9ERUZJTkUiLCJ0b1ByaW1pdGl2ZSIsIkF0dHJpYnV0ZXMiLCJkZWZpbmVQcm9wZXJ0aWVzIiwiaGFzIiwiZ09QRCIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImdldE93blByb3BlcnR5U3ltYm9scyIsImFycmF5SW5kZXhPZiIsIm5hbWVzIiwiJGtleXMiLCJiaXRtYXAiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJTUkMiLCIkdG9TdHJpbmciLCJUT19TVFJJTkciLCJUUEwiLCJzYWZlIiwiaXNGdW5jdGlvbiIsImNsYXNzb2YiLCJidWlsdGluRXhlYyIsInJlMSIsInJlMiIsInJlZ2V4cEZsYWdzIiwibmF0aXZlRXhlYyIsIm5hdGl2ZVJlcGxhY2UiLCJwYXRjaGVkRXhlYyIsIlVQREFURVNfTEFTVF9JTkRFWF9XUk9ORyIsIk5QQ0dfSU5DTFVERUQiLCJsYXN0SW5kZXgiLCJyZUNvcHkiLCJjaGVjayIsInByb3RvIiwidGVzdCIsImJ1Z2d5Iiwic2hhcmVkIiwidWlkIiwiU0hBUkVEIiwic3RvcmUiLCJtb2RlIiwiY29weXJpZ2h0IiwibWV0aG9kIiwidG9JbnRlZ2VyIiwibWF4IiwibWluIiwiY2VpbCIsImZsb29yIiwiaXNOYU4iLCJ2YWx1ZU9mIiwiaWQiLCJweCIsIlVTRV9TWU1CT0wiLCIkZmlsdGVyIiwiJGZvckVhY2giLCJTVFJJQ1QiLCIkbWFwIiwiaHRtbCIsImJlZ2luIiwia2xhc3MiLCJzdGFydCIsInVwVG8iLCJzaXplIiwiY2xvbmVkIiwiZm9yY2VkIiwic2FtZVZhbHVlIiwicmVnRXhwRXhlYyIsIlNFQVJDSCIsIiRzZWFyY2giLCJtYXliZUNhbGxOYXRpdmUiLCJyeCIsInByZXZpb3VzTGFzdEluZGV4IiwiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwiY29udGVudCIsIm1vZHVsZXMiLCJtZWRpYVF1ZXJ5IiwiZGVkdXBlIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsIl9pIiwiX2FycmF5TGlrZVRvQXJyYXkiLCJhcnIiLCJhcnIyIiwiX2l0ZW0iLCJfYXJyYXlXaXRoSG9sZXMiLCJpdGVyYXRvciIsIl9hcnIiLCJfbiIsIl9kIiwiX2UiLCJfcyIsIm5leHQiLCJlcnIiLCJfaXRlcmFibGVUb0FycmF5TGltaXQiLCJtaW5MZW4iLCJfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkiLCJfbm9uSXRlcmFibGVSZXN0IiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJzb3VyY2VNYXBwaW5nIiwic291cmNlVVJMcyIsInNvdXJjZXMiLCJzb3VyY2VSb290IiwidG9rZW4iLCJzaW5nbGVNYXRjaGVyIiwibXVsdGlNYXRjaGVyIiwiZGVjb2RlQ29tcG9uZW50cyIsImNvbXBvbmVudHMiLCJkZWNvZGVVUklDb21wb25lbnQiLCJsZWZ0IiwiZGVjb2RlIiwiaW5wdXQiLCJ0b2tlbnMiLCJlbmNvZGVkVVJJIiwicmVwbGFjZU1hcCIsImVudHJpZXMiLCJjdXN0b21EZWNvZGVVUklDb21wb25lbnQiLCJvYmoiLCJwcmVkaWNhdGUiLCJyZXQiLCJpc0FyciIsInJlYWN0SXMiLCJSRUFDVF9TVEFUSUNTIiwiY29udGV4dFR5cGUiLCJkZWZhdWx0UHJvcHMiLCJnZXREZWZhdWx0UHJvcHMiLCJnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3IiLCJnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMiLCJtaXhpbnMiLCJwcm9wVHlwZXMiLCJLTk9XTl9TVEFUSUNTIiwiY2FsbGVyIiwiYXJpdHkiLCJNRU1PX1NUQVRJQ1MiLCJjb21wYXJlIiwiVFlQRV9TVEFUSUNTIiwiZ2V0U3RhdGljcyIsImlzTWVtbyIsIkZvcndhcmRSZWYiLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwiZ2V0UHJvdG90eXBlT2YiLCJvYmplY3RQcm90b3R5cGUiLCJob2lzdE5vblJlYWN0U3RhdGljcyIsInRhcmdldENvbXBvbmVudCIsInNvdXJjZUNvbXBvbmVudCIsImJsYWNrbGlzdCIsImluaGVyaXRlZENvbXBvbmVudCIsInRhcmdldFN0YXRpY3MiLCJzb3VyY2VTdGF0aWNzIiwiZGVzY3JpcHRvciIsInByb3BJc0VudW1lcmFibGUiLCJ0ZXN0MSIsInRlc3QyIiwiZnJvbUNoYXJDb2RlIiwidGVzdDMiLCJsZXR0ZXIiLCJzaG91bGRVc2VOYXRpdmUiLCJzeW1ib2xzIiwicyIsIlJlYWN0UHJvcFR5cGVzU2VjcmV0IiwiZW1wdHlGdW5jdGlvbiIsImVtcHR5RnVuY3Rpb25XaXRoUmVzZXQiLCJyZXNldFdhcm5pbmdDYWNoZSIsInNoaW0iLCJwcm9wTmFtZSIsImNvbXBvbmVudE5hbWUiLCJwcm9wRnVsbE5hbWUiLCJzZWNyZXQiLCJnZXRTaGltIiwiaXNSZXF1aXJlZCIsIlJlYWN0UHJvcFR5cGVzIiwiYXJyYXkiLCJib29sIiwiZnVuYyIsIm51bWJlciIsInN5bWJvbCIsImFueSIsImFycmF5T2YiLCJlbGVtZW50IiwiZWxlbWVudFR5cGUiLCJpbnN0YW5jZU9mIiwibm9kZSIsIm9iamVjdE9mIiwib25lT2YiLCJvbmVPZlR5cGUiLCJzaGFwZSIsImNoZWNrUHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwic3RyaWN0VXJpRW5jb2RlIiwiZGVjb2RlQ29tcG9uZW50Iiwic3BsaXRPbkZpcnN0IiwiZmlsdGVyT2JqZWN0IiwidmFsaWRhdGVBcnJheUZvcm1hdFNlcGFyYXRvciIsImVuY29kZSIsImtleXNTb3J0ZXIiLCJzb3J0IiwiTnVtYmVyIiwicmVtb3ZlSGFzaCIsImhhc2hTdGFydCIsImV4dHJhY3QiLCJxdWVyeVN0YXJ0IiwicGFyc2VWYWx1ZSIsInBhcnNlTnVtYmVycyIsInRyaW0iLCJwYXJzZUJvb2xlYW5zIiwicGFyc2UiLCJxdWVyeSIsImFycmF5Rm9ybWF0IiwiYXJyYXlGb3JtYXRTZXBhcmF0b3IiLCJmb3JtYXR0ZXIiLCJhY2N1bXVsYXRvciIsImluY2x1ZGVzIiwiaXNFbmNvZGVkQXJyYXkiLCJhcnJheVZhbHVlIiwicGFyc2VyRm9yQXJyYXlGb3JtYXQiLCJCb29sZWFuIiwic2hvdWxkRmlsdGVyIiwic2tpcE51bGwiLCJza2lwRW1wdHlTdHJpbmciLCJrZXlWYWx1ZVNlcCIsImVuY29kZXJGb3JBcnJheUZvcm1hdCIsIm9iamVjdENvcHkiLCJwYXJzZVVybCIsInVybF8iLCJwYXJzZUZyYWdtZW50SWRlbnRpZmllciIsImZyYWdtZW50SWRlbnRpZmllciIsInN0cmluZ2lmeVVybCIsInF1ZXJ5RnJvbVVybCIsInBhcnNlZFF1ZXJ5RnJvbVVybCIsInF1ZXJ5U3RyaW5nIiwiZ2V0SGFzaCIsInBpY2siLCJleGNsdWRlIiwiZXhjbHVzaW9uRmlsdGVyIiwiYWEiLCJtIiwiciIsImJhIiwiU2V0IiwiY2EiLCJkYSIsImVhIiwiYWRkIiwiZmEiLCJoYSIsImlhIiwiamEiLCJrYSIsImQiLCJhY2NlcHRzQm9vbGVhbnMiLCJhdHRyaWJ1dGVOYW1lIiwiYXR0cmlidXRlTmFtZXNwYWNlIiwibXVzdFVzZVByb3BlcnR5IiwicHJvcGVydHlOYW1lIiwic2FuaXRpemVVUkwiLCJyZW1vdmVFbXB0eVN0cmluZyIsIkQiLCJvYSIsInBhIiwidG9VcHBlckNhc2UiLCJxYSIsIm1hIiwibmEiLCJsYSIsInJlbW92ZUF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZU5TIiwieGxpbmtIcmVmIiwicmEiLCJfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCIsInNhIiwidGEiLCJ3YSIsInhhIiwieWEiLCJ6YSIsIkFhIiwiQmEiLCJDYSIsIkRhIiwiRWEiLCJGYSIsIkdhIiwiSGEiLCJJYSIsIkphIiwiZm9yIiwiRSIsIk1hIiwiS2EiLCJMYSIsIk5hIiwic3RhY2siLCJPYSIsIlBhIiwicHJlcGFyZVN0YWNrVHJhY2UiLCJSZWZsZWN0IiwiUWEiLCJ0YWciLCJfcmVuZGVyIiwiUmEiLCIkJHR5cGVvZiIsIl9jb250ZXh0IiwiX3BheWxvYWQiLCJfaW5pdCIsIlNhIiwiVGEiLCJub2RlTmFtZSIsIlZhIiwiX3ZhbHVlVHJhY2tlciIsInNldFZhbHVlIiwic3RvcFRyYWNraW5nIiwiVWEiLCJXYSIsIlhhIiwiYWN0aXZlRWxlbWVudCIsImJvZHkiLCJZYSIsImRlZmF1bHRDaGVja2VkIiwiX3dyYXBwZXJTdGF0ZSIsImluaXRpYWxDaGVja2VkIiwiWmEiLCJpbml0aWFsVmFsdWUiLCJjb250cm9sbGVkIiwiJGEiLCJhYiIsImJiIiwiY2IiLCJvd25lckRvY3VtZW50IiwiZWIiLCJDaGlsZHJlbiIsImRiIiwiZmIiLCJzZWxlY3RlZCIsImRlZmF1bHRTZWxlY3RlZCIsImdiIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJoYiIsImliIiwiamIiLCJ0ZXh0Q29udGVudCIsImtiIiwibGIiLCJtYiIsIm5iIiwib2IiLCJuYW1lc3BhY2VVUkkiLCJpbm5lckhUTUwiLCJmaXJzdENoaWxkIiwicmVtb3ZlQ2hpbGQiLCJhcHBlbmRDaGlsZCIsIk1TQXBwIiwiZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24iLCJwYiIsImxhc3RDaGlsZCIsIm5vZGVUeXBlIiwibm9kZVZhbHVlIiwicWIiLCJhbmltYXRpb25JdGVyYXRpb25Db3VudCIsImJvcmRlckltYWdlT3V0c2V0IiwiYm9yZGVySW1hZ2VTbGljZSIsImJvcmRlckltYWdlV2lkdGgiLCJib3hGbGV4IiwiYm94RmxleEdyb3VwIiwiYm94T3JkaW5hbEdyb3VwIiwiY29sdW1uQ291bnQiLCJjb2x1bW5zIiwiZmxleCIsImZsZXhHcm93IiwiZmxleFBvc2l0aXZlIiwiZmxleFNocmluayIsImZsZXhOZWdhdGl2ZSIsImZsZXhPcmRlciIsImdyaWRBcmVhIiwiZ3JpZFJvdyIsImdyaWRSb3dFbmQiLCJncmlkUm93U3BhbiIsImdyaWRSb3dTdGFydCIsImdyaWRDb2x1bW4iLCJncmlkQ29sdW1uRW5kIiwiZ3JpZENvbHVtblNwYW4iLCJncmlkQ29sdW1uU3RhcnQiLCJmb250V2VpZ2h0IiwibGluZUNsYW1wIiwibGluZUhlaWdodCIsIm9wYWNpdHkiLCJvcmRlciIsIm9ycGhhbnMiLCJ0YWJTaXplIiwid2lkb3dzIiwiekluZGV4Iiwiem9vbSIsImZpbGxPcGFjaXR5IiwiZmxvb2RPcGFjaXR5Iiwic3RvcE9wYWNpdHkiLCJzdHJva2VEYXNoYXJyYXkiLCJzdHJva2VEYXNob2Zmc2V0Iiwic3Ryb2tlTWl0ZXJsaW1pdCIsInN0cm9rZU9wYWNpdHkiLCJzdHJva2VXaWR0aCIsInJiIiwic2IiLCJ0YiIsInNldFByb3BlcnR5Iiwic3Vic3RyaW5nIiwidWIiLCJtZW51aXRlbSIsImFyZWEiLCJiYXNlIiwiYnIiLCJjb2wiLCJlbWJlZCIsImhyIiwiaW1nIiwia2V5Z2VuIiwibGluayIsIm1ldGEiLCJ0cmFjayIsIndiciIsInZiIiwid2IiLCJ4YiIsInNyY0VsZW1lbnQiLCJjb3JyZXNwb25kaW5nVXNlRWxlbWVudCIsInBhcmVudE5vZGUiLCJ5YiIsInpiIiwiQWIiLCJCYiIsIkNiIiwic3RhdGVOb2RlIiwiRGIiLCJFYiIsIkZiIiwiR2IiLCJIYiIsIkliIiwiSmIiLCJLYiIsIkxiIiwiTWIiLCJPYiIsIlBiIiwiUWIiLCJSYiIsImwiLCJvbkVycm9yIiwiU2IiLCJUYiIsIlViIiwiVmIiLCJXYiIsIlhiIiwiWmIiLCJhbHRlcm5hdGUiLCJyZXR1cm4iLCJmbGFncyIsIiRiIiwibWVtb2l6ZWRTdGF0ZSIsImRlaHlkcmF0ZWQiLCJhYyIsImNjIiwiY2hpbGQiLCJzaWJsaW5nIiwiY3VycmVudCIsImJjIiwiZGMiLCJlYyIsImZjIiwiZ2MiLCJoYyIsImljIiwiamMiLCJrYyIsImxjIiwibWMiLCJuYyIsIk1hcCIsIm9jIiwicGMiLCJxYyIsInJjIiwiYmxvY2tlZE9uIiwiZG9tRXZlbnROYW1lIiwiZXZlbnRTeXN0ZW1GbGFncyIsIm5hdGl2ZUV2ZW50IiwidGFyZ2V0Q29udGFpbmVycyIsInNjIiwiZGVsZXRlIiwicG9pbnRlcklkIiwidGMiLCJ2YyIsIndjIiwibGFuZVByaW9yaXR5IiwidW5zdGFibGVfcnVuV2l0aFByaW9yaXR5IiwicHJpb3JpdHkiLCJoeWRyYXRlIiwiY29udGFpbmVySW5mbyIsInhjIiwieWMiLCJzaGlmdCIsInpjIiwiQWMiLCJCYyIsInVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2siLCJ1bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSIsIkNjIiwiRGMiLCJFYyIsImFuaW1hdGlvbmVuZCIsImFuaW1hdGlvbml0ZXJhdGlvbiIsImFuaW1hdGlvbnN0YXJ0IiwidHJhbnNpdGlvbmVuZCIsIkZjIiwiR2MiLCJIYyIsImFuaW1hdGlvbiIsInRyYW5zaXRpb24iLCJJYyIsIkpjIiwiS2MiLCJMYyIsIk1jIiwiTmMiLCJPYyIsIlBjIiwiUWMiLCJ1bnN0YWJsZV9ub3ciLCJSYyIsIlVjIiwicGVuZGluZ0xhbmVzIiwiZXhwaXJlZExhbmVzIiwic3VzcGVuZGVkTGFuZXMiLCJwaW5nZWRMYW5lcyIsIlZjIiwiZW50YW5nbGVkTGFuZXMiLCJlbnRhbmdsZW1lbnRzIiwiV2MiLCJYYyIsIlljIiwiWmMiLCIkYyIsImV2ZW50VGltZXMiLCJjbHozMiIsImJkIiwiY2QiLCJMTjIiLCJkZCIsInVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5IiwiZWQiLCJmZCIsImdkIiwiaGQiLCJ1YyIsImpkIiwia2QiLCJsZCIsIm1kIiwibmQiLCJvZCIsImtleUNvZGUiLCJjaGFyQ29kZSIsInBkIiwicWQiLCJyZCIsIl9yZWFjdE5hbWUiLCJfdGFyZ2V0SW5zdCIsImN1cnJlbnRUYXJnZXQiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJyZXR1cm5WYWx1ZSIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwic3RvcFByb3BhZ2F0aW9uIiwiY2FuY2VsQnViYmxlIiwicGVyc2lzdCIsImlzUGVyc2lzdGVudCIsIndkIiwieGQiLCJ5ZCIsInNkIiwiZXZlbnRQaGFzZSIsImJ1YmJsZXMiLCJjYW5jZWxhYmxlIiwidGltZVN0YW1wIiwiaXNUcnVzdGVkIiwidGQiLCJ1ZCIsInZpZXciLCJkZXRhaWwiLCJ2ZCIsIkFkIiwic2NyZWVuWCIsInNjcmVlblkiLCJjbGllbnRYIiwiY2xpZW50WSIsInBhZ2VYIiwicGFnZVkiLCJnZXRNb2RpZmllclN0YXRlIiwiemQiLCJidXR0b25zIiwicmVsYXRlZFRhcmdldCIsImZyb21FbGVtZW50IiwidG9FbGVtZW50IiwibW92ZW1lbnRYIiwibW92ZW1lbnRZIiwiQmQiLCJEZCIsImRhdGFUcmFuc2ZlciIsIkZkIiwiSGQiLCJhbmltYXRpb25OYW1lIiwiZWxhcHNlZFRpbWUiLCJwc2V1ZG9FbGVtZW50IiwiSmQiLCJjbGlwYm9hcmREYXRhIiwiTGQiLCJNZCIsIkVzYyIsIlNwYWNlYmFyIiwiTGVmdCIsIlVwIiwiUmlnaHQiLCJEb3duIiwiRGVsIiwiV2luIiwiTWVudSIsIkFwcHMiLCJTY3JvbGwiLCJNb3pQcmludGFibGVLZXkiLCJOZCIsIjgiLCI5IiwiMTIiLCIxMyIsIjE2IiwiMTciLCIxOCIsIjE5IiwiMjAiLCIyNyIsIjMyIiwiMzMiLCIzNCIsIjM1IiwiMzYiLCIzNyIsIjM4IiwiMzkiLCI0MCIsIjQ1IiwiNDYiLCIxMTIiLCIxMTMiLCIxMTQiLCIxMTUiLCIxMTYiLCIxMTciLCIxMTgiLCIxMTkiLCIxMjAiLCIxMjEiLCIxMjIiLCIxMjMiLCIxNDQiLCIxNDUiLCIyMjQiLCJPZCIsIkFsdCIsIkNvbnRyb2wiLCJNZXRhIiwiU2hpZnQiLCJQZCIsIlJkIiwiY29kZSIsInJlcGVhdCIsImxvY2FsZSIsIndoaWNoIiwiVGQiLCJ3aWR0aCIsInByZXNzdXJlIiwidGFuZ2VudGlhbFByZXNzdXJlIiwidGlsdFgiLCJ0aWx0WSIsInR3aXN0IiwicG9pbnRlclR5cGUiLCJpc1ByaW1hcnkiLCJWZCIsInRvdWNoZXMiLCJ0YXJnZXRUb3VjaGVzIiwiY2hhbmdlZFRvdWNoZXMiLCJYZCIsIlpkIiwiZGVsdGFYIiwid2hlZWxEZWx0YVgiLCJkZWx0YVkiLCJ3aGVlbERlbHRhWSIsIndoZWVsRGVsdGEiLCJkZWx0YVoiLCJkZWx0YU1vZGUiLCIkZCIsImFlIiwiYmUiLCJkb2N1bWVudE1vZGUiLCJjZSIsImRlIiwiZWUiLCJmZSIsImdlIiwiaGUiLCJpZSIsImxlIiwiZGF0ZSIsImRhdGV0aW1lIiwiZW1haWwiLCJtb250aCIsInBhc3N3b3JkIiwicmFuZ2UiLCJ0ZWwiLCJ0ZXh0IiwidGltZSIsIndlZWsiLCJtZSIsIm5lIiwib2UiLCJwZSIsInFlIiwic2UiLCJ0ZSIsInVlIiwidmUiLCJ3ZSIsInhlIiwieWUiLCJ6ZSIsIm9uaW5wdXQiLCJBZSIsImRldGFjaEV2ZW50IiwiQmUiLCJDZSIsImF0dGFjaEV2ZW50IiwiRGUiLCJFZSIsIkZlIiwiSGUiLCJJZSIsIkplIiwiS2UiLCJMZSIsIm9mZnNldCIsIm5leHRTaWJsaW5nIiwiTWUiLCJjb250YWlucyIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwiTmUiLCJIVE1MSUZyYW1lRWxlbWVudCIsIk9lIiwiY29udGVudEVkaXRhYmxlIiwiUGUiLCJRZSIsIlJlIiwiU2UiLCJUZSIsIlVlIiwic2VsZWN0aW9uU3RhcnQiLCJzZWxlY3Rpb25FbmQiLCJhbmNob3JOb2RlIiwiZGVmYXVsdFZpZXciLCJnZXRTZWxlY3Rpb24iLCJhbmNob3JPZmZzZXQiLCJmb2N1c05vZGUiLCJmb2N1c09mZnNldCIsIlZlIiwiV2UiLCJYZSIsIlllIiwiWmUiLCJZYiIsImluc3RhbmNlIiwiJGUiLCJhZiIsImJmIiwiY2YiLCJkZiIsImNhcHR1cmUiLCJwYXNzaXZlIiwiTmIiLCJ3IiwieiIsInUiLCJxIiwidCIsInYiLCJlZiIsImZmIiwicGFyZW50V2luZG93IiwiZ2YiLCJoZiIsIkoiLCJRIiwiTCIsImplIiwiY2hhciIsImtlIiwiamYiLCJrZiIsImxmIiwibWYiLCJhdXRvRm9jdXMiLCJuZiIsIl9faHRtbCIsIm9mIiwic2V0VGltZW91dCIsInBmIiwiY2xlYXJUaW1lb3V0IiwicWYiLCJyZiIsInNmIiwicHJldmlvdXNTaWJsaW5nIiwidGYiLCJ2ZiIsIndmIiwieGYiLCJ5ZiIsInpmIiwiQWYiLCJCZiIsIkgiLCJJIiwiQ2YiLCJNIiwiTiIsIkRmIiwiRWYiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0IiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQiLCJGZiIsIkdmIiwiSGYiLCJJZiIsIkpmIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQiLCJLZiIsIkxmIiwiTWYiLCJOZiIsIk9mIiwiUGYiLCJ1bnN0YWJsZV9jYW5jZWxDYWxsYmFjayIsIlFmIiwidW5zdGFibGVfc2hvdWxkWWllbGQiLCJSZiIsInVuc3RhYmxlX3JlcXVlc3RQYWludCIsIlNmIiwiVGYiLCJ1bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCIsIlVmIiwidW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHkiLCJWZiIsIldmIiwiWGYiLCJ1bnN0YWJsZV9Mb3dQcmlvcml0eSIsIllmIiwidW5zdGFibGVfSWRsZVByaW9yaXR5IiwiWmYiLCIkZiIsImFnIiwiYmciLCJjZyIsImRnIiwiZWciLCJmZyIsImdnIiwiaGciLCJpZyIsImpnIiwia2ciLCJSZWFjdEN1cnJlbnRCYXRjaENvbmZpZyIsImxnIiwibWciLCJuZyIsIm9nIiwicGciLCJxZyIsInJnIiwiX2N1cnJlbnRWYWx1ZSIsInNnIiwiY2hpbGRMYW5lcyIsInRnIiwiZGVwZW5kZW5jaWVzIiwiZmlyc3RDb250ZXh0IiwibGFuZXMiLCJ1ZyIsInZnIiwicmVzcG9uZGVycyIsIndnIiwieGciLCJ1cGRhdGVRdWV1ZSIsImJhc2VTdGF0ZSIsImZpcnN0QmFzZVVwZGF0ZSIsImxhc3RCYXNlVXBkYXRlIiwicGVuZGluZyIsImVmZmVjdHMiLCJ5ZyIsInpnIiwiZXZlbnRUaW1lIiwibGFuZSIsInBheWxvYWQiLCJBZyIsIkJnIiwiQ2ciLCJEZyIsIkVnIiwiRmciLCJyZWZzIiwiR2ciLCJLZyIsImlzTW91bnRlZCIsIl9yZWFjdEludGVybmFscyIsImVucXVldWVTZXRTdGF0ZSIsIkhnIiwiSWciLCJKZyIsImVucXVldWVSZXBsYWNlU3RhdGUiLCJlbnF1ZXVlRm9yY2VVcGRhdGUiLCJMZyIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsImlzUHVyZVJlYWN0Q29tcG9uZW50IiwiTWciLCJ1cGRhdGVyIiwiTmciLCJVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIk9nIiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50V2lsbE1vdW50IiwiUGciLCJRZyIsIl9vd25lciIsIl9zdHJpbmdSZWYiLCJSZyIsIlNnIiwibGFzdEVmZmVjdCIsIm5leHRFZmZlY3QiLCJmaXJzdEVmZmVjdCIsIlRnIiwiVWciLCJWZyIsImltcGxlbWVudGF0aW9uIiwiV2ciLCJYZyIsIllnIiwiWmciLCIkZyIsImFoIiwiYmgiLCJjaCIsImRoIiwiZWgiLCJ0YWdOYW1lIiwiZmgiLCJnaCIsImhoIiwiaWgiLCJtZW1vaXplZFByb3BzIiwicmV2ZWFsT3JkZXIiLCJqaCIsImtoIiwibGgiLCJtaCIsIm5oIiwib2giLCJwZW5kaW5nUHJvcHMiLCJwaCIsInFoIiwicmgiLCJzaCIsInRoIiwidWgiLCJfd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeSIsInZoIiwiUmVhY3RDdXJyZW50RGlzcGF0Y2hlciIsIndoIiwieGgiLCJ5aCIsInpoIiwiQWgiLCJCaCIsIkNoIiwiRGgiLCJFaCIsIkZoIiwiR2giLCJIaCIsImJhc2VRdWV1ZSIsInF1ZXVlIiwiSWgiLCJKaCIsIktoIiwibGFzdFJlbmRlcmVkUmVkdWNlciIsImVhZ2VyUmVkdWNlciIsImVhZ2VyU3RhdGUiLCJsYXN0UmVuZGVyZWRTdGF0ZSIsImRpc3BhdGNoIiwiTGgiLCJNaCIsIl9nZXRWZXJzaW9uIiwiX3NvdXJjZSIsIm11dGFibGVSZWFkTGFuZXMiLCJOaCIsImdldFNuYXBzaG90Iiwic3Vic2NyaWJlIiwic2V0U25hcHNob3QiLCJPaCIsIlBoIiwiUWgiLCJSaCIsImRlc3Ryb3kiLCJkZXBzIiwiU2giLCJUaCIsIlVoIiwiVmgiLCJXaCIsIlhoIiwiWWgiLCJaaCIsIiRoIiwiYWkiLCJiaSIsImNpIiwiZGkiLCJyZWFkQ29udGV4dCIsInVzZUNhbGxiYWNrIiwidXNlQ29udGV4dCIsInVzZUltcGVyYXRpdmVIYW5kbGUiLCJ1c2VMYXlvdXRFZmZlY3QiLCJ1c2VNZW1vIiwidXNlUmVkdWNlciIsInVzZVJlZiIsInVzZURlYnVnVmFsdWUiLCJ1c2VEZWZlcnJlZFZhbHVlIiwidXNlVHJhbnNpdGlvbiIsInVzZU11dGFibGVTb3VyY2UiLCJ1c2VPcGFxdWVJZGVudGlmaWVyIiwidW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyIiwidWYiLCJlaSIsIlJlYWN0Q3VycmVudE93bmVyIiwiZmkiLCJnaSIsImhpIiwiaWkiLCJqaSIsImtpIiwibGkiLCJtaSIsImJhc2VMYW5lcyIsIm5pIiwib2kiLCJwaSIsIlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudERpZFVwZGF0ZSIsInFpIiwicmkiLCJwZW5kaW5nQ29udGV4dCIsIkJpIiwiRGkiLCJFaSIsInNpIiwicmV0cnlMYW5lIiwidGkiLCJmYWxsYmFjayIsInVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrIiwidWkiLCJ1bnN0YWJsZV9leHBlY3RlZExvYWRUaW1lIiwidmkiLCJ3aSIsInhpIiwieWkiLCJ6aSIsImlzQmFja3dhcmRzIiwicmVuZGVyaW5nIiwicmVuZGVyaW5nU3RhcnRUaW1lIiwidGFpbCIsInRhaWxNb2RlIiwiQWkiLCJGaSIsIkdpIiwid2FzTXVsdGlwbGUiLCJtdWx0aXBsZSIsIm9uY2xpY2siLCJjcmVhdGVFbGVtZW50TlMiLCJjcmVhdGVUZXh0Tm9kZSIsIlYiLCJIaSIsIklpIiwiSmkiLCJLaSIsIkxpIiwiTWkiLCJOaSIsImVycm9yIiwiT2kiLCJXZWFrTWFwIiwiUGkiLCJRaSIsIlJpIiwiU2kiLCJjb21wb25lbnREaWRDYXRjaCIsIlRpIiwiY29tcG9uZW50U3RhY2siLCJVaSIsIldlYWtTZXQiLCJWaSIsIldpIiwiWGkiLCJfX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIllpIiwiWmkiLCIkaSIsImZvY3VzIiwiYWoiLCJiaiIsIm9uQ29tbWl0RmliZXJVbm1vdW50IiwiY2oiLCJkaiIsImVqIiwiZmoiLCJnaiIsImhqIiwiaW5zZXJ0QmVmb3JlIiwiX3JlYWN0Um9vdENvbnRhaW5lciIsImlqIiwiamoiLCJraiIsImxqIiwidGhlbiIsIm1qIiwibmoiLCJvaiIsInBqIiwiWCIsIlkiLCJxaiIsInJqIiwic2oiLCJ0aiIsInVqIiwidmoiLCJJbmZpbml0eSIsIndqIiwiY2siLCJaIiwieGoiLCJ5aiIsInpqIiwiQWoiLCJCaiIsIkNqIiwiRGoiLCJFaiIsIkZqIiwiR2oiLCJIaiIsIklqIiwiSmoiLCJTYyIsIktqIiwiTGoiLCJNaiIsImNhbGxiYWNrTm9kZSIsImV4cGlyYXRpb25UaW1lcyIsImNhbGxiYWNrUHJpb3JpdHkiLCJUYyIsIk5qIiwiT2oiLCJQaiIsIlFqIiwiUmoiLCJTaiIsIlRqIiwiZmluaXNoZWRXb3JrIiwiZmluaXNoZWRMYW5lcyIsIlVqIiwidGltZW91dEhhbmRsZSIsIldqIiwiWGoiLCJwaW5nQ2FjaGUiLCJZaiIsIlpqIiwidmEiLCJhayIsImJrIiwiZGsiLCJyYW5nZUNvdW50IiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsImVrIiwiZXh0ZW5kIiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwic2V0RW5kIiwic2Nyb2xsTGVmdCIsInNjcm9sbFRvcCIsIm9uQ29tbWl0RmliZXJSb290IiwiZmsiLCJnayIsImlrIiwiaXNSZWFjdENvbXBvbmVudCIsInBlbmRpbmdDaGlsZHJlbiIsImprIiwibXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YSIsImtrIiwibGsiLCJtayIsIm5rIiwicWsiLCJoeWRyYXRpb25PcHRpb25zIiwibXV0YWJsZVNvdXJjZXMiLCJfaW50ZXJuYWxSb290IiwicmsiLCJ0ayIsImhhc0F0dHJpYnV0ZSIsInNrIiwidWsiLCJoayIsIl9jYWxjdWxhdGVDaGFuZ2VkQml0cyIsInVuc3RhYmxlX29ic2VydmVkQml0cyIsInVubW91bnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9ybSIsIlZqIiwidmsiLCJFdmVudHMiLCJ3ayIsImZpbmRGaWJlckJ5SG9zdEluc3RhbmNlIiwiYnVuZGxlVHlwZSIsInJlbmRlcmVyUGFja2FnZU5hbWUiLCJ4ayIsInJlbmRlcmVyQ29uZmlnIiwib3ZlcnJpZGVIb29rU3RhdGUiLCJvdmVycmlkZUhvb2tTdGF0ZURlbGV0ZVBhdGgiLCJvdmVycmlkZUhvb2tTdGF0ZVJlbmFtZVBhdGgiLCJvdmVycmlkZVByb3BzIiwib3ZlcnJpZGVQcm9wc0RlbGV0ZVBhdGgiLCJvdmVycmlkZVByb3BzUmVuYW1lUGF0aCIsInNldFN1c3BlbnNlSGFuZGxlciIsInNjaGVkdWxlVXBkYXRlIiwiY3VycmVudERpc3BhdGNoZXJSZWYiLCJmaW5kSG9zdEluc3RhbmNlQnlGaWJlciIsImZpbmRIb3N0SW5zdGFuY2VzRm9yUmVmcmVzaCIsInNjaGVkdWxlUmVmcmVzaCIsInNjaGVkdWxlUm9vdCIsInNldFJlZnJlc2hIYW5kbGVyIiwiZ2V0Q3VycmVudEZpYmVyIiwiX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fIiwieWsiLCJpc0Rpc2FibGVkIiwic3VwcG9ydHNGaWJlciIsImluamVjdCIsImNyZWF0ZVBvcnRhbCIsImZpbmRET01Ob2RlIiwiZmx1c2hTeW5jIiwidW5tb3VudENvbXBvbmVudEF0Tm9kZSIsInVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzIiwidW5zdGFibGVfY3JlYXRlUG9ydGFsIiwidW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIiLCJjaGVja0RDRSIsIkFzeW5jTW9kZSIsIkNvbmN1cnJlbnRNb2RlIiwiQ29udGV4dENvbnN1bWVyIiwiQ29udGV4dFByb3ZpZGVyIiwiRWxlbWVudCIsIkZyYWdtZW50IiwiTGF6eSIsIlBvcnRhbCIsIlByb2ZpbGVyIiwiU3RyaWN0TW9kZSIsIlN1c3BlbnNlIiwiaXNBc3luY01vZGUiLCJpc0NvbmN1cnJlbnRNb2RlIiwiaXNDb250ZXh0Q29uc3VtZXIiLCJpc0NvbnRleHRQcm92aWRlciIsImlzRWxlbWVudCIsImlzRm9yd2FyZFJlZiIsImlzRnJhZ21lbnQiLCJpc0xhenkiLCJpc1BvcnRhbCIsImlzUHJvZmlsZXIiLCJpc1N0cmljdE1vZGUiLCJpc1N1c3BlbnNlIiwiaXNWYWxpZEVsZW1lbnRUeXBlIiwidHlwZU9mIiwiaXNhcnJheSIsInBhdGhUb1JlZ2V4cCIsImRlbGltaXRlciIsIm9wdGlvbmFsIiwicGFydGlhbCIsImFzdGVyaXNrIiwicGF0dGVybiIsImF0dGFjaEtleXMiLCJyZWdleHBUb1JlZ2V4cCIsInBhcnRzIiwiYXJyYXlUb1JlZ2V4cCIsInRva2Vuc1RvUmVnRXhwIiwic3RyaW5nVG9SZWdleHAiLCJjb21waWxlIiwidG9rZW5zVG9GdW5jdGlvbiIsIlBBVEhfUkVHRVhQIiwiZGVmYXVsdERlbGltaXRlciIsImVzY2FwZWQiLCJncm91cCIsIm1vZGlmaWVyIiwiZXNjYXBlR3JvdXAiLCJlc2NhcGVTdHJpbmciLCJlbmNvZGVVUklDb21wb25lbnRQcmV0dHkiLCJlbmNvZGVVUkkiLCJjaGFyQ29kZUF0IiwibWF0Y2hlcyIsIm9wdHMiLCJwcmV0dHkiLCJzZWdtZW50Iiwicm91dGUiLCJlbmRzV2l0aERlbGltaXRlciIsImZvcmNlVXBkYXRlIiwiX19zZWxmIiwiX19zb3VyY2UiLCJlc2NhcGUiLCJfc3RhdHVzIiwiX3Jlc3VsdCIsImRlZmF1bHQiLCJJc1NvbWVSZW5kZXJlckFjdGluZyIsImNvdW50IiwidG9BcnJheSIsIm9ubHkiLCJQdXJlQ29tcG9uZW50IiwiY2xvbmVFbGVtZW50IiwiY3JlYXRlQ29udGV4dCIsIl9jdXJyZW50VmFsdWUyIiwiX3RocmVhZENvdW50IiwiY3JlYXRlRmFjdG9yeSIsImNyZWF0ZVJlZiIsImlzVmFsaWRFbGVtZW50IiwibGF6eSIsInBlcmZvcm1hbmNlIiwiTWVzc2FnZUNoYW5uZWwiLCJ1bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZSIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwicG9ydDIiLCJwb3J0MSIsIm9ubWVzc2FnZSIsInBvc3RNZXNzYWdlIiwic29ydEluZGV4Iiwic3RhcnRUaW1lIiwiZXhwaXJhdGlvblRpbWUiLCJwcmlvcml0eUxldmVsIiwidW5zdGFibGVfUHJvZmlsaW5nIiwidW5zdGFibGVfY29udGludWVFeGVjdXRpb24iLCJ1bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZSIsInVuc3RhYmxlX25leHQiLCJ1bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbiIsImRlbGF5IiwidW5zdGFibGVfd3JhcENhbGxiYWNrIiwic2VwYXJhdG9yIiwic2VwYXJhdG9ySW5kZXgiLCJ1cGRhdGUiLCJob3QiLCJpbnZhbGlkYXRlIiwib2xkTG9jYWxzIiwiYWNjZXB0IiwiaXNOYW1lZEV4cG9ydCIsImlzRXF1YWxMb2NhbHMiLCJkaXNwb3NlIiwiZ2V0VGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwic3R5bGVzSW5Eb20iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJtb2R1bGVzVG9Eb20iLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJjc3MiLCJtZWRpYSIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJhZGRTdHlsZSIsImluc2VydFN0eWxlRWxlbWVudCIsImF0dHJpYnV0ZXMiLCJub25jZSIsImluc2VydCIsInRleHRTdG9yZSIsInJlcGxhY2VUZXh0IiwicmVwbGFjZW1lbnQiLCJhcHBseVRvU2luZ2xldG9uVGFnIiwicmVtb3ZlIiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJjc3NOb2RlIiwiY2hpbGROb2RlcyIsImFwcGx5VG9UYWciLCJzaW5nbGV0b24iLCJzaW5nbGV0b25Db3VudGVyIiwic3R5bGVJbmRleCIsInJlbW92ZVN0eWxlRWxlbWVudCIsIm5ld09iaiIsImFsbCIsImF0b2IiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2luZGV4Iiwic3BsaWNlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiZXhlY09wdGlvbnMiLCJmYWN0b3J5IiwiX193ZWJwYWNrX21vZHVsZXNfXyIsInJlcXVpcmUiLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZGVmaW5pdGlvbiIsImh1IiwiY2h1bmtJZCIsImhtckYiLCJwcm9wIiwic2NyaXB0IiwibmVlZEF0dGFjaCIsInNjcmlwdHMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsImdldEF0dHJpYnV0ZSIsImNoYXJzZXQiLCJ0aW1lb3V0Iiwib25TY3JpcHRDb21wbGV0ZSIsInByZXYiLCJvbmVycm9yIiwib25sb2FkIiwiZG9uZUZucyIsInRvU3RyaW5nVGFnIiwiY3VycmVudENoaWxkTW9kdWxlIiwiYmxvY2tpbmdQcm9taXNlcyIsImN1cnJlbnRVcGRhdGVBcHBseUhhbmRsZXJzIiwicXVldWVkSW52YWxpZGF0ZWRNb2R1bGVzIiwiY3VycmVudE1vZHVsZURhdGEiLCJpbnN0YWxsZWRNb2R1bGVzIiwiY3VycmVudFBhcmVudHMiLCJyZWdpc3RlcmVkU3RhdHVzSGFuZGxlcnMiLCJjdXJyZW50U3RhdHVzIiwic2V0U3RhdHVzIiwibmV3U3RhdHVzIiwid2FpdEZvckJsb2NraW5nUHJvbWlzZXMiLCJibG9ja2VyIiwiUHJvbWlzZSIsImhvdENoZWNrIiwiYXBwbHlPblVwZGF0ZSIsImhtck0iLCJhcHBseUludmFsaWRhdGVkTW9kdWxlcyIsInVwZGF0ZWRNb2R1bGVzIiwiaG1yQyIsInByb21pc2VzIiwiaW50ZXJuYWxBcHBseSIsImhvdEFwcGx5IiwicmVzb2x2ZSIsInJlc3VsdHMiLCJlcnJvcnMiLCJyZXBvcnRFcnJvciIsIm91dGRhdGVkTW9kdWxlcyIsImhtckkiLCJobXJEIiwiX21haW4iLCJyZXF1ZXN0IiwiYWN0aXZlIiwicGFyZW50cyIsIndhcm4iLCJjcmVhdGVQcm9wZXJ0eURlc2NyaXB0b3IiLCJwcm9taXNlIiwidHJhY2tCbG9ja2luZ1Byb21pc2UiLCJjcmVhdGVSZXF1aXJlIiwiX2FjY2VwdGVkRGVwZW5kZW5jaWVzIiwiX2FjY2VwdGVkRXJyb3JIYW5kbGVycyIsIl9kZWNsaW5lZERlcGVuZGVuY2llcyIsIl9zZWxmQWNjZXB0ZWQiLCJfc2VsZkRlY2xpbmVkIiwiX3NlbGZJbnZhbGlkYXRlZCIsIl9kaXNwb3NlSGFuZGxlcnMiLCJfcmVxdWlyZVNlbGYiLCJkZXAiLCJlcnJvckhhbmRsZXIiLCJkZWNsaW5lIiwiYWRkRGlzcG9zZUhhbmRsZXIiLCJyZW1vdmVEaXNwb3NlSGFuZGxlciIsImlkeCIsInN0YXR1cyIsImFkZFN0YXR1c0hhbmRsZXIiLCJyZW1vdmVTdGF0dXNIYW5kbGVyIiwic2NyaXB0VXJsIiwiaW1wb3J0U2NyaXB0cyIsImN1cnJlbnRTY3JpcHQiLCJjdXJyZW50VXBkYXRlQ2h1bmtzIiwiY3VycmVudFVwZGF0ZSIsImN1cnJlbnRVcGRhdGVSZW1vdmVkQ2h1bmtzIiwiY3VycmVudFVwZGF0ZVJ1bnRpbWUiLCJpbnN0YWxsZWRDaHVua3MiLCIxNzkiLCJ3YWl0aW5nVXBkYXRlUmVzb2x2ZXMiLCJsb2FkVXBkYXRlQ2h1bmsiLCJyZWplY3QiLCJlcnJvclR5cGUiLCJyZWFsU3JjIiwiYXBwbHlIYW5kbGVyIiwiZ2V0QWZmZWN0ZWRNb2R1bGVFZmZlY3RzIiwidXBkYXRlTW9kdWxlSWQiLCJvdXRkYXRlZERlcGVuZGVuY2llcyIsImNoYWluIiwicXVldWVJdGVtIiwicGFyZW50SWQiLCJwYXJlbnQiLCJhZGRBbGxUb1NldCIsImpzb25wSG1yIiwiYXBwbGllZFVwZGF0ZSIsIndhcm5VbmV4cGVjdGVkUmVxdWlyZSIsIm5ld01vZHVsZUZhY3RvcnkiLCJhYm9ydEVycm9yIiwiZG9BcHBseSIsImRvRGlzcG9zZSIsImNoYWluSW5mbyIsIm9uRGVjbGluZWQiLCJpZ25vcmVEZWNsaW5lZCIsIm9uVW5hY2NlcHRlZCIsImlnbm9yZVVuYWNjZXB0ZWQiLCJvbkFjY2VwdGVkIiwib25EaXNwb3NlZCIsIm1vZHVsZU91dGRhdGVkRGVwZW5kZW5jaWVzIiwib3V0ZGF0ZWRTZWxmQWNjZXB0ZWRNb2R1bGVzIiwib3V0ZGF0ZWRNb2R1bGVJZCIsImRlcGVuZGVuY3kiLCJkaXNwb3NlSGFuZGxlcnMiLCJjYWxsYmFja3MiLCJlcnJvckhhbmRsZXJzIiwiZGVwZW5kZW5jaWVzRm9yQ2FsbGJhY2tzIiwiYWNjZXB0Q2FsbGJhY2siLCJkZXBlbmRlbmN5SWQiLCJlcnIyIiwib25FcnJvcmVkIiwib3JpZ2luYWxFcnJvciIsImlnbm9yZUVycm9yZWQiLCJtb3JlTW9kdWxlcyIsInJ1bnRpbWUiLCJqc29ucCIsImFwcGx5SGFuZGxlcnMiLCJjaHVua0lkcyIsInJlbW92ZWRDaHVua3MiLCJyZW1vdmVkTW9kdWxlcyIsInVwZGF0ZWRNb2R1bGVzTGlzdCIsImZldGNoIiwicmVzcG9uc2UiLCJzdGF0dXNUZXh0IiwianNvbiJdLCJtYXBwaW5ncyI6IjtVQUFJQSxFQUNBQyxFLHVEQ0RXLFNBQVNDLEVBQWdCQyxFQUFHQyxHQU16QyxPQUxBRixFQUFrQkcsT0FBT0MsZ0JBQWtCLFNBQXlCSCxFQUFHQyxHQUVyRSxPQURBRCxFQUFFSSxVQUFZSCxF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TCxJQUNIODJDLEVBQXVCLEdBQ3ZCaUQsRUFBUzU3RCxTQUFRLFNBQVU2ekQsR0FFekJYLEVBQW9CaDVELEVBQUUwK0QsRUFBaUIvRSxTQUNWdDJELElBQTdCcTdELEVBQWdCL0UsS0FFaEJvQyxFQUFTejJELEtBQUt1NUQsRUFBZ0JsRixJQUM5QjJFLEVBQW9CM0UsSUFBVyxNQUc3QlgsRUFBb0JqZ0QsSUFDdkJpZ0QsRUFBb0JqZ0QsRUFBRTJtRCxTQUFXLFNBQVUvRixFQUFTb0MsR0FFbER1QyxJQUNDdEYsRUFBb0JoNUQsRUFBRXMrRCxFQUFxQjNFLElBQzVDWCxFQUFvQmg1RCxFQUFFMCtELEVBQWlCL0UsU0FDVnQyRCxJQUE3QnE3RCxFQUFnQi9FLEtBRWhCb0MsRUFBU3oyRCxLQUFLdTVELEVBQWdCbEYsSUFDOUIyRSxFQUFvQjNFLElBQVcsTUFNbkNYLEVBQW9CMkMsS0FBTyxLQUMxQixHQUFxQixvQkFBVm1HLE1BQXVCLE1BQU0sSUFBSTcvRCxNQUFNLHNDQUNsRCxPQUFPNi9ELE1BQU05SSxFQUFvQi80RCxFQUFJKzRELEVBQW9CWSxRQUFRdFMsTUFBTXlhLElBQ3RFLEdBQXVCLE1BQXBCQSxFQUFTL0QsT0FBWixDQUNBLElBQUkrRCxFQUFTdDVELEdBQUksTUFBTSxJQUFJeEcsTUFBTSxtQ0FBcUM4L0QsRUFBU0MsWUFDL0UsT0FBT0QsRUFBU0UsYSxHQ25mUWpKLEVBQW9CLE8iLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGluUHJvZ3Jlc3MgPSB7fTtcbnZhciBkYXRhV2VicGFja1ByZWZpeCA9IFwidHlwZXNjcmlwdERvY3M6XCI7XG4vLyBsb2FkU2NyaXB0IGZ1bmN0aW9uIHRvIGxvYWQgYSBzY3JpcHQgdmlhIHNjcmlwdCB0YWdcbl9fd2VicGFja19yZXF1aXJlX18ubCA9ICh1cmwsIGRvbmUsIGtleSwgY2h1bmtJZCkgPT4ge1xuXHRpZihpblByb2dyZXNzW3VybF0pIHsgaW5Qcm9ncmVzc1t1cmxdLnB1c2goZG9uZSk7IHJldHVybjsgfVxuXHR2YXIgc2NyaXB0LCBuZWVkQXR0YWNoO1xuXHRpZihrZXkgIT09IHVuZGVmaW5lZCkge1xuXHRcdHZhciBzY3JpcHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIik7XG5cdFx0Zm9yKHZhciBpID0gMDsgaSA8IHNjcmlwdHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBzID0gc2NyaXB0c1tpXTtcblx0XHRcdGlmKHMuZ2V0QXR0cmlidXRlKFwic3JjXCIpID09IHVybCB8fCBzLmdldEF0dHJpYnV0ZShcImRhdGEtd2VicGFja1wiKSA9PSBkYXRhV2VicGFja1ByZWZpeCArIGtleSkgeyBzY3JpcHQgPSBzOyBicmVhazsgfVxuXHRcdH1cblx0fVxuXHRpZighc2NyaXB0KSB7XG5cdFx0bmVlZEF0dGFjaCA9IHRydWU7XG5cdFx0c2NyaXB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7XG5cblx0XHRzY3JpcHQuY2hhcnNldCA9ICd1dGYtOCc7XG5cdFx0c2NyaXB0LnRpbWVvdXQgPSAxMjA7XG5cdFx0aWYgKF9fd2VicGFja19yZXF1aXJlX18ubmMpIHtcblx0XHRcdHNjcmlwdC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBfX3dlYnBhY2tfcmVxdWlyZV9fLm5jKTtcblx0XHR9XG5cdFx0c2NyaXB0LnNldEF0dHJpYnV0ZShcImRhdGEtd2VicGFja1wiLCBkYXRhV2VicGFja1ByZWZpeCArIGtleSk7XG5cdFx0c2NyaXB0LnNyYyA9IHVybDtcblx0fVxuXHRpblByb2dyZXNzW3VybF0gPSBbZG9uZV07XG5cdHZhciBvblNjcmlwdENvbXBsZXRlID0gKHByZXYsIGV2ZW50KSA9PiB7XG5cdFx0Ly8gYXZvaWQgbWVtIGxlYWtzIGluIElFLlxuXHRcdHNjcmlwdC5vbmVycm9yID0gc2NyaXB0Lm9ubG9hZCA9IG51bGw7XG5cdFx0Y2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xuXHRcdHZhciBkb25lRm5zID0gaW5Qcm9ncmVzc1t1cmxdO1xuXHRcdGRlbGV0ZSBpblByb2dyZXNzW3VybF07XG5cdFx0c2NyaXB0LnBhcmVudE5vZGUgJiYgc2NyaXB0LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc2NyaXB0KTtcblx0XHRkb25lRm5zICYmIGRvbmVGbnMuZm9yRWFjaCgoZm4pID0+IChmbihldmVudCkpKTtcblx0XHRpZihwcmV2KSByZXR1cm4gcHJldihldmVudCk7XG5cdH1cblx0O1xuXHR2YXIgdGltZW91dCA9IHNldFRpbWVvdXQob25TY3JpcHRDb21wbGV0ZS5iaW5kKG51bGwsIHVuZGVmaW5lZCwgeyB0eXBlOiAndGltZW91dCcsIHRhcmdldDogc2NyaXB0IH0pLCAxMjAwMDApO1xuXHRzY3JpcHQub25lcnJvciA9IG9uU2NyaXB0Q29tcGxldGUuYmluZChudWxsLCBzY3JpcHQub25lcnJvcik7XG5cdHNjcmlwdC5vbmxvYWQgPSBvblNjcmlwdENvbXBsZXRlLmJpbmQobnVsbCwgc2NyaXB0Lm9ubG9hZCk7XG5cdG5lZWRBdHRhY2ggJiYgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChzY3JpcHQpO1xufTsiLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkge1xuICBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgICBvLl9fcHJvdG9fXyA9IHA7XG4gICAgcmV0dXJuIG87XG4gIH07XG5cbiAgcmV0dXJuIF9zZXRQcm90b3R5cGVPZihvLCBwKTtcbn0iLCJpbXBvcnQgc2V0UHJvdG90eXBlT2YgZnJvbSBcIi4vc2V0UHJvdG90eXBlT2YuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9pbmhlcml0c0xvb3NlKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7XG4gIHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcy5wcm90b3R5cGUpO1xuICBzdWJDbGFzcy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBzdWJDbGFzcztcbiAgc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9leHRlbmRzKCkge1xuICBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkge1xuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldO1xuXG4gICAgICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7XG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7XG4gICAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0YXJnZXQ7XG4gIH07XG5cbiAgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59IiwiZnVuY3Rpb24gaXNBYnNvbHV0ZShwYXRobmFtZSkge1xuICByZXR1cm4gcGF0aG5hbWUuY2hhckF0KDApID09PSAnLyc7XG59XG5cbi8vIEFib3V0IDEuNXggZmFzdGVyIHRoYW4gdGhlIHR3by1hcmcgdmVyc2lvbiBvZiBBcnJheSNzcGxpY2UoKVxuZnVuY3Rpb24gc3BsaWNlT25lKGxpc3QsIGluZGV4KSB7XG4gIGZvciAodmFyIGkgPSBpbmRleCwgayA9IGkgKyAxLCBuID0gbGlzdC5sZW5ndGg7IGsgPCBuOyBpICs9IDEsIGsgKz0gMSkge1xuICAgIGxpc3RbaV0gPSBsaXN0W2tdO1xuICB9XG5cbiAgbGlzdC5wb3AoKTtcbn1cblxuLy8gVGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBiYXNlZCBoZWF2aWx5IG9uIG5vZGUncyB1cmwucGFyc2VcbmZ1bmN0aW9uIHJlc29sdmVQYXRobmFtZSh0bywgZnJvbSkge1xuICBpZiAoZnJvbSA9PT0gdW5kZWZpbmVkKSBmcm9tID0gJyc7XG5cbiAgdmFyIHRvUGFydHMgPSAodG8gJiYgdG8uc3BsaXQoJy8nKSkgfHwgW107XG4gIHZhciBmcm9tUGFydHMgPSAoZnJvbSAmJiBmcm9tLnNwbGl0KCcvJykpIHx8IFtdO1xuXG4gIHZhciBpc1RvQWJzID0gdG8gJiYgaXNBYnNvbHV0ZSh0byk7XG4gIHZhciBpc0Zyb21BYnMgPSBmcm9tICYmIGlzQWJzb2x1dGUoZnJvbSk7XG4gIHZhciBtdXN0RW5kQWJzID0gaXNUb0FicyB8fCBpc0Zyb21BYnM7XG5cbiAgaWYgKHRvICYmIGlzQWJzb2x1dGUodG8pKSB7XG4gICAgLy8gdG8gaXMgYWJzb2x1dGVcbiAgICBmcm9tUGFydHMgPSB0b1BhcnRzO1xuICB9IGVsc2UgaWYgKHRvUGFydHMubGVuZ3RoKSB7XG4gICAgLy8gdG8gaXMgcmVsYXRpdmUsIGRyb3AgdGhlIGZpbGVuYW1lXG4gICAgZnJvbVBhcnRzLnBvcCgpO1xuICAgIGZyb21QYXJ0cyA9IGZyb21QYXJ0cy5jb25jYXQodG9QYXJ0cyk7XG4gIH1cblxuICBpZiAoIWZyb21QYXJ0cy5sZW5ndGgpIHJldHVybiAnLyc7XG5cbiAgdmFyIGhhc1RyYWlsaW5nU2xhc2g7XG4gIGlmIChmcm9tUGFydHMubGVuZ3RoKSB7XG4gICAgdmFyIGxhc3QgPSBmcm9tUGFydHNbZnJvbVBhcnRzLmxlbmd0aCAtIDFdO1xuICAgIGhhc1RyYWlsaW5nU2xhc2ggPSBsYXN0ID09PSAnLicgfHwgbGFzdCA9PT0gJy4uJyB8fCBsYXN0ID09PSAnJztcbiAgfSBlbHNlIHtcbiAgICBoYXNUcmFpbGluZ1NsYXNoID0gZmFsc2U7XG4gIH1cblxuICB2YXIgdXAgPSAwO1xuICBmb3IgKHZhciBpID0gZnJvbVBhcnRzLmxlbmd0aDsgaSA+PSAwOyBpLS0pIHtcbiAgICB2YXIgcGFydCA9IGZyb21QYXJ0c1tpXTtcblxuICAgIGlmIChwYXJ0ID09PSAnLicpIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgIH0gZWxzZSBpZiAocGFydCA9PT0gJy4uJykge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgICB1cCsrO1xuICAgIH0gZWxzZSBpZiAodXApIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgICAgdXAtLTtcbiAgICB9XG4gIH1cblxuICBpZiAoIW11c3RFbmRBYnMpIGZvciAoOyB1cC0tOyB1cCkgZnJvbVBhcnRzLnVuc2hpZnQoJy4uJyk7XG5cbiAgaWYgKFxuICAgIG11c3RFbmRBYnMgJiZcbiAgICBmcm9tUGFydHNbMF0gIT09ICcnICYmXG4gICAgKCFmcm9tUGFydHNbMF0gfHwgIWlzQWJzb2x1dGUoZnJvbVBhcnRzWzBdKSlcbiAgKVxuICAgIGZyb21QYXJ0cy51bnNoaWZ0KCcnKTtcblxuICB2YXIgcmVzdWx0ID0gZnJvbVBhcnRzLmpvaW4oJy8nKTtcblxuICBpZiAoaGFzVHJhaWxpbmdTbGFzaCAmJiByZXN1bHQuc3Vic3RyKC0xKSAhPT0gJy8nKSByZXN1bHQgKz0gJy8nO1xuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHJlc29sdmVQYXRobmFtZTtcbiIsInZhciBpc1Byb2R1Y3Rpb24gPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nO1xudmFyIHByZWZpeCA9ICdJbnZhcmlhbnQgZmFpbGVkJztcbmZ1bmN0aW9uIGludmFyaWFudChjb25kaXRpb24sIG1lc3NhZ2UpIHtcbiAgICBpZiAoY29uZGl0aW9uKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKGlzUHJvZHVjdGlvbikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IocHJlZml4KTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKHByZWZpeCArIFwiOiBcIiArIChtZXNzYWdlIHx8ICcnKSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGludmFyaWFudDtcbiIsImltcG9ydCBfZXh0ZW5kcyBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzJztcbmltcG9ydCByZXNvbHZlUGF0aG5hbWUgZnJvbSAncmVzb2x2ZS1wYXRobmFtZSc7XG5pbXBvcnQgdmFsdWVFcXVhbCBmcm9tICd2YWx1ZS1lcXVhbCc7XG5pbXBvcnQgd2FybmluZyBmcm9tICd0aW55LXdhcm5pbmcnO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICd0aW55LWludmFyaWFudCc7XG5cbmZ1bmN0aW9uIGFkZExlYWRpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJy8nID8gcGF0aCA6ICcvJyArIHBhdGg7XG59XG5mdW5jdGlvbiBzdHJpcExlYWRpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJy8nID8gcGF0aC5zdWJzdHIoMSkgOiBwYXRoO1xufVxuZnVuY3Rpb24gaGFzQmFzZW5hbWUocGF0aCwgcHJlZml4KSB7XG4gIHJldHVybiBwYXRoLnRvTG93ZXJDYXNlKCkuaW5kZXhPZihwcmVmaXgudG9Mb3dlckNhc2UoKSkgPT09IDAgJiYgJy8/IycuaW5kZXhPZihwYXRoLmNoYXJBdChwcmVmaXgubGVuZ3RoKSkgIT09IC0xO1xufVxuZnVuY3Rpb24gc3RyaXBCYXNlbmFtZShwYXRoLCBwcmVmaXgpIHtcbiAgcmV0dXJuIGhhc0Jhc2VuYW1lKHBhdGgsIHByZWZpeCkgPyBwYXRoLnN1YnN0cihwcmVmaXgubGVuZ3RoKSA6IHBhdGg7XG59XG5mdW5jdGlvbiBzdHJpcFRyYWlsaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQocGF0aC5sZW5ndGggLSAxKSA9PT0gJy8nID8gcGF0aC5zbGljZSgwLCAtMSkgOiBwYXRoO1xufVxuZnVuY3Rpb24gcGFyc2VQYXRoKHBhdGgpIHtcbiAgdmFyIHBhdGhuYW1lID0gcGF0aCB8fCAnLyc7XG4gIHZhciBzZWFyY2ggPSAnJztcbiAgdmFyIGhhc2ggPSAnJztcbiAgdmFyIGhhc2hJbmRleCA9IHBhdGhuYW1lLmluZGV4T2YoJyMnKTtcblxuICBpZiAoaGFzaEluZGV4ICE9PSAtMSkge1xuICAgIGhhc2ggPSBwYXRobmFtZS5zdWJzdHIoaGFzaEluZGV4KTtcbiAgICBwYXRobmFtZSA9IHBhdGhuYW1lLnN1YnN0cigwLCBoYXNoSW5kZXgpO1xuICB9XG5cbiAgdmFyIHNlYXJjaEluZGV4ID0gcGF0aG5hbWUuaW5kZXhPZignPycpO1xuXG4gIGlmIChzZWFyY2hJbmRleCAhPT0gLTEpIHtcbiAgICBzZWFyY2ggPSBwYXRobmFtZS5zdWJzdHIoc2VhcmNoSW5kZXgpO1xuICAgIHBhdGhuYW1lID0gcGF0aG5hbWUuc3Vic3RyKDAsIHNlYXJjaEluZGV4KTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgcGF0aG5hbWU6IHBhdGhuYW1lLFxuICAgIHNlYXJjaDogc2VhcmNoID09PSAnPycgPyAnJyA6IHNlYXJjaCxcbiAgICBoYXNoOiBoYXNoID09PSAnIycgPyAnJyA6IGhhc2hcbiAgfTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZVBhdGgobG9jYXRpb24pIHtcbiAgdmFyIHBhdGhuYW1lID0gbG9jYXRpb24ucGF0aG5hbWUsXG4gICAgICBzZWFyY2ggPSBsb2NhdGlvbi5zZWFyY2gsXG4gICAgICBoYXNoID0gbG9jYXRpb24uaGFzaDtcbiAgdmFyIHBhdGggPSBwYXRobmFtZSB8fCAnLyc7XG4gIGlmIChzZWFyY2ggJiYgc2VhcmNoICE9PSAnPycpIHBhdGggKz0gc2VhcmNoLmNoYXJBdCgwKSA9PT0gJz8nID8gc2VhcmNoIDogXCI/XCIgKyBzZWFyY2g7XG4gIGlmIChoYXNoICYmIGhhc2ggIT09ICcjJykgcGF0aCArPSBoYXNoLmNoYXJBdCgwKSA9PT0gJyMnID8gaGFzaCA6IFwiI1wiICsgaGFzaDtcbiAgcmV0dXJuIHBhdGg7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBrZXksIGN1cnJlbnRMb2NhdGlvbikge1xuICB2YXIgbG9jYXRpb247XG5cbiAgaWYgKHR5cGVvZiBwYXRoID09PSAnc3RyaW5nJykge1xuICAgIC8vIFR3by1hcmcgZm9ybTogcHVzaChwYXRoLCBzdGF0ZSlcbiAgICBsb2NhdGlvbiA9IHBhcnNlUGF0aChwYXRoKTtcbiAgICBsb2NhdGlvbi5zdGF0ZSA9IHN0YXRlO1xuICB9IGVsc2Uge1xuICAgIC8vIE9uZS1hcmcgZm9ybTogcHVzaChsb2NhdGlvbilcbiAgICBsb2NhdGlvbiA9IF9leHRlbmRzKHt9LCBwYXRoKTtcbiAgICBpZiAobG9jYXRpb24ucGF0aG5hbWUgPT09IHVuZGVmaW5lZCkgbG9jYXRpb24ucGF0aG5hbWUgPSAnJztcblxuICAgIGlmIChsb2NhdGlvbi5zZWFyY2gpIHtcbiAgICAgIGlmIChsb2NhdGlvbi5zZWFyY2guY2hhckF0KDApICE9PSAnPycpIGxvY2F0aW9uLnNlYXJjaCA9ICc/JyArIGxvY2F0aW9uLnNlYXJjaDtcbiAgICB9IGVsc2Uge1xuICAgICAgbG9jYXRpb24uc2VhcmNoID0gJyc7XG4gICAgfVxuXG4gICAgaWYgKGxvY2F0aW9uLmhhc2gpIHtcbiAgICAgIGlmIChsb2NhdGlvbi5oYXNoLmNoYXJBdCgwKSAhPT0gJyMnKSBsb2NhdGlvbi5oYXNoID0gJyMnICsgbG9jYXRpb24uaGFzaDtcbiAgICB9IGVsc2Uge1xuICAgICAgbG9jYXRpb24uaGFzaCA9ICcnO1xuICAgIH1cblxuICAgIGlmIChzdGF0ZSAhPT0gdW5kZWZpbmVkICYmIGxvY2F0aW9uLnN0YXRlID09PSB1bmRlZmluZWQpIGxvY2F0aW9uLnN0YXRlID0gc3RhdGU7XG4gIH1cblxuICB0cnkge1xuICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gZGVjb2RlVVJJKGxvY2F0aW9uLnBhdGhuYW1lKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGlmIChlIGluc3RhbmNlb2YgVVJJRXJyb3IpIHtcbiAgICAgIHRocm93IG5ldyBVUklFcnJvcignUGF0aG5hbWUgXCInICsgbG9jYXRpb24ucGF0aG5hbWUgKyAnXCIgY291bGQgbm90IGJlIGRlY29kZWQuICcgKyAnVGhpcyBpcyBsaWtlbHkgY2F1c2VkIGJ5IGFuIGludmFsaWQgcGVyY2VudC1lbmNvZGluZy4nKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgZTtcbiAgICB9XG4gIH1cblxuICBpZiAoa2V5KSBsb2NhdGlvbi5rZXkgPSBrZXk7XG5cbiAgaWYgKGN1cnJlbnRMb2NhdGlvbikge1xuICAgIC8vIFJlc29sdmUgaW5jb21wbGV0ZS9yZWxhdGl2ZSBwYXRobmFtZSByZWxhdGl2ZSB0byBjdXJyZW50IGxvY2F0aW9uLlxuICAgIGlmICghbG9jYXRpb24ucGF0aG5hbWUpIHtcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gY3VycmVudExvY2F0aW9uLnBhdGhuYW1lO1xuICAgIH0gZWxzZSBpZiAobG9jYXRpb24ucGF0aG5hbWUuY2hhckF0KDApICE9PSAnLycpIHtcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gcmVzb2x2ZVBhdGhuYW1lKGxvY2F0aW9uLnBhdGhuYW1lLCBjdXJyZW50TG9jYXRpb24ucGF0aG5hbWUpO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICAvLyBXaGVuIHRoZXJlIGlzIG5vIHByaW9yIGxvY2F0aW9uIGFuZCBwYXRobmFtZSBpcyBlbXB0eSwgc2V0IGl0IHRvIC9cbiAgICBpZiAoIWxvY2F0aW9uLnBhdGhuYW1lKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9ICcvJztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbG9jYXRpb247XG59XG5mdW5jdGlvbiBsb2NhdGlvbnNBcmVFcXVhbChhLCBiKSB7XG4gIHJldHVybiBhLnBhdGhuYW1lID09PSBiLnBhdGhuYW1lICYmIGEuc2VhcmNoID09PSBiLnNlYXJjaCAmJiBhLmhhc2ggPT09IGIuaGFzaCAmJiBhLmtleSA9PT0gYi5rZXkgJiYgdmFsdWVFcXVhbChhLnN0YXRlLCBiLnN0YXRlKTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKSB7XG4gIHZhciBwcm9tcHQgPSBudWxsO1xuXG4gIGZ1bmN0aW9uIHNldFByb21wdChuZXh0UHJvbXB0KSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhwcm9tcHQgPT0gbnVsbCwgJ0EgaGlzdG9yeSBzdXBwb3J0cyBvbmx5IG9uZSBwcm9tcHQgYXQgYSB0aW1lJykgOiB2b2lkIDA7XG4gICAgcHJvbXB0ID0gbmV4dFByb21wdDtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKHByb21wdCA9PT0gbmV4dFByb21wdCkgcHJvbXB0ID0gbnVsbDtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBjYWxsYmFjaykge1xuICAgIC8vIFRPRE86IElmIGFub3RoZXIgdHJhbnNpdGlvbiBzdGFydHMgd2hpbGUgd2UncmUgc3RpbGwgY29uZmlybWluZ1xuICAgIC8vIHRoZSBwcmV2aW91cyBvbmUsIHdlIG1heSBlbmQgdXAgaW4gYSB3ZWlyZCBzdGF0ZS4gRmlndXJlIG91dCB0aGVcbiAgICAvLyBiZXN0IHdheSB0byBoYW5kbGUgdGhpcy5cbiAgICBpZiAocHJvbXB0ICE9IG51bGwpIHtcbiAgICAgIHZhciByZXN1bHQgPSB0eXBlb2YgcHJvbXB0ID09PSAnZnVuY3Rpb24nID8gcHJvbXB0KGxvY2F0aW9uLCBhY3Rpb24pIDogcHJvbXB0O1xuXG4gICAgICBpZiAodHlwZW9mIHJlc3VsdCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBnZXRVc2VyQ29uZmlybWF0aW9uID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbihyZXN1bHQsIGNhbGxiYWNrKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGZhbHNlLCAnQSBoaXN0b3J5IG5lZWRzIGEgZ2V0VXNlckNvbmZpcm1hdGlvbiBmdW5jdGlvbiBpbiBvcmRlciB0byB1c2UgYSBwcm9tcHQgbWVzc2FnZScpIDogdm9pZCAwO1xuICAgICAgICAgIGNhbGxiYWNrKHRydWUpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBSZXR1cm4gZmFsc2UgZnJvbSBhIHRyYW5zaXRpb24gaG9vayB0byBjYW5jZWwgdGhlIHRyYW5zaXRpb24uXG4gICAgICAgIGNhbGxiYWNrKHJlc3VsdCAhPT0gZmFsc2UpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBjYWxsYmFjayh0cnVlKTtcbiAgICB9XG4gIH1cblxuICB2YXIgbGlzdGVuZXJzID0gW107XG5cbiAgZnVuY3Rpb24gYXBwZW5kTGlzdGVuZXIoZm4pIHtcbiAgICB2YXIgaXNBY3RpdmUgPSB0cnVlO1xuXG4gICAgZnVuY3Rpb24gbGlzdGVuZXIoKSB7XG4gICAgICBpZiAoaXNBY3RpdmUpIGZuLmFwcGx5KHZvaWQgMCwgYXJndW1lbnRzKTtcbiAgICB9XG5cbiAgICBsaXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlzQWN0aXZlID0gZmFsc2U7XG4gICAgICBsaXN0ZW5lcnMgPSBsaXN0ZW5lcnMuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgIHJldHVybiBpdGVtICE9PSBsaXN0ZW5lcjtcbiAgICAgIH0pO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBub3RpZnlMaXN0ZW5lcnMoKSB7XG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIGxpc3RlbmVycy5mb3JFYWNoKGZ1bmN0aW9uIChsaXN0ZW5lcikge1xuICAgICAgcmV0dXJuIGxpc3RlbmVyLmFwcGx5KHZvaWQgMCwgYXJncyk7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHNldFByb21wdDogc2V0UHJvbXB0LFxuICAgIGNvbmZpcm1UcmFuc2l0aW9uVG86IGNvbmZpcm1UcmFuc2l0aW9uVG8sXG4gICAgYXBwZW5kTGlzdGVuZXI6IGFwcGVuZExpc3RlbmVyLFxuICAgIG5vdGlmeUxpc3RlbmVyczogbm90aWZ5TGlzdGVuZXJzXG4gIH07XG59XG5cbnZhciBjYW5Vc2VET00gPSAhISh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuZG9jdW1lbnQgJiYgd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO1xuZnVuY3Rpb24gZ2V0Q29uZmlybWF0aW9uKG1lc3NhZ2UsIGNhbGxiYWNrKSB7XG4gIGNhbGxiYWNrKHdpbmRvdy5jb25maXJtKG1lc3NhZ2UpKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1hbGVydFxufVxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgdGhlIEhUTUw1IGhpc3RvcnkgQVBJIGlzIHN1cHBvcnRlZC4gVGFrZW4gZnJvbSBNb2Rlcm5penIuXG4gKlxuICogaHR0cHM6Ly9naXRodWIuY29tL01vZGVybml6ci9Nb2Rlcm5penIvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICogaHR0cHM6Ly9naXRodWIuY29tL01vZGVybml6ci9Nb2Rlcm5penIvYmxvYi9tYXN0ZXIvZmVhdHVyZS1kZXRlY3RzL2hpc3RvcnkuanNcbiAqIGNoYW5nZWQgdG8gYXZvaWQgZmFsc2UgbmVnYXRpdmVzIGZvciBXaW5kb3dzIFBob25lczogaHR0cHM6Ly9naXRodWIuY29tL3JlYWN0anMvcmVhY3Qtcm91dGVyL2lzc3Vlcy81ODZcbiAqL1xuXG5mdW5jdGlvbiBzdXBwb3J0c0hpc3RvcnkoKSB7XG4gIHZhciB1YSA9IHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50O1xuICBpZiAoKHVhLmluZGV4T2YoJ0FuZHJvaWQgMi4nKSAhPT0gLTEgfHwgdWEuaW5kZXhPZignQW5kcm9pZCA0LjAnKSAhPT0gLTEpICYmIHVhLmluZGV4T2YoJ01vYmlsZSBTYWZhcmknKSAhPT0gLTEgJiYgdWEuaW5kZXhPZignQ2hyb21lJykgPT09IC0xICYmIHVhLmluZGV4T2YoJ1dpbmRvd3MgUGhvbmUnKSA9PT0gLTEpIHJldHVybiBmYWxzZTtcbiAgcmV0dXJuIHdpbmRvdy5oaXN0b3J5ICYmICdwdXNoU3RhdGUnIGluIHdpbmRvdy5oaXN0b3J5O1xufVxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgYnJvd3NlciBmaXJlcyBwb3BzdGF0ZSBvbiBoYXNoIGNoYW5nZS5cbiAqIElFMTAgYW5kIElFMTEgZG8gbm90LlxuICovXG5cbmZ1bmN0aW9uIHN1cHBvcnRzUG9wU3RhdGVPbkhhc2hDaGFuZ2UoKSB7XG4gIHJldHVybiB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdUcmlkZW50JykgPT09IC0xO1xufVxuLyoqXG4gKiBSZXR1cm5zIGZhbHNlIGlmIHVzaW5nIGdvKG4pIHdpdGggaGFzaCBoaXN0b3J5IGNhdXNlcyBhIGZ1bGwgcGFnZSByZWxvYWQuXG4gKi9cblxuZnVuY3Rpb24gc3VwcG9ydHNHb1dpdGhvdXRSZWxvYWRVc2luZ0hhc2goKSB7XG4gIHJldHVybiB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdGaXJlZm94JykgPT09IC0xO1xufVxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgYSBnaXZlbiBwb3BzdGF0ZSBldmVudCBpcyBhbiBleHRyYW5lb3VzIFdlYktpdCBldmVudC5cbiAqIEFjY291bnRzIGZvciB0aGUgZmFjdCB0aGF0IENocm9tZSBvbiBpT1MgZmlyZXMgcmVhbCBwb3BzdGF0ZSBldmVudHNcbiAqIGNvbnRhaW5pbmcgdW5kZWZpbmVkIHN0YXRlIHdoZW4gcHJlc3NpbmcgdGhlIGJhY2sgYnV0dG9uLlxuICovXG5cbmZ1bmN0aW9uIGlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQoZXZlbnQpIHtcbiAgcmV0dXJuIGV2ZW50LnN0YXRlID09PSB1bmRlZmluZWQgJiYgbmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdDcmlPUycpID09PSAtMTtcbn1cblxudmFyIFBvcFN0YXRlRXZlbnQgPSAncG9wc3RhdGUnO1xudmFyIEhhc2hDaGFuZ2VFdmVudCA9ICdoYXNoY2hhbmdlJztcblxuZnVuY3Rpb24gZ2V0SGlzdG9yeVN0YXRlKCkge1xuICB0cnkge1xuICAgIHJldHVybiB3aW5kb3cuaGlzdG9yeS5zdGF0ZSB8fCB7fTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIC8vIElFIDExIHNvbWV0aW1lcyB0aHJvd3Mgd2hlbiBhY2Nlc3Npbmcgd2luZG93Lmhpc3Rvcnkuc3RhdGVcbiAgICAvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL1JlYWN0VHJhaW5pbmcvaGlzdG9yeS9wdWxsLzI4OVxuICAgIHJldHVybiB7fTtcbiAgfVxufVxuLyoqXG4gKiBDcmVhdGVzIGEgaGlzdG9yeSBvYmplY3QgdGhhdCB1c2VzIHRoZSBIVE1MNSBoaXN0b3J5IEFQSSBpbmNsdWRpbmdcbiAqIHB1c2hTdGF0ZSwgcmVwbGFjZVN0YXRlLCBhbmQgdGhlIHBvcHN0YXRlIGV2ZW50LlxuICovXG5cblxuZnVuY3Rpb24gY3JlYXRlQnJvd3Nlckhpc3RvcnkocHJvcHMpIHtcbiAgaWYgKHByb3BzID09PSB2b2lkIDApIHtcbiAgICBwcm9wcyA9IHt9O1xuICB9XG5cbiAgIWNhblVzZURPTSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgJ0Jyb3dzZXIgaGlzdG9yeSBuZWVkcyBhIERPTScpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgdmFyIGdsb2JhbEhpc3RvcnkgPSB3aW5kb3cuaGlzdG9yeTtcbiAgdmFyIGNhblVzZUhpc3RvcnkgPSBzdXBwb3J0c0hpc3RvcnkoKTtcbiAgdmFyIG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyID0gIXN1cHBvcnRzUG9wU3RhdGVPbkhhc2hDaGFuZ2UoKTtcbiAgdmFyIF9wcm9wcyA9IHByb3BzLFxuICAgICAgX3Byb3BzJGZvcmNlUmVmcmVzaCA9IF9wcm9wcy5mb3JjZVJlZnJlc2gsXG4gICAgICBmb3JjZVJlZnJlc2ggPSBfcHJvcHMkZm9yY2VSZWZyZXNoID09PSB2b2lkIDAgPyBmYWxzZSA6IF9wcm9wcyRmb3JjZVJlZnJlc2gsXG4gICAgICBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPSBfcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24gPSBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPT09IHZvaWQgMCA/IGdldENvbmZpcm1hdGlvbiA6IF9wcm9wcyRnZXRVc2VyQ29uZmlybSxcbiAgICAgIF9wcm9wcyRrZXlMZW5ndGggPSBfcHJvcHMua2V5TGVuZ3RoLFxuICAgICAga2V5TGVuZ3RoID0gX3Byb3BzJGtleUxlbmd0aCA9PT0gdm9pZCAwID8gNiA6IF9wcm9wcyRrZXlMZW5ndGg7XG4gIHZhciBiYXNlbmFtZSA9IHByb3BzLmJhc2VuYW1lID8gc3RyaXBUcmFpbGluZ1NsYXNoKGFkZExlYWRpbmdTbGFzaChwcm9wcy5iYXNlbmFtZSkpIDogJyc7XG5cbiAgZnVuY3Rpb24gZ2V0RE9NTG9jYXRpb24oaGlzdG9yeVN0YXRlKSB7XG4gICAgdmFyIF9yZWYgPSBoaXN0b3J5U3RhdGUgfHwge30sXG4gICAgICAgIGtleSA9IF9yZWYua2V5LFxuICAgICAgICBzdGF0ZSA9IF9yZWYuc3RhdGU7XG5cbiAgICB2YXIgX3dpbmRvdyRsb2NhdGlvbiA9IHdpbmRvdy5sb2NhdGlvbixcbiAgICAgICAgcGF0aG5hbWUgPSBfd2luZG93JGxvY2F0aW9uLnBhdGhuYW1lLFxuICAgICAgICBzZWFyY2ggPSBfd2luZG93JGxvY2F0aW9uLnNlYXJjaCxcbiAgICAgICAgaGFzaCA9IF93aW5kb3ckbG9jYXRpb24uaGFzaDtcbiAgICB2YXIgcGF0aCA9IHBhdGhuYW1lICsgc2VhcmNoICsgaGFzaDtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCFiYXNlbmFtZSB8fCBoYXNCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSksICdZb3UgYXJlIGF0dGVtcHRpbmcgdG8gdXNlIGEgYmFzZW5hbWUgb24gYSBwYWdlIHdob3NlIFVSTCBwYXRoIGRvZXMgbm90IGJlZ2luICcgKyAnd2l0aCB0aGUgYmFzZW5hbWUuIEV4cGVjdGVkIHBhdGggXCInICsgcGF0aCArICdcIiB0byBiZWdpbiB3aXRoIFwiJyArIGJhc2VuYW1lICsgJ1wiLicpIDogdm9pZCAwO1xuICAgIGlmIChiYXNlbmFtZSkgcGF0aCA9IHN0cmlwQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpO1xuICAgIHJldHVybiBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwga2V5KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUtleSgpIHtcbiAgICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIGtleUxlbmd0aCk7XG4gIH1cblxuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGdsb2JhbEhpc3RvcnkubGVuZ3RoO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVQb3BTdGF0ZShldmVudCkge1xuICAgIC8vIElnbm9yZSBleHRyYW5lb3VzIHBvcHN0YXRlIGV2ZW50cyBpbiBXZWJLaXQuXG4gICAgaWYgKGlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQoZXZlbnQpKSByZXR1cm47XG4gICAgaGFuZGxlUG9wKGdldERPTUxvY2F0aW9uKGV2ZW50LnN0YXRlKSk7XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVIYXNoQ2hhbmdlKCkge1xuICAgIGhhbmRsZVBvcChnZXRET01Mb2NhdGlvbihnZXRIaXN0b3J5U3RhdGUoKSkpO1xuICB9XG5cbiAgdmFyIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIGhhbmRsZVBvcChsb2NhdGlvbikge1xuICAgIGlmIChmb3JjZU5leHRQb3ApIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICAgICAgc2V0U3RhdGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuICAgICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgICAgaWYgKG9rKSB7XG4gICAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXZlcnRQb3AobG9jYXRpb24pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiByZXZlcnRQb3AoZnJvbUxvY2F0aW9uKSB7XG4gICAgdmFyIHRvTG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uOyAvLyBUT0RPOiBXZSBjb3VsZCBwcm9iYWJseSBtYWtlIHRoaXMgbW9yZSByZWxpYWJsZSBieVxuICAgIC8vIGtlZXBpbmcgYSBsaXN0IG9mIGtleXMgd2UndmUgc2VlbiBpbiBzZXNzaW9uU3RvcmFnZS5cbiAgICAvLyBJbnN0ZWFkLCB3ZSBqdXN0IGRlZmF1bHQgdG8gMCBmb3Iga2V5cyB3ZSBkb24ndCBrbm93LlxuXG4gICAgdmFyIHRvSW5kZXggPSBhbGxLZXlzLmluZGV4T2YodG9Mb2NhdGlvbi5rZXkpO1xuICAgIGlmICh0b0luZGV4ID09PSAtMSkgdG9JbmRleCA9IDA7XG4gICAgdmFyIGZyb21JbmRleCA9IGFsbEtleXMuaW5kZXhPZihmcm9tTG9jYXRpb24ua2V5KTtcbiAgICBpZiAoZnJvbUluZGV4ID09PSAtMSkgZnJvbUluZGV4ID0gMDtcbiAgICB2YXIgZGVsdGEgPSB0b0luZGV4IC0gZnJvbUluZGV4O1xuXG4gICAgaWYgKGRlbHRhKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSB0cnVlO1xuICAgICAgZ28oZGVsdGEpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBpbml0aWFsTG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbihnZXRIaXN0b3J5U3RhdGUoKSk7XG4gIHZhciBhbGxLZXlzID0gW2luaXRpYWxMb2NhdGlvbi5rZXldOyAvLyBQdWJsaWMgaW50ZXJmYWNlXG5cbiAgZnVuY3Rpb24gY3JlYXRlSHJlZihsb2NhdGlvbikge1xuICAgIHJldHVybiBiYXNlbmFtZSArIGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICB9XG5cbiAgZnVuY3Rpb24gcHVzaChwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcHVzaCB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBocmVmID0gY3JlYXRlSHJlZihsb2NhdGlvbik7XG4gICAgICB2YXIga2V5ID0gbG9jYXRpb24ua2V5LFxuICAgICAgICAgIHN0YXRlID0gbG9jYXRpb24uc3RhdGU7XG5cbiAgICAgIGlmIChjYW5Vc2VIaXN0b3J5KSB7XG4gICAgICAgIGdsb2JhbEhpc3RvcnkucHVzaFN0YXRlKHtcbiAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICBzdGF0ZTogc3RhdGVcbiAgICAgICAgfSwgbnVsbCwgaHJlZik7XG5cbiAgICAgICAgaWYgKGZvcmNlUmVmcmVzaCkge1xuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gaHJlZjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGhpc3RvcnkubG9jYXRpb24ua2V5KTtcbiAgICAgICAgICB2YXIgbmV4dEtleXMgPSBhbGxLZXlzLnNsaWNlKDAsIHByZXZJbmRleCArIDEpO1xuICAgICAgICAgIG5leHRLZXlzLnB1c2gobG9jYXRpb24ua2V5KTtcbiAgICAgICAgICBhbGxLZXlzID0gbmV4dEtleXM7XG4gICAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnQnJvd3NlciBoaXN0b3J5IGNhbm5vdCBwdXNoIHN0YXRlIGluIGJyb3dzZXJzIHRoYXQgZG8gbm90IHN1cHBvcnQgSFRNTDUgaGlzdG9yeScpIDogdm9pZCAwO1xuICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IGhyZWY7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHR5cGVvZiBwYXRoID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byByZXBsYWNlIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIGhyZWYgPSBjcmVhdGVIcmVmKGxvY2F0aW9uKTtcbiAgICAgIHZhciBrZXkgPSBsb2NhdGlvbi5rZXksXG4gICAgICAgICAgc3RhdGUgPSBsb2NhdGlvbi5zdGF0ZTtcblxuICAgICAgaWYgKGNhblVzZUhpc3RvcnkpIHtcbiAgICAgICAgZ2xvYmFsSGlzdG9yeS5yZXBsYWNlU3RhdGUoe1xuICAgICAgICAgIGtleToga2V5LFxuICAgICAgICAgIHN0YXRlOiBzdGF0ZVxuICAgICAgICB9LCBudWxsLCBocmVmKTtcblxuICAgICAgICBpZiAoZm9yY2VSZWZyZXNoKSB7XG4gICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2UoaHJlZik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbEtleXMuaW5kZXhPZihoaXN0b3J5LmxvY2F0aW9uLmtleSk7XG4gICAgICAgICAgaWYgKHByZXZJbmRleCAhPT0gLTEpIGFsbEtleXNbcHJldkluZGV4XSA9IGxvY2F0aW9uLmtleTtcbiAgICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdCcm93c2VyIGhpc3RvcnkgY2Fubm90IHJlcGxhY2Ugc3RhdGUgaW4gYnJvd3NlcnMgdGhhdCBkbyBub3Qgc3VwcG9ydCBIVE1MNSBoaXN0b3J5JykgOiB2b2lkIDA7XG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKGhyZWYpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ28obikge1xuICAgIGdsb2JhbEhpc3RvcnkuZ28obik7XG4gIH1cblxuICBmdW5jdGlvbiBnb0JhY2soKSB7XG4gICAgZ28oLTEpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29Gb3J3YXJkKCkge1xuICAgIGdvKDEpO1xuICB9XG5cbiAgdmFyIGxpc3RlbmVyQ291bnQgPSAwO1xuXG4gIGZ1bmN0aW9uIGNoZWNrRE9NTGlzdGVuZXJzKGRlbHRhKSB7XG4gICAgbGlzdGVuZXJDb3VudCArPSBkZWx0YTtcblxuICAgIGlmIChsaXN0ZW5lckNvdW50ID09PSAxICYmIGRlbHRhID09PSAxKSB7XG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihQb3BTdGF0ZUV2ZW50LCBoYW5kbGVQb3BTdGF0ZSk7XG4gICAgICBpZiAobmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIpIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKEhhc2hDaGFuZ2VFdmVudCwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfSBlbHNlIGlmIChsaXN0ZW5lckNvdW50ID09PSAwKSB7XG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihQb3BTdGF0ZUV2ZW50LCBoYW5kbGVQb3BTdGF0ZSk7XG4gICAgICBpZiAobmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIpIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKEhhc2hDaGFuZ2VFdmVudCwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGlzQmxvY2tlZCA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIGJsb2NrKHByb21wdCkge1xuICAgIGlmIChwcm9tcHQgPT09IHZvaWQgMCkge1xuICAgICAgcHJvbXB0ID0gZmFsc2U7XG4gICAgfVxuXG4gICAgdmFyIHVuYmxvY2sgPSB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcblxuICAgIGlmICghaXNCbG9ja2VkKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICAgIGlzQmxvY2tlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChpc0Jsb2NrZWQpIHtcbiAgICAgICAgaXNCbG9ja2VkID0gZmFsc2U7XG4gICAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHVuYmxvY2soKTtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgdmFyIHVubGlzdGVuID0gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xuICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB1bmxpc3RlbigpO1xuICAgIH07XG4gIH1cblxuICB2YXIgaGlzdG9yeSA9IHtcbiAgICBsZW5ndGg6IGdsb2JhbEhpc3RvcnkubGVuZ3RoLFxuICAgIGFjdGlvbjogJ1BPUCcsXG4gICAgbG9jYXRpb246IGluaXRpYWxMb2NhdGlvbixcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgZ29CYWNrOiBnb0JhY2ssXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXG4gICAgYmxvY2s6IGJsb2NrLFxuICAgIGxpc3RlbjogbGlzdGVuXG4gIH07XG4gIHJldHVybiBoaXN0b3J5O1xufVxuXG52YXIgSGFzaENoYW5nZUV2ZW50JDEgPSAnaGFzaGNoYW5nZSc7XG52YXIgSGFzaFBhdGhDb2RlcnMgPSB7XG4gIGhhc2hiYW5nOiB7XG4gICAgZW5jb2RlUGF0aDogZnVuY3Rpb24gZW5jb2RlUGF0aChwYXRoKSB7XG4gICAgICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICchJyA/IHBhdGggOiAnIS8nICsgc3RyaXBMZWFkaW5nU2xhc2gocGF0aCk7XG4gICAgfSxcbiAgICBkZWNvZGVQYXRoOiBmdW5jdGlvbiBkZWNvZGVQYXRoKHBhdGgpIHtcbiAgICAgIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJyEnID8gcGF0aC5zdWJzdHIoMSkgOiBwYXRoO1xuICAgIH1cbiAgfSxcbiAgbm9zbGFzaDoge1xuICAgIGVuY29kZVBhdGg6IHN0cmlwTGVhZGluZ1NsYXNoLFxuICAgIGRlY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaFxuICB9LFxuICBzbGFzaDoge1xuICAgIGVuY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaCxcbiAgICBkZWNvZGVQYXRoOiBhZGRMZWFkaW5nU2xhc2hcbiAgfVxufTtcblxuZnVuY3Rpb24gc3RyaXBIYXNoKHVybCkge1xuICB2YXIgaGFzaEluZGV4ID0gdXJsLmluZGV4T2YoJyMnKTtcbiAgcmV0dXJuIGhhc2hJbmRleCA9PT0gLTEgPyB1cmwgOiB1cmwuc2xpY2UoMCwgaGFzaEluZGV4KTtcbn1cblxuZnVuY3Rpb24gZ2V0SGFzaFBhdGgoKSB7XG4gIC8vIFdlIGNhbid0IHVzZSB3aW5kb3cubG9jYXRpb24uaGFzaCBoZXJlIGJlY2F1c2UgaXQncyBub3RcbiAgLy8gY29uc2lzdGVudCBhY3Jvc3MgYnJvd3NlcnMgLSBGaXJlZm94IHdpbGwgcHJlLWRlY29kZSBpdCFcbiAgdmFyIGhyZWYgPSB3aW5kb3cubG9jYXRpb24uaHJlZjtcbiAgdmFyIGhhc2hJbmRleCA9IGhyZWYuaW5kZXhPZignIycpO1xuICByZXR1cm4gaGFzaEluZGV4ID09PSAtMSA/ICcnIDogaHJlZi5zdWJzdHJpbmcoaGFzaEluZGV4ICsgMSk7XG59XG5cbmZ1bmN0aW9uIHB1c2hIYXNoUGF0aChwYXRoKSB7XG4gIHdpbmRvdy5sb2NhdGlvbi5oYXNoID0gcGF0aDtcbn1cblxuZnVuY3Rpb24gcmVwbGFjZUhhc2hQYXRoKHBhdGgpIHtcbiAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2Uoc3RyaXBIYXNoKHdpbmRvdy5sb2NhdGlvbi5ocmVmKSArICcjJyArIHBhdGgpO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVIYXNoSGlzdG9yeShwcm9wcykge1xuICBpZiAocHJvcHMgPT09IHZvaWQgMCkge1xuICAgIHByb3BzID0ge307XG4gIH1cblxuICAhY2FuVXNlRE9NID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAnSGFzaCBoaXN0b3J5IG5lZWRzIGEgRE9NJykgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICB2YXIgZ2xvYmFsSGlzdG9yeSA9IHdpbmRvdy5oaXN0b3J5O1xuICB2YXIgY2FuR29XaXRob3V0UmVsb2FkID0gc3VwcG9ydHNHb1dpdGhvdXRSZWxvYWRVc2luZ0hhc2goKTtcbiAgdmFyIF9wcm9wcyA9IHByb3BzLFxuICAgICAgX3Byb3BzJGdldFVzZXJDb25maXJtID0gX3Byb3BzLmdldFVzZXJDb25maXJtYXRpb24sXG4gICAgICBnZXRVc2VyQ29uZmlybWF0aW9uID0gX3Byb3BzJGdldFVzZXJDb25maXJtID09PSB2b2lkIDAgPyBnZXRDb25maXJtYXRpb24gOiBfcHJvcHMkZ2V0VXNlckNvbmZpcm0sXG4gICAgICBfcHJvcHMkaGFzaFR5cGUgPSBfcHJvcHMuaGFzaFR5cGUsXG4gICAgICBoYXNoVHlwZSA9IF9wcm9wcyRoYXNoVHlwZSA9PT0gdm9pZCAwID8gJ3NsYXNoJyA6IF9wcm9wcyRoYXNoVHlwZTtcbiAgdmFyIGJhc2VuYW1lID0gcHJvcHMuYmFzZW5hbWUgPyBzdHJpcFRyYWlsaW5nU2xhc2goYWRkTGVhZGluZ1NsYXNoKHByb3BzLmJhc2VuYW1lKSkgOiAnJztcbiAgdmFyIF9IYXNoUGF0aENvZGVycyRoYXNoVCA9IEhhc2hQYXRoQ29kZXJzW2hhc2hUeXBlXSxcbiAgICAgIGVuY29kZVBhdGggPSBfSGFzaFBhdGhDb2RlcnMkaGFzaFQuZW5jb2RlUGF0aCxcbiAgICAgIGRlY29kZVBhdGggPSBfSGFzaFBhdGhDb2RlcnMkaGFzaFQuZGVjb2RlUGF0aDtcblxuICBmdW5jdGlvbiBnZXRET01Mb2NhdGlvbigpIHtcbiAgICB2YXIgcGF0aCA9IGRlY29kZVBhdGgoZ2V0SGFzaFBhdGgoKSk7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghYmFzZW5hbWUgfHwgaGFzQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpLCAnWW91IGFyZSBhdHRlbXB0aW5nIHRvIHVzZSBhIGJhc2VuYW1lIG9uIGEgcGFnZSB3aG9zZSBVUkwgcGF0aCBkb2VzIG5vdCBiZWdpbiAnICsgJ3dpdGggdGhlIGJhc2VuYW1lLiBFeHBlY3RlZCBwYXRoIFwiJyArIHBhdGggKyAnXCIgdG8gYmVnaW4gd2l0aCBcIicgKyBiYXNlbmFtZSArICdcIi4nKSA6IHZvaWQgMDtcbiAgICBpZiAoYmFzZW5hbWUpIHBhdGggPSBzdHJpcEJhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKTtcbiAgICByZXR1cm4gY3JlYXRlTG9jYXRpb24ocGF0aCk7XG4gIH1cblxuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGdsb2JhbEhpc3RvcnkubGVuZ3RoO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XG4gIH1cblxuICB2YXIgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gIHZhciBpZ25vcmVQYXRoID0gbnVsbDtcblxuICBmdW5jdGlvbiBsb2NhdGlvbnNBcmVFcXVhbCQkMShhLCBiKSB7XG4gICAgcmV0dXJuIGEucGF0aG5hbWUgPT09IGIucGF0aG5hbWUgJiYgYS5zZWFyY2ggPT09IGIuc2VhcmNoICYmIGEuaGFzaCA9PT0gYi5oYXNoO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlSGFzaENoYW5nZSgpIHtcbiAgICB2YXIgcGF0aCA9IGdldEhhc2hQYXRoKCk7XG4gICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChwYXRoKTtcblxuICAgIGlmIChwYXRoICE9PSBlbmNvZGVkUGF0aCkge1xuICAgICAgLy8gRW5zdXJlIHdlIGFsd2F5cyBoYXZlIGEgcHJvcGVybHktZW5jb2RlZCBoYXNoLlxuICAgICAgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGxvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oKTtcbiAgICAgIHZhciBwcmV2TG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uO1xuICAgICAgaWYgKCFmb3JjZU5leHRQb3AgJiYgbG9jYXRpb25zQXJlRXF1YWwkJDEocHJldkxvY2F0aW9uLCBsb2NhdGlvbikpIHJldHVybjsgLy8gQSBoYXNoY2hhbmdlIGRvZXNuJ3QgYWx3YXlzID09IGxvY2F0aW9uIGNoYW5nZS5cblxuICAgICAgaWYgKGlnbm9yZVBhdGggPT09IGNyZWF0ZVBhdGgobG9jYXRpb24pKSByZXR1cm47IC8vIElnbm9yZSB0aGlzIGNoYW5nZTsgd2UgYWxyZWFkeSBzZXRTdGF0ZSBpbiBwdXNoL3JlcGxhY2UuXG5cbiAgICAgIGlnbm9yZVBhdGggPSBudWxsO1xuICAgICAgaGFuZGxlUG9wKGxvY2F0aW9uKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVQb3AobG9jYXRpb24pIHtcbiAgICBpZiAoZm9yY2VOZXh0UG9wKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSBmYWxzZTtcbiAgICAgIHNldFN0YXRlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBhY3Rpb24gPSAnUE9QJztcbiAgICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICAgIGlmIChvaykge1xuICAgICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV2ZXJ0UG9wKGxvY2F0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcmV2ZXJ0UG9wKGZyb21Mb2NhdGlvbikge1xuICAgIHZhciB0b0xvY2F0aW9uID0gaGlzdG9yeS5sb2NhdGlvbjsgLy8gVE9ETzogV2UgY291bGQgcHJvYmFibHkgbWFrZSB0aGlzIG1vcmUgcmVsaWFibGUgYnlcbiAgICAvLyBrZWVwaW5nIGEgbGlzdCBvZiBwYXRocyB3ZSd2ZSBzZWVuIGluIHNlc3Npb25TdG9yYWdlLlxuICAgIC8vIEluc3RlYWQsIHdlIGp1c3QgZGVmYXVsdCB0byAwIGZvciBwYXRocyB3ZSBkb24ndCBrbm93LlxuXG4gICAgdmFyIHRvSW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKHRvTG9jYXRpb24pKTtcbiAgICBpZiAodG9JbmRleCA9PT0gLTEpIHRvSW5kZXggPSAwO1xuICAgIHZhciBmcm9tSW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKGZyb21Mb2NhdGlvbikpO1xuICAgIGlmIChmcm9tSW5kZXggPT09IC0xKSBmcm9tSW5kZXggPSAwO1xuICAgIHZhciBkZWx0YSA9IHRvSW5kZXggLSBmcm9tSW5kZXg7XG5cbiAgICBpZiAoZGVsdGEpIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IHRydWU7XG4gICAgICBnbyhkZWx0YSk7XG4gICAgfVxuICB9IC8vIEVuc3VyZSB0aGUgaGFzaCBpcyBlbmNvZGVkIHByb3Blcmx5IGJlZm9yZSBkb2luZyBhbnl0aGluZyBlbHNlLlxuXG5cbiAgdmFyIHBhdGggPSBnZXRIYXNoUGF0aCgpO1xuICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKHBhdGgpO1xuICBpZiAocGF0aCAhPT0gZW5jb2RlZFBhdGgpIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gIHZhciBpbml0aWFsTG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbigpO1xuICB2YXIgYWxsUGF0aHMgPSBbY3JlYXRlUGF0aChpbml0aWFsTG9jYXRpb24pXTsgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUhyZWYobG9jYXRpb24pIHtcbiAgICB2YXIgYmFzZVRhZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2Jhc2UnKTtcbiAgICB2YXIgaHJlZiA9ICcnO1xuXG4gICAgaWYgKGJhc2VUYWcgJiYgYmFzZVRhZy5nZXRBdHRyaWJ1dGUoJ2hyZWYnKSkge1xuICAgICAgaHJlZiA9IHN0cmlwSGFzaCh3aW5kb3cubG9jYXRpb24uaHJlZik7XG4gICAgfVxuXG4gICAgcmV0dXJuIGhyZWYgKyAnIycgKyBlbmNvZGVQYXRoKGJhc2VuYW1lICsgY3JlYXRlUGF0aChsb2NhdGlvbikpO1xuICB9XG5cbiAgZnVuY3Rpb24gcHVzaChwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgcHVzaCBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUFVTSCc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgcGF0aCA9IGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICAgICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChiYXNlbmFtZSArIHBhdGgpO1xuICAgICAgdmFyIGhhc2hDaGFuZ2VkID0gZ2V0SGFzaFBhdGgoKSAhPT0gZW5jb2RlZFBhdGg7XG5cbiAgICAgIGlmIChoYXNoQ2hhbmdlZCkge1xuICAgICAgICAvLyBXZSBjYW5ub3QgdGVsbCBpZiBhIGhhc2hjaGFuZ2Ugd2FzIGNhdXNlZCBieSBhIFBVU0gsIHNvIHdlJ2RcbiAgICAgICAgLy8gcmF0aGVyIHNldFN0YXRlIGhlcmUgYW5kIGlnbm9yZSB0aGUgaGFzaGNoYW5nZS4gVGhlIGNhdmVhdCBoZXJlXG4gICAgICAgIC8vIGlzIHRoYXQgb3RoZXIgaGFzaCBoaXN0b3JpZXMgaW4gdGhlIHBhZ2Ugd2lsbCBjb25zaWRlciBpdCBhIFBPUC5cbiAgICAgICAgaWdub3JlUGF0aCA9IHBhdGg7XG4gICAgICAgIHB1c2hIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKGhpc3RvcnkubG9jYXRpb24pKTtcbiAgICAgICAgdmFyIG5leHRQYXRocyA9IGFsbFBhdGhzLnNsaWNlKDAsIHByZXZJbmRleCArIDEpO1xuICAgICAgICBuZXh0UGF0aHMucHVzaChwYXRoKTtcbiAgICAgICAgYWxsUGF0aHMgPSBuZXh0UGF0aHM7XG4gICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGZhbHNlLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCBQVVNIIHRoZSBzYW1lIHBhdGg7IGEgbmV3IGVudHJ5IHdpbGwgbm90IGJlIGFkZGVkIHRvIHRoZSBoaXN0b3J5IHN0YWNrJykgOiB2b2lkIDA7XG4gICAgICAgIHNldFN0YXRlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCByZXBsYWNlIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdSRVBMQUNFJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBwYXRoID0gY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gICAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKGJhc2VuYW1lICsgcGF0aCk7XG4gICAgICB2YXIgaGFzaENoYW5nZWQgPSBnZXRIYXNoUGF0aCgpICE9PSBlbmNvZGVkUGF0aDtcblxuICAgICAgaWYgKGhhc2hDaGFuZ2VkKSB7XG4gICAgICAgIC8vIFdlIGNhbm5vdCB0ZWxsIGlmIGEgaGFzaGNoYW5nZSB3YXMgY2F1c2VkIGJ5IGEgUkVQTEFDRSwgc28gd2UnZFxuICAgICAgICAvLyByYXRoZXIgc2V0U3RhdGUgaGVyZSBhbmQgaWdub3JlIHRoZSBoYXNoY2hhbmdlLiBUaGUgY2F2ZWF0IGhlcmVcbiAgICAgICAgLy8gaXMgdGhhdCBvdGhlciBoYXNoIGhpc3RvcmllcyBpbiB0aGUgcGFnZSB3aWxsIGNvbnNpZGVyIGl0IGEgUE9QLlxuICAgICAgICBpZ25vcmVQYXRoID0gcGF0aDtcbiAgICAgICAgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgICAgIH1cblxuICAgICAgdmFyIHByZXZJbmRleCA9IGFsbFBhdGhzLmluZGV4T2YoY3JlYXRlUGF0aChoaXN0b3J5LmxvY2F0aW9uKSk7XG4gICAgICBpZiAocHJldkluZGV4ICE9PSAtMSkgYWxsUGF0aHNbcHJldkluZGV4XSA9IHBhdGg7XG4gICAgICBzZXRTdGF0ZSh7XG4gICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ28obikge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoY2FuR29XaXRob3V0UmVsb2FkLCAnSGFzaCBoaXN0b3J5IGdvKG4pIGNhdXNlcyBhIGZ1bGwgcGFnZSByZWxvYWQgaW4gdGhpcyBicm93c2VyJykgOiB2b2lkIDA7XG4gICAgZ2xvYmFsSGlzdG9yeS5nbyhuKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICBnbygtMSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgZ28oMSk7XG4gIH1cblxuICB2YXIgbGlzdGVuZXJDb3VudCA9IDA7XG5cbiAgZnVuY3Rpb24gY2hlY2tET01MaXN0ZW5lcnMoZGVsdGEpIHtcbiAgICBsaXN0ZW5lckNvdW50ICs9IGRlbHRhO1xuXG4gICAgaWYgKGxpc3RlbmVyQ291bnQgPT09IDEgJiYgZGVsdGEgPT09IDEpIHtcbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKEhhc2hDaGFuZ2VFdmVudCQxLCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9IGVsc2UgaWYgKGxpc3RlbmVyQ291bnQgPT09IDApIHtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKEhhc2hDaGFuZ2VFdmVudCQxLCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9XG4gIH1cblxuICB2YXIgaXNCbG9ja2VkID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gYmxvY2socHJvbXB0KSB7XG4gICAgaWYgKHByb21wdCA9PT0gdm9pZCAwKSB7XG4gICAgICBwcm9tcHQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICB2YXIgdW5ibG9jayA9IHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuXG4gICAgaWYgKCFpc0Jsb2NrZWQpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgICAgaXNCbG9ja2VkID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKGlzQmxvY2tlZCkge1xuICAgICAgICBpc0Jsb2NrZWQgPSBmYWxzZTtcbiAgICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdW5ibG9jaygpO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICB2YXIgdW5saXN0ZW4gPSB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIHVubGlzdGVuKCk7XG4gICAgfTtcbiAgfVxuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZ2xvYmFsSGlzdG9yeS5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogaW5pdGlhbExvY2F0aW9uLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcbiAgcmV0dXJuIGhpc3Rvcnk7XG59XG5cbmZ1bmN0aW9uIGNsYW1wKG4sIGxvd2VyQm91bmQsIHVwcGVyQm91bmQpIHtcbiAgcmV0dXJuIE1hdGgubWluKE1hdGgubWF4KG4sIGxvd2VyQm91bmQpLCB1cHBlckJvdW5kKTtcbn1cbi8qKlxuICogQ3JlYXRlcyBhIGhpc3Rvcnkgb2JqZWN0IHRoYXQgc3RvcmVzIGxvY2F0aW9ucyBpbiBtZW1vcnkuXG4gKi9cblxuXG5mdW5jdGlvbiBjcmVhdGVNZW1vcnlIaXN0b3J5KHByb3BzKSB7XG4gIGlmIChwcm9wcyA9PT0gdm9pZCAwKSB7XG4gICAgcHJvcHMgPSB7fTtcbiAgfVxuXG4gIHZhciBfcHJvcHMgPSBwcm9wcyxcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24gPSBfcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIF9wcm9wcyRpbml0aWFsRW50cmllcyA9IF9wcm9wcy5pbml0aWFsRW50cmllcyxcbiAgICAgIGluaXRpYWxFbnRyaWVzID0gX3Byb3BzJGluaXRpYWxFbnRyaWVzID09PSB2b2lkIDAgPyBbJy8nXSA6IF9wcm9wcyRpbml0aWFsRW50cmllcyxcbiAgICAgIF9wcm9wcyRpbml0aWFsSW5kZXggPSBfcHJvcHMuaW5pdGlhbEluZGV4LFxuICAgICAgaW5pdGlhbEluZGV4ID0gX3Byb3BzJGluaXRpYWxJbmRleCA9PT0gdm9pZCAwID8gMCA6IF9wcm9wcyRpbml0aWFsSW5kZXgsXG4gICAgICBfcHJvcHMka2V5TGVuZ3RoID0gX3Byb3BzLmtleUxlbmd0aCxcbiAgICAgIGtleUxlbmd0aCA9IF9wcm9wcyRrZXlMZW5ndGggPT09IHZvaWQgMCA/IDYgOiBfcHJvcHMka2V5TGVuZ3RoO1xuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGhpc3RvcnkuZW50cmllcy5sZW5ndGg7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUtleSgpIHtcbiAgICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIGtleUxlbmd0aCk7XG4gIH1cblxuICB2YXIgaW5kZXggPSBjbGFtcChpbml0aWFsSW5kZXgsIDAsIGluaXRpYWxFbnRyaWVzLmxlbmd0aCAtIDEpO1xuICB2YXIgZW50cmllcyA9IGluaXRpYWxFbnRyaWVzLm1hcChmdW5jdGlvbiAoZW50cnkpIHtcbiAgICByZXR1cm4gdHlwZW9mIGVudHJ5ID09PSAnc3RyaW5nJyA/IGNyZWF0ZUxvY2F0aW9uKGVudHJ5LCB1bmRlZmluZWQsIGNyZWF0ZUtleSgpKSA6IGNyZWF0ZUxvY2F0aW9uKGVudHJ5LCB1bmRlZmluZWQsIGVudHJ5LmtleSB8fCBjcmVhdGVLZXkoKSk7XG4gIH0pOyAvLyBQdWJsaWMgaW50ZXJmYWNlXG5cbiAgdmFyIGNyZWF0ZUhyZWYgPSBjcmVhdGVQYXRoO1xuXG4gIGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHB1c2ggd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgcHJldkluZGV4ID0gaGlzdG9yeS5pbmRleDtcbiAgICAgIHZhciBuZXh0SW5kZXggPSBwcmV2SW5kZXggKyAxO1xuICAgICAgdmFyIG5leHRFbnRyaWVzID0gaGlzdG9yeS5lbnRyaWVzLnNsaWNlKDApO1xuXG4gICAgICBpZiAobmV4dEVudHJpZXMubGVuZ3RoID4gbmV4dEluZGV4KSB7XG4gICAgICAgIG5leHRFbnRyaWVzLnNwbGljZShuZXh0SW5kZXgsIG5leHRFbnRyaWVzLmxlbmd0aCAtIG5leHRJbmRleCwgbG9jYXRpb24pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbmV4dEVudHJpZXMucHVzaChsb2NhdGlvbik7XG4gICAgICB9XG5cbiAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgaW5kZXg6IG5leHRJbmRleCxcbiAgICAgICAgZW50cmllczogbmV4dEVudHJpZXNcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcmVwbGFjZSB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1JFUExBQ0UnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIGhpc3RvcnkuZW50cmllc1toaXN0b3J5LmluZGV4XSA9IGxvY2F0aW9uO1xuICAgICAgc2V0U3RhdGUoe1xuICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvKG4pIHtcbiAgICB2YXIgbmV4dEluZGV4ID0gY2xhbXAoaGlzdG9yeS5pbmRleCArIG4sIDAsIGhpc3RvcnkuZW50cmllcy5sZW5ndGggLSAxKTtcbiAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XG4gICAgdmFyIGxvY2F0aW9uID0gaGlzdG9yeS5lbnRyaWVzW25leHRJbmRleF07XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmIChvaykge1xuICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICAgIGluZGV4OiBuZXh0SW5kZXhcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBNaW1pYyB0aGUgYmVoYXZpb3Igb2YgRE9NIGhpc3RvcmllcyBieVxuICAgICAgICAvLyBjYXVzaW5nIGEgcmVuZGVyIGFmdGVyIGEgY2FuY2VsbGVkIFBPUC5cbiAgICAgICAgc2V0U3RhdGUoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICBnbygtMSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgZ28oMSk7XG4gIH1cblxuICBmdW5jdGlvbiBjYW5HbyhuKSB7XG4gICAgdmFyIG5leHRJbmRleCA9IGhpc3RvcnkuaW5kZXggKyBuO1xuICAgIHJldHVybiBuZXh0SW5kZXggPj0gMCAmJiBuZXh0SW5kZXggPCBoaXN0b3J5LmVudHJpZXMubGVuZ3RoO1xuICB9XG5cbiAgZnVuY3Rpb24gYmxvY2socHJvbXB0KSB7XG4gICAgaWYgKHByb21wdCA9PT0gdm9pZCAwKSB7XG4gICAgICBwcm9tcHQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICByZXR1cm4gdHJhbnNpdGlvbk1hbmFnZXIuc2V0UHJvbXB0KHByb21wdCk7XG4gIH1cblxuICBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICByZXR1cm4gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xuICB9XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgbGVuZ3RoOiBlbnRyaWVzLmxlbmd0aCxcbiAgICBhY3Rpb246ICdQT1AnLFxuICAgIGxvY2F0aW9uOiBlbnRyaWVzW2luZGV4XSxcbiAgICBpbmRleDogaW5kZXgsXG4gICAgZW50cmllczogZW50cmllcyxcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgZ29CYWNrOiBnb0JhY2ssXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXG4gICAgY2FuR286IGNhbkdvLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuICByZXR1cm4gaGlzdG9yeTtcbn1cblxuZXhwb3J0IHsgY3JlYXRlQnJvd3Nlckhpc3RvcnksIGNyZWF0ZUhhc2hIaXN0b3J5LCBjcmVhdGVNZW1vcnlIaXN0b3J5LCBjcmVhdGVMb2NhdGlvbiwgbG9jYXRpb25zQXJlRXF1YWwsIHBhcnNlUGF0aCwgY3JlYXRlUGF0aCB9O1xuIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBfaW5oZXJpdHNMb29zZSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgd2FybmluZyBmcm9tICd0aW55LXdhcm5pbmcnO1xuXG52YXIgTUFYX1NJR05FRF8zMV9CSVRfSU5UID0gMTA3Mzc0MTgyMztcbnZhciBjb21tb25qc0dsb2JhbCA9IHR5cGVvZiBnbG9iYWxUaGlzICE9PSAndW5kZWZpbmVkJyA/IGdsb2JhbFRoaXMgOiB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyA/IHdpbmRvdyA6IHR5cGVvZiBnbG9iYWwgIT09ICd1bmRlZmluZWQnID8gZ2xvYmFsIDoge307XG5cbmZ1bmN0aW9uIGdldFVuaXF1ZUlkKCkge1xuICB2YXIga2V5ID0gJ19fZ2xvYmFsX3VuaXF1ZV9pZF9fJztcbiAgcmV0dXJuIGNvbW1vbmpzR2xvYmFsW2tleV0gPSAoY29tbW9uanNHbG9iYWxba2V5XSB8fCAwKSArIDE7XG59XG5cbmZ1bmN0aW9uIG9iamVjdElzKHgsIHkpIHtcbiAgaWYgKHggPT09IHkpIHtcbiAgICByZXR1cm4geCAhPT0gMCB8fCAxIC8geCA9PT0gMSAvIHk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHggIT09IHggJiYgeSAhPT0geTtcbiAgfVxufVxuXG5mdW5jdGlvbiBjcmVhdGVFdmVudEVtaXR0ZXIodmFsdWUpIHtcbiAgdmFyIGhhbmRsZXJzID0gW107XG4gIHJldHVybiB7XG4gICAgb246IGZ1bmN0aW9uIG9uKGhhbmRsZXIpIHtcbiAgICAgIGhhbmRsZXJzLnB1c2goaGFuZGxlcik7XG4gICAgfSxcbiAgICBvZmY6IGZ1bmN0aW9uIG9mZihoYW5kbGVyKSB7XG4gICAgICBoYW5kbGVycyA9IGhhbmRsZXJzLmZpbHRlcihmdW5jdGlvbiAoaCkge1xuICAgICAgICByZXR1cm4gaCAhPT0gaGFuZGxlcjtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gdmFsdWU7XG4gICAgfSxcbiAgICBzZXQ6IGZ1bmN0aW9uIHNldChuZXdWYWx1ZSwgY2hhbmdlZEJpdHMpIHtcbiAgICAgIHZhbHVlID0gbmV3VmFsdWU7XG4gICAgICBoYW5kbGVycy5mb3JFYWNoKGZ1bmN0aW9uIChoYW5kbGVyKSB7XG4gICAgICAgIHJldHVybiBoYW5kbGVyKHZhbHVlLCBjaGFuZ2VkQml0cyk7XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG59XG5cbmZ1bmN0aW9uIG9ubHlDaGlsZChjaGlsZHJlbikge1xuICByZXR1cm4gQXJyYXkuaXNBcnJheShjaGlsZHJlbikgPyBjaGlsZHJlblswXSA6IGNoaWxkcmVuO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVSZWFjdENvbnRleHQoZGVmYXVsdFZhbHVlLCBjYWxjdWxhdGVDaGFuZ2VkQml0cykge1xuICB2YXIgX1Byb3ZpZGVyJGNoaWxkQ29udGV4LCBfQ29uc3VtZXIkY29udGV4dFR5cGU7XG5cbiAgdmFyIGNvbnRleHRQcm9wID0gJ19fY3JlYXRlLXJlYWN0LWNvbnRleHQtJyArIGdldFVuaXF1ZUlkKCkgKyAnX18nO1xuXG4gIHZhciBQcm92aWRlciA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX0NvbXBvbmVudCkge1xuICAgIF9pbmhlcml0c0xvb3NlKFByb3ZpZGVyLCBfQ29tcG9uZW50KTtcblxuICAgIGZ1bmN0aW9uIFByb3ZpZGVyKCkge1xuICAgICAgdmFyIF90aGlzO1xuXG4gICAgICBfdGhpcyA9IF9Db21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgICAgX3RoaXMuZW1pdHRlciA9IGNyZWF0ZUV2ZW50RW1pdHRlcihfdGhpcy5wcm9wcy52YWx1ZSk7XG4gICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuXG4gICAgdmFyIF9wcm90byA9IFByb3ZpZGVyLnByb3RvdHlwZTtcblxuICAgIF9wcm90by5nZXRDaGlsZENvbnRleHQgPSBmdW5jdGlvbiBnZXRDaGlsZENvbnRleHQoKSB7XG4gICAgICB2YXIgX3JlZjtcblxuICAgICAgcmV0dXJuIF9yZWYgPSB7fSwgX3JlZltjb250ZXh0UHJvcF0gPSB0aGlzLmVtaXR0ZXIsIF9yZWY7XG4gICAgfTtcblxuICAgIF9wcm90by5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICAgIGlmICh0aGlzLnByb3BzLnZhbHVlICE9PSBuZXh0UHJvcHMudmFsdWUpIHtcbiAgICAgICAgdmFyIG9sZFZhbHVlID0gdGhpcy5wcm9wcy52YWx1ZTtcbiAgICAgICAgdmFyIG5ld1ZhbHVlID0gbmV4dFByb3BzLnZhbHVlO1xuICAgICAgICB2YXIgY2hhbmdlZEJpdHM7XG5cbiAgICAgICAgaWYgKG9iamVjdElzKG9sZFZhbHVlLCBuZXdWYWx1ZSkpIHtcbiAgICAgICAgICBjaGFuZ2VkQml0cyA9IDA7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY2hhbmdlZEJpdHMgPSB0eXBlb2YgY2FsY3VsYXRlQ2hhbmdlZEJpdHMgPT09ICdmdW5jdGlvbicgPyBjYWxjdWxhdGVDaGFuZ2VkQml0cyhvbGRWYWx1ZSwgbmV3VmFsdWUpIDogTUFYX1NJR05FRF8zMV9CSVRfSU5UO1xuXG4gICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICAgIHdhcm5pbmcoKGNoYW5nZWRCaXRzICYgTUFYX1NJR05FRF8zMV9CSVRfSU5UKSA9PT0gY2hhbmdlZEJpdHMsICdjYWxjdWxhdGVDaGFuZ2VkQml0czogRXhwZWN0ZWQgdGhlIHJldHVybiB2YWx1ZSB0byBiZSBhICcgKyAnMzEtYml0IGludGVnZXIuIEluc3RlYWQgcmVjZWl2ZWQ6ICcgKyBjaGFuZ2VkQml0cyk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY2hhbmdlZEJpdHMgfD0gMDtcblxuICAgICAgICAgIGlmIChjaGFuZ2VkQml0cyAhPT0gMCkge1xuICAgICAgICAgICAgdGhpcy5lbWl0dGVyLnNldChuZXh0UHJvcHMudmFsdWUsIGNoYW5nZWRCaXRzKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHJldHVybiB0aGlzLnByb3BzLmNoaWxkcmVuO1xuICAgIH07XG5cbiAgICByZXR1cm4gUHJvdmlkZXI7XG4gIH0oQ29tcG9uZW50KTtcblxuICBQcm92aWRlci5jaGlsZENvbnRleHRUeXBlcyA9IChfUHJvdmlkZXIkY2hpbGRDb250ZXggPSB7fSwgX1Byb3ZpZGVyJGNoaWxkQ29udGV4W2NvbnRleHRQcm9wXSA9IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCwgX1Byb3ZpZGVyJGNoaWxkQ29udGV4KTtcblxuICB2YXIgQ29uc3VtZXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9Db21wb25lbnQyKSB7XG4gICAgX2luaGVyaXRzTG9vc2UoQ29uc3VtZXIsIF9Db21wb25lbnQyKTtcblxuICAgIGZ1bmN0aW9uIENvbnN1bWVyKCkge1xuICAgICAgdmFyIF90aGlzMjtcblxuICAgICAgX3RoaXMyID0gX0NvbXBvbmVudDIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgICAgX3RoaXMyLnN0YXRlID0ge1xuICAgICAgICB2YWx1ZTogX3RoaXMyLmdldFZhbHVlKClcbiAgICAgIH07XG5cbiAgICAgIF90aGlzMi5vblVwZGF0ZSA9IGZ1bmN0aW9uIChuZXdWYWx1ZSwgY2hhbmdlZEJpdHMpIHtcbiAgICAgICAgdmFyIG9ic2VydmVkQml0cyA9IF90aGlzMi5vYnNlcnZlZEJpdHMgfCAwO1xuXG4gICAgICAgIGlmICgob2JzZXJ2ZWRCaXRzICYgY2hhbmdlZEJpdHMpICE9PSAwKSB7XG4gICAgICAgICAgX3RoaXMyLnNldFN0YXRlKHtcbiAgICAgICAgICAgIHZhbHVlOiBfdGhpczIuZ2V0VmFsdWUoKVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICByZXR1cm4gX3RoaXMyO1xuICAgIH1cblxuICAgIHZhciBfcHJvdG8yID0gQ29uc3VtZXIucHJvdG90eXBlO1xuXG4gICAgX3Byb3RvMi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICAgIHZhciBvYnNlcnZlZEJpdHMgPSBuZXh0UHJvcHMub2JzZXJ2ZWRCaXRzO1xuICAgICAgdGhpcy5vYnNlcnZlZEJpdHMgPSBvYnNlcnZlZEJpdHMgPT09IHVuZGVmaW5lZCB8fCBvYnNlcnZlZEJpdHMgPT09IG51bGwgPyBNQVhfU0lHTkVEXzMxX0JJVF9JTlQgOiBvYnNlcnZlZEJpdHM7XG4gICAgfTtcblxuICAgIF9wcm90bzIuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgIGlmICh0aGlzLmNvbnRleHRbY29udGV4dFByb3BdKSB7XG4gICAgICAgIHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0ub24odGhpcy5vblVwZGF0ZSk7XG4gICAgICB9XG5cbiAgICAgIHZhciBvYnNlcnZlZEJpdHMgPSB0aGlzLnByb3BzLm9ic2VydmVkQml0cztcbiAgICAgIHRoaXMub2JzZXJ2ZWRCaXRzID0gb2JzZXJ2ZWRCaXRzID09PSB1bmRlZmluZWQgfHwgb2JzZXJ2ZWRCaXRzID09PSBudWxsID8gTUFYX1NJR05FRF8zMV9CSVRfSU5UIDogb2JzZXJ2ZWRCaXRzO1xuICAgIH07XG5cbiAgICBfcHJvdG8yLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgICBpZiAodGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXSkge1xuICAgICAgICB0aGlzLmNvbnRleHRbY29udGV4dFByb3BdLm9mZih0aGlzLm9uVXBkYXRlKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3Byb3RvMi5nZXRWYWx1ZSA9IGZ1bmN0aW9uIGdldFZhbHVlKCkge1xuICAgICAgaWYgKHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0pIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0uZ2V0KCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gZGVmYXVsdFZhbHVlO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBfcHJvdG8yLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHJldHVybiBvbmx5Q2hpbGQodGhpcy5wcm9wcy5jaGlsZHJlbikodGhpcy5zdGF0ZS52YWx1ZSk7XG4gICAgfTtcblxuICAgIHJldHVybiBDb25zdW1lcjtcbiAgfShDb21wb25lbnQpO1xuXG4gIENvbnN1bWVyLmNvbnRleHRUeXBlcyA9IChfQ29uc3VtZXIkY29udGV4dFR5cGUgPSB7fSwgX0NvbnN1bWVyJGNvbnRleHRUeXBlW2NvbnRleHRQcm9wXSA9IFByb3BUeXBlcy5vYmplY3QsIF9Db25zdW1lciRjb250ZXh0VHlwZSk7XG4gIHJldHVybiB7XG4gICAgUHJvdmlkZXI6IFByb3ZpZGVyLFxuICAgIENvbnN1bWVyOiBDb25zdW1lclxuICB9O1xufVxuXG52YXIgaW5kZXggPSBSZWFjdC5jcmVhdGVDb250ZXh0IHx8IGNyZWF0ZVJlYWN0Q29udGV4dDtcblxuZXhwb3J0IGRlZmF1bHQgaW5kZXg7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKSB7XG4gIGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9O1xuICB2YXIgdGFyZ2V0ID0ge307XG4gIHZhciBzb3VyY2VLZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTtcbiAgdmFyIGtleSwgaTtcblxuICBmb3IgKGkgPSAwOyBpIDwgc291cmNlS2V5cy5sZW5ndGg7IGkrKykge1xuICAgIGtleSA9IHNvdXJjZUtleXNbaV07XG4gICAgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTtcbiAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn0iLCJpbXBvcnQgX2luaGVyaXRzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZSc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IGNyZWF0ZU1lbW9yeUhpc3RvcnksIGNyZWF0ZUxvY2F0aW9uLCBsb2NhdGlvbnNBcmVFcXVhbCwgY3JlYXRlUGF0aCB9IGZyb20gJ2hpc3RvcnknO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSAndGlueS13YXJuaW5nJztcbmltcG9ydCBjcmVhdGVDb250ZXh0IGZyb20gJ21pbmktY3JlYXRlLXJlYWN0LWNvbnRleHQnO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICd0aW55LWludmFyaWFudCc7XG5pbXBvcnQgX2V4dGVuZHMgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyc7XG5pbXBvcnQgcGF0aFRvUmVnZXhwIGZyb20gJ3BhdGgtdG8tcmVnZXhwJztcbmltcG9ydCB7IGlzVmFsaWRFbGVtZW50VHlwZSB9IGZyb20gJ3JlYWN0LWlzJztcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlJztcbmltcG9ydCBob2lzdFN0YXRpY3MgZnJvbSAnaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MnO1xuXG4vLyBUT0RPOiBSZXBsYWNlIHdpdGggUmVhY3QuY3JlYXRlQ29udGV4dCBvbmNlIHdlIGNhbiBhc3N1bWUgUmVhY3QgMTYrXG5cbnZhciBjcmVhdGVOYW1lZENvbnRleHQgPSBmdW5jdGlvbiBjcmVhdGVOYW1lZENvbnRleHQobmFtZSkge1xuICB2YXIgY29udGV4dCA9IGNyZWF0ZUNvbnRleHQoKTtcbiAgY29udGV4dC5kaXNwbGF5TmFtZSA9IG5hbWU7XG4gIHJldHVybiBjb250ZXh0O1xufTtcblxudmFyIGhpc3RvcnlDb250ZXh0ID1cbi8qI19fUFVSRV9fKi9cbmNyZWF0ZU5hbWVkQ29udGV4dChcIlJvdXRlci1IaXN0b3J5XCIpO1xuXG4vLyBUT0RPOiBSZXBsYWNlIHdpdGggUmVhY3QuY3JlYXRlQ29udGV4dCBvbmNlIHdlIGNhbiBhc3N1bWUgUmVhY3QgMTYrXG5cbnZhciBjcmVhdGVOYW1lZENvbnRleHQkMSA9IGZ1bmN0aW9uIGNyZWF0ZU5hbWVkQ29udGV4dChuYW1lKSB7XG4gIHZhciBjb250ZXh0ID0gY3JlYXRlQ29udGV4dCgpO1xuICBjb250ZXh0LmRpc3BsYXlOYW1lID0gbmFtZTtcbiAgcmV0dXJuIGNvbnRleHQ7XG59O1xuXG52YXIgY29udGV4dCA9XG4vKiNfX1BVUkVfXyovXG5jcmVhdGVOYW1lZENvbnRleHQkMShcIlJvdXRlclwiKTtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcHV0dGluZyBoaXN0b3J5IG9uIGNvbnRleHQuXG4gKi9cblxudmFyIFJvdXRlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIFJvdXRlci5jb21wdXRlUm9vdE1hdGNoID0gZnVuY3Rpb24gY29tcHV0ZVJvb3RNYXRjaChwYXRobmFtZSkge1xuICAgIHJldHVybiB7XG4gICAgICBwYXRoOiBcIi9cIixcbiAgICAgIHVybDogXCIvXCIsXG4gICAgICBwYXJhbXM6IHt9LFxuICAgICAgaXNFeGFjdDogcGF0aG5hbWUgPT09IFwiL1wiXG4gICAgfTtcbiAgfTtcblxuICBmdW5jdGlvbiBSb3V0ZXIocHJvcHMpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbCh0aGlzLCBwcm9wcykgfHwgdGhpcztcbiAgICBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGxvY2F0aW9uOiBwcm9wcy5oaXN0b3J5LmxvY2F0aW9uXG4gICAgfTsgLy8gVGhpcyBpcyBhIGJpdCBvZiBhIGhhY2suIFdlIGhhdmUgdG8gc3RhcnQgbGlzdGVuaW5nIGZvciBsb2NhdGlvblxuICAgIC8vIGNoYW5nZXMgaGVyZSBpbiB0aGUgY29uc3RydWN0b3IgaW4gY2FzZSB0aGVyZSBhcmUgYW55IDxSZWRpcmVjdD5zXG4gICAgLy8gb24gdGhlIGluaXRpYWwgcmVuZGVyLiBJZiB0aGVyZSBhcmUsIHRoZXkgd2lsbCByZXBsYWNlL3B1c2ggd2hlblxuICAgIC8vIHRoZXkgbW91bnQgYW5kIHNpbmNlIGNETSBmaXJlcyBpbiBjaGlsZHJlbiBiZWZvcmUgcGFyZW50cywgd2UgbWF5XG4gICAgLy8gZ2V0IGEgbmV3IGxvY2F0aW9uIGJlZm9yZSB0aGUgPFJvdXRlcj4gaXMgbW91bnRlZC5cblxuICAgIF90aGlzLl9pc01vdW50ZWQgPSBmYWxzZTtcbiAgICBfdGhpcy5fcGVuZGluZ0xvY2F0aW9uID0gbnVsbDtcblxuICAgIGlmICghcHJvcHMuc3RhdGljQ29udGV4dCkge1xuICAgICAgX3RoaXMudW5saXN0ZW4gPSBwcm9wcy5oaXN0b3J5Lmxpc3RlbihmdW5jdGlvbiAobG9jYXRpb24pIHtcbiAgICAgICAgaWYgKF90aGlzLl9pc01vdW50ZWQpIHtcbiAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBfdGhpcy5fcGVuZGluZ0xvY2F0aW9uID0gbG9jYXRpb247XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBSb3V0ZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIHRoaXMuX2lzTW91bnRlZCA9IHRydWU7XG5cbiAgICBpZiAodGhpcy5fcGVuZGluZ0xvY2F0aW9uKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgbG9jYXRpb246IHRoaXMuX3BlbmRpbmdMb2NhdGlvblxuICAgICAgfSk7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIGlmICh0aGlzLnVubGlzdGVuKSB0aGlzLnVubGlzdGVuKCk7XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgICB2YWx1ZToge1xuICAgICAgICBoaXN0b3J5OiB0aGlzLnByb3BzLmhpc3RvcnksXG4gICAgICAgIGxvY2F0aW9uOiB0aGlzLnN0YXRlLmxvY2F0aW9uLFxuICAgICAgICBtYXRjaDogUm91dGVyLmNvbXB1dGVSb290TWF0Y2godGhpcy5zdGF0ZS5sb2NhdGlvbi5wYXRobmFtZSksXG4gICAgICAgIHN0YXRpY0NvbnRleHQ6IHRoaXMucHJvcHMuc3RhdGljQ29udGV4dFxuICAgICAgfVxuICAgIH0sIFJlYWN0LmNyZWF0ZUVsZW1lbnQoaGlzdG9yeUNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICAgIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuIHx8IG51bGwsXG4gICAgICB2YWx1ZTogdGhpcy5wcm9wcy5oaXN0b3J5XG4gICAgfSkpO1xuICB9O1xuXG4gIHJldHVybiBSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgaGlzdG9yeTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICAgIHN0YXRpY0NvbnRleHQ6IFByb3BUeXBlcy5vYmplY3RcbiAgfTtcblxuICBSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIChwcmV2UHJvcHMpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHByZXZQcm9wcy5oaXN0b3J5ID09PSB0aGlzLnByb3BzLmhpc3RvcnksIFwiWW91IGNhbm5vdCBjaGFuZ2UgPFJvdXRlciBoaXN0b3J5PlwiKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgYSA8Um91dGVyPiB0aGF0IHN0b3JlcyBsb2NhdGlvbiBpbiBtZW1vcnkuXG4gKi9cblxudmFyIE1lbW9yeVJvdXRlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShNZW1vcnlSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIE1lbW9yeVJvdXRlcigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcbiAgICBfdGhpcy5oaXN0b3J5ID0gY3JlYXRlTWVtb3J5SGlzdG9yeShfdGhpcy5wcm9wcyk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IE1lbW9yeVJvdXRlci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIHtcbiAgICAgIGhpc3Rvcnk6IHRoaXMuaGlzdG9yeSxcbiAgICAgIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuXG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIE1lbW9yeVJvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBNZW1vcnlSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGluaXRpYWxFbnRyaWVzOiBQcm9wVHlwZXMuYXJyYXksXG4gICAgaW5pdGlhbEluZGV4OiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIGdldFVzZXJDb25maXJtYXRpb246IFByb3BUeXBlcy5mdW5jLFxuICAgIGtleUxlbmd0aDogUHJvcFR5cGVzLm51bWJlcixcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGVcbiAgfTtcblxuICBNZW1vcnlSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIXRoaXMucHJvcHMuaGlzdG9yeSwgXCI8TWVtb3J5Um91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgTWVtb3J5Um91dGVyIGFzIFJvdXRlciB9YC5cIikgOiB2b2lkIDA7XG4gIH07XG59XG5cbnZhciBMaWZlY3ljbGUgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoTGlmZWN5Y2xlLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBMaWZlY3ljbGUoKSB7XG4gICAgcmV0dXJuIF9SZWFjdCRDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IExpZmVjeWNsZS5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgaWYgKHRoaXMucHJvcHMub25Nb3VudCkgdGhpcy5wcm9wcy5vbk1vdW50LmNhbGwodGhpcywgdGhpcyk7XG4gIH07XG5cbiAgX3Byb3RvLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZFVwZGF0ZShwcmV2UHJvcHMpIHtcbiAgICBpZiAodGhpcy5wcm9wcy5vblVwZGF0ZSkgdGhpcy5wcm9wcy5vblVwZGF0ZS5jYWxsKHRoaXMsIHRoaXMsIHByZXZQcm9wcyk7XG4gIH07XG5cbiAgX3Byb3RvLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgaWYgKHRoaXMucHJvcHMub25Vbm1vdW50KSB0aGlzLnByb3BzLm9uVW5tb3VudC5jYWxsKHRoaXMsIHRoaXMpO1xuICB9O1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH07XG5cbiAgcmV0dXJuIExpZmVjeWNsZTtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcHJvbXB0aW5nIHRoZSB1c2VyIGJlZm9yZSBuYXZpZ2F0aW5nIGF3YXkgZnJvbSBhIHNjcmVlbi5cbiAqL1xuXG5mdW5jdGlvbiBQcm9tcHQoX3JlZikge1xuICB2YXIgbWVzc2FnZSA9IF9yZWYubWVzc2FnZSxcbiAgICAgIF9yZWYkd2hlbiA9IF9yZWYud2hlbixcbiAgICAgIHdoZW4gPSBfcmVmJHdoZW4gPT09IHZvaWQgMCA/IHRydWUgOiBfcmVmJHdoZW47XG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgIWNvbnRleHQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxQcm9tcHQ+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgaWYgKCF3aGVuIHx8IGNvbnRleHQuc3RhdGljQ29udGV4dCkgcmV0dXJuIG51bGw7XG4gICAgdmFyIG1ldGhvZCA9IGNvbnRleHQuaGlzdG9yeS5ibG9jaztcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChMaWZlY3ljbGUsIHtcbiAgICAgIG9uTW91bnQ6IGZ1bmN0aW9uIG9uTW91bnQoc2VsZikge1xuICAgICAgICBzZWxmLnJlbGVhc2UgPSBtZXRob2QobWVzc2FnZSk7XG4gICAgICB9LFxuICAgICAgb25VcGRhdGU6IGZ1bmN0aW9uIG9uVXBkYXRlKHNlbGYsIHByZXZQcm9wcykge1xuICAgICAgICBpZiAocHJldlByb3BzLm1lc3NhZ2UgIT09IG1lc3NhZ2UpIHtcbiAgICAgICAgICBzZWxmLnJlbGVhc2UoKTtcbiAgICAgICAgICBzZWxmLnJlbGVhc2UgPSBtZXRob2QobWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBvblVubW91bnQ6IGZ1bmN0aW9uIG9uVW5tb3VudChzZWxmKSB7XG4gICAgICAgIHNlbGYucmVsZWFzZSgpO1xuICAgICAgfSxcbiAgICAgIG1lc3NhZ2U6IG1lc3NhZ2VcbiAgICB9KTtcbiAgfSk7XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgdmFyIG1lc3NhZ2VUeXBlID0gUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5zdHJpbmddKTtcbiAgUHJvbXB0LnByb3BUeXBlcyA9IHtcbiAgICB3aGVuOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBtZXNzYWdlOiBtZXNzYWdlVHlwZS5pc1JlcXVpcmVkXG4gIH07XG59XG5cbnZhciBjYWNoZSA9IHt9O1xudmFyIGNhY2hlTGltaXQgPSAxMDAwMDtcbnZhciBjYWNoZUNvdW50ID0gMDtcblxuZnVuY3Rpb24gY29tcGlsZVBhdGgocGF0aCkge1xuICBpZiAoY2FjaGVbcGF0aF0pIHJldHVybiBjYWNoZVtwYXRoXTtcbiAgdmFyIGdlbmVyYXRvciA9IHBhdGhUb1JlZ2V4cC5jb21waWxlKHBhdGgpO1xuXG4gIGlmIChjYWNoZUNvdW50IDwgY2FjaGVMaW1pdCkge1xuICAgIGNhY2hlW3BhdGhdID0gZ2VuZXJhdG9yO1xuICAgIGNhY2hlQ291bnQrKztcbiAgfVxuXG4gIHJldHVybiBnZW5lcmF0b3I7XG59XG4vKipcbiAqIFB1YmxpYyBBUEkgZm9yIGdlbmVyYXRpbmcgYSBVUkwgcGF0aG5hbWUgZnJvbSBhIHBhdGggYW5kIHBhcmFtZXRlcnMuXG4gKi9cblxuXG5mdW5jdGlvbiBnZW5lcmF0ZVBhdGgocGF0aCwgcGFyYW1zKSB7XG4gIGlmIChwYXRoID09PSB2b2lkIDApIHtcbiAgICBwYXRoID0gXCIvXCI7XG4gIH1cblxuICBpZiAocGFyYW1zID09PSB2b2lkIDApIHtcbiAgICBwYXJhbXMgPSB7fTtcbiAgfVxuXG4gIHJldHVybiBwYXRoID09PSBcIi9cIiA/IHBhdGggOiBjb21waWxlUGF0aChwYXRoKShwYXJhbXMsIHtcbiAgICBwcmV0dHk6IHRydWVcbiAgfSk7XG59XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIG5hdmlnYXRpbmcgcHJvZ3JhbW1hdGljYWxseSB3aXRoIGEgY29tcG9uZW50LlxuICovXG5cbmZ1bmN0aW9uIFJlZGlyZWN0KF9yZWYpIHtcbiAgdmFyIGNvbXB1dGVkTWF0Y2ggPSBfcmVmLmNvbXB1dGVkTWF0Y2gsXG4gICAgICB0byA9IF9yZWYudG8sXG4gICAgICBfcmVmJHB1c2ggPSBfcmVmLnB1c2gsXG4gICAgICBwdXNoID0gX3JlZiRwdXNoID09PSB2b2lkIDAgPyBmYWxzZSA6IF9yZWYkcHVzaDtcbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJlZGlyZWN0PiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIHZhciBoaXN0b3J5ID0gY29udGV4dC5oaXN0b3J5LFxuICAgICAgICBzdGF0aWNDb250ZXh0ID0gY29udGV4dC5zdGF0aWNDb250ZXh0O1xuICAgIHZhciBtZXRob2QgPSBwdXNoID8gaGlzdG9yeS5wdXNoIDogaGlzdG9yeS5yZXBsYWNlO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKGNvbXB1dGVkTWF0Y2ggPyB0eXBlb2YgdG8gPT09IFwic3RyaW5nXCIgPyBnZW5lcmF0ZVBhdGgodG8sIGNvbXB1dGVkTWF0Y2gucGFyYW1zKSA6IF9leHRlbmRzKHt9LCB0bywge1xuICAgICAgcGF0aG5hbWU6IGdlbmVyYXRlUGF0aCh0by5wYXRobmFtZSwgY29tcHV0ZWRNYXRjaC5wYXJhbXMpXG4gICAgfSkgOiB0byk7IC8vIFdoZW4gcmVuZGVyaW5nIGluIGEgc3RhdGljIGNvbnRleHQsXG4gICAgLy8gc2V0IHRoZSBuZXcgbG9jYXRpb24gaW1tZWRpYXRlbHkuXG5cbiAgICBpZiAoc3RhdGljQ29udGV4dCkge1xuICAgICAgbWV0aG9kKGxvY2F0aW9uKTtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KExpZmVjeWNsZSwge1xuICAgICAgb25Nb3VudDogZnVuY3Rpb24gb25Nb3VudCgpIHtcbiAgICAgICAgbWV0aG9kKGxvY2F0aW9uKTtcbiAgICAgIH0sXG4gICAgICBvblVwZGF0ZTogZnVuY3Rpb24gb25VcGRhdGUoc2VsZiwgcHJldlByb3BzKSB7XG4gICAgICAgIHZhciBwcmV2TG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwcmV2UHJvcHMudG8pO1xuXG4gICAgICAgIGlmICghbG9jYXRpb25zQXJlRXF1YWwocHJldkxvY2F0aW9uLCBfZXh0ZW5kcyh7fSwgbG9jYXRpb24sIHtcbiAgICAgICAgICBrZXk6IHByZXZMb2NhdGlvbi5rZXlcbiAgICAgICAgfSkpKSB7XG4gICAgICAgICAgbWV0aG9kKGxvY2F0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHRvOiB0b1xuICAgIH0pO1xuICB9KTtcbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBSZWRpcmVjdC5wcm9wVHlwZXMgPSB7XG4gICAgcHVzaDogUHJvcFR5cGVzLmJvb2wsXG4gICAgZnJvbTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICB0bzogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm9iamVjdF0pLmlzUmVxdWlyZWRcbiAgfTtcbn1cblxudmFyIGNhY2hlJDEgPSB7fTtcbnZhciBjYWNoZUxpbWl0JDEgPSAxMDAwMDtcbnZhciBjYWNoZUNvdW50JDEgPSAwO1xuXG5mdW5jdGlvbiBjb21waWxlUGF0aCQxKHBhdGgsIG9wdGlvbnMpIHtcbiAgdmFyIGNhY2hlS2V5ID0gXCJcIiArIG9wdGlvbnMuZW5kICsgb3B0aW9ucy5zdHJpY3QgKyBvcHRpb25zLnNlbnNpdGl2ZTtcbiAgdmFyIHBhdGhDYWNoZSA9IGNhY2hlJDFbY2FjaGVLZXldIHx8IChjYWNoZSQxW2NhY2hlS2V5XSA9IHt9KTtcbiAgaWYgKHBhdGhDYWNoZVtwYXRoXSkgcmV0dXJuIHBhdGhDYWNoZVtwYXRoXTtcbiAgdmFyIGtleXMgPSBbXTtcbiAgdmFyIHJlZ2V4cCA9IHBhdGhUb1JlZ2V4cChwYXRoLCBrZXlzLCBvcHRpb25zKTtcbiAgdmFyIHJlc3VsdCA9IHtcbiAgICByZWdleHA6IHJlZ2V4cCxcbiAgICBrZXlzOiBrZXlzXG4gIH07XG5cbiAgaWYgKGNhY2hlQ291bnQkMSA8IGNhY2hlTGltaXQkMSkge1xuICAgIHBhdGhDYWNoZVtwYXRoXSA9IHJlc3VsdDtcbiAgICBjYWNoZUNvdW50JDErKztcbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG4vKipcbiAqIFB1YmxpYyBBUEkgZm9yIG1hdGNoaW5nIGEgVVJMIHBhdGhuYW1lIHRvIGEgcGF0aC5cbiAqL1xuXG5cbmZ1bmN0aW9uIG1hdGNoUGF0aChwYXRobmFtZSwgb3B0aW9ucykge1xuICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG5cbiAgaWYgKHR5cGVvZiBvcHRpb25zID09PSBcInN0cmluZ1wiIHx8IEFycmF5LmlzQXJyYXkob3B0aW9ucykpIHtcbiAgICBvcHRpb25zID0ge1xuICAgICAgcGF0aDogb3B0aW9uc1xuICAgIH07XG4gIH1cblxuICB2YXIgX29wdGlvbnMgPSBvcHRpb25zLFxuICAgICAgcGF0aCA9IF9vcHRpb25zLnBhdGgsXG4gICAgICBfb3B0aW9ucyRleGFjdCA9IF9vcHRpb25zLmV4YWN0LFxuICAgICAgZXhhY3QgPSBfb3B0aW9ucyRleGFjdCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfb3B0aW9ucyRleGFjdCxcbiAgICAgIF9vcHRpb25zJHN0cmljdCA9IF9vcHRpb25zLnN0cmljdCxcbiAgICAgIHN0cmljdCA9IF9vcHRpb25zJHN0cmljdCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfb3B0aW9ucyRzdHJpY3QsXG4gICAgICBfb3B0aW9ucyRzZW5zaXRpdmUgPSBfb3B0aW9ucy5zZW5zaXRpdmUsXG4gICAgICBzZW5zaXRpdmUgPSBfb3B0aW9ucyRzZW5zaXRpdmUgPT09IHZvaWQgMCA/IGZhbHNlIDogX29wdGlvbnMkc2Vuc2l0aXZlO1xuICB2YXIgcGF0aHMgPSBbXS5jb25jYXQocGF0aCk7XG4gIHJldHVybiBwYXRocy5yZWR1Y2UoZnVuY3Rpb24gKG1hdGNoZWQsIHBhdGgpIHtcbiAgICBpZiAoIXBhdGggJiYgcGF0aCAhPT0gXCJcIikgcmV0dXJuIG51bGw7XG4gICAgaWYgKG1hdGNoZWQpIHJldHVybiBtYXRjaGVkO1xuXG4gICAgdmFyIF9jb21waWxlUGF0aCA9IGNvbXBpbGVQYXRoJDEocGF0aCwge1xuICAgICAgZW5kOiBleGFjdCxcbiAgICAgIHN0cmljdDogc3RyaWN0LFxuICAgICAgc2Vuc2l0aXZlOiBzZW5zaXRpdmVcbiAgICB9KSxcbiAgICAgICAgcmVnZXhwID0gX2NvbXBpbGVQYXRoLnJlZ2V4cCxcbiAgICAgICAga2V5cyA9IF9jb21waWxlUGF0aC5rZXlzO1xuXG4gICAgdmFyIG1hdGNoID0gcmVnZXhwLmV4ZWMocGF0aG5hbWUpO1xuICAgIGlmICghbWF0Y2gpIHJldHVybiBudWxsO1xuICAgIHZhciB1cmwgPSBtYXRjaFswXSxcbiAgICAgICAgdmFsdWVzID0gbWF0Y2guc2xpY2UoMSk7XG4gICAgdmFyIGlzRXhhY3QgPSBwYXRobmFtZSA9PT0gdXJsO1xuICAgIGlmIChleGFjdCAmJiAhaXNFeGFjdCkgcmV0dXJuIG51bGw7XG4gICAgcmV0dXJuIHtcbiAgICAgIHBhdGg6IHBhdGgsXG4gICAgICAvLyB0aGUgcGF0aCB1c2VkIHRvIG1hdGNoXG4gICAgICB1cmw6IHBhdGggPT09IFwiL1wiICYmIHVybCA9PT0gXCJcIiA/IFwiL1wiIDogdXJsLFxuICAgICAgLy8gdGhlIG1hdGNoZWQgcG9ydGlvbiBvZiB0aGUgVVJMXG4gICAgICBpc0V4YWN0OiBpc0V4YWN0LFxuICAgICAgLy8gd2hldGhlciBvciBub3Qgd2UgbWF0Y2hlZCBleGFjdGx5XG4gICAgICBwYXJhbXM6IGtleXMucmVkdWNlKGZ1bmN0aW9uIChtZW1vLCBrZXksIGluZGV4KSB7XG4gICAgICAgIG1lbW9ba2V5Lm5hbWVdID0gdmFsdWVzW2luZGV4XTtcbiAgICAgICAgcmV0dXJuIG1lbW87XG4gICAgICB9LCB7fSlcbiAgICB9O1xuICB9LCBudWxsKTtcbn1cblxuZnVuY3Rpb24gaXNFbXB0eUNoaWxkcmVuKGNoaWxkcmVuKSB7XG4gIHJldHVybiBSZWFjdC5DaGlsZHJlbi5jb3VudChjaGlsZHJlbikgPT09IDA7XG59XG5cbmZ1bmN0aW9uIGV2YWxDaGlsZHJlbkRldihjaGlsZHJlbiwgcHJvcHMsIHBhdGgpIHtcbiAgdmFyIHZhbHVlID0gY2hpbGRyZW4ocHJvcHMpO1xuICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHZhbHVlICE9PSB1bmRlZmluZWQsIFwiWW91IHJldHVybmVkIGB1bmRlZmluZWRgIGZyb20gdGhlIGBjaGlsZHJlbmAgZnVuY3Rpb24gb2YgXCIgKyAoXCI8Um91dGVcIiArIChwYXRoID8gXCIgcGF0aD1cXFwiXCIgKyBwYXRoICsgXCJcXFwiXCIgOiBcIlwiKSArIFwiPiwgYnV0IHlvdSBcIikgKyBcInNob3VsZCBoYXZlIHJldHVybmVkIGEgUmVhY3QgZWxlbWVudCBvciBgbnVsbGBcIikgOiB2b2lkIDA7XG4gIHJldHVybiB2YWx1ZSB8fCBudWxsO1xufVxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgbWF0Y2hpbmcgYSBzaW5nbGUgcGF0aCBhbmQgcmVuZGVyaW5nLlxuICovXG5cblxudmFyIFJvdXRlID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKFJvdXRlLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBSb3V0ZSgpIHtcbiAgICByZXR1cm4gX1JlYWN0JENvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gUm91dGUucHJvdG90eXBlO1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0JDEpIHtcbiAgICAgICFjb250ZXh0JDEgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZT4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICAgIHZhciBsb2NhdGlvbiA9IF90aGlzLnByb3BzLmxvY2F0aW9uIHx8IGNvbnRleHQkMS5sb2NhdGlvbjtcbiAgICAgIHZhciBtYXRjaCA9IF90aGlzLnByb3BzLmNvbXB1dGVkTWF0Y2ggPyBfdGhpcy5wcm9wcy5jb21wdXRlZE1hdGNoIC8vIDxTd2l0Y2g+IGFscmVhZHkgY29tcHV0ZWQgdGhlIG1hdGNoIGZvciB1c1xuICAgICAgOiBfdGhpcy5wcm9wcy5wYXRoID8gbWF0Y2hQYXRoKGxvY2F0aW9uLnBhdGhuYW1lLCBfdGhpcy5wcm9wcykgOiBjb250ZXh0JDEubWF0Y2g7XG5cbiAgICAgIHZhciBwcm9wcyA9IF9leHRlbmRzKHt9LCBjb250ZXh0JDEsIHtcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICBtYXRjaDogbWF0Y2hcbiAgICAgIH0pO1xuXG4gICAgICB2YXIgX3RoaXMkcHJvcHMgPSBfdGhpcy5wcm9wcyxcbiAgICAgICAgICBjaGlsZHJlbiA9IF90aGlzJHByb3BzLmNoaWxkcmVuLFxuICAgICAgICAgIGNvbXBvbmVudCA9IF90aGlzJHByb3BzLmNvbXBvbmVudCxcbiAgICAgICAgICByZW5kZXIgPSBfdGhpcyRwcm9wcy5yZW5kZXI7IC8vIFByZWFjdCB1c2VzIGFuIGVtcHR5IGFycmF5IGFzIGNoaWxkcmVuIGJ5XG4gICAgICAvLyBkZWZhdWx0LCBzbyB1c2UgbnVsbCBpZiB0aGF0J3MgdGhlIGNhc2UuXG5cbiAgICAgIGlmIChBcnJheS5pc0FycmF5KGNoaWxkcmVuKSAmJiBjaGlsZHJlbi5sZW5ndGggPT09IDApIHtcbiAgICAgICAgY2hpbGRyZW4gPSBudWxsO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgICAgIHZhbHVlOiBwcm9wc1xuICAgICAgfSwgcHJvcHMubWF0Y2ggPyBjaGlsZHJlbiA/IHR5cGVvZiBjaGlsZHJlbiA9PT0gXCJmdW5jdGlvblwiID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gZXZhbENoaWxkcmVuRGV2KGNoaWxkcmVuLCBwcm9wcywgX3RoaXMucHJvcHMucGF0aCkgOiBjaGlsZHJlbihwcm9wcykgOiBjaGlsZHJlbiA6IGNvbXBvbmVudCA/IFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29tcG9uZW50LCBwcm9wcykgOiByZW5kZXIgPyByZW5kZXIocHJvcHMpIDogbnVsbCA6IHR5cGVvZiBjaGlsZHJlbiA9PT0gXCJmdW5jdGlvblwiID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gZXZhbENoaWxkcmVuRGV2KGNoaWxkcmVuLCBwcm9wcywgX3RoaXMucHJvcHMucGF0aCkgOiBjaGlsZHJlbihwcm9wcykgOiBudWxsKTtcbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gUm91dGU7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgUm91dGUucHJvcFR5cGVzID0ge1xuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm5vZGVdKSxcbiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudChwcm9wcywgcHJvcE5hbWUpIHtcbiAgICAgIGlmIChwcm9wc1twcm9wTmFtZV0gJiYgIWlzVmFsaWRFbGVtZW50VHlwZShwcm9wc1twcm9wTmFtZV0pKSB7XG4gICAgICAgIHJldHVybiBuZXcgRXJyb3IoXCJJbnZhbGlkIHByb3AgJ2NvbXBvbmVudCcgc3VwcGxpZWQgdG8gJ1JvdXRlJzogdGhlIHByb3AgaXMgbm90IGEgdmFsaWQgUmVhY3QgY29tcG9uZW50XCIpO1xuICAgICAgfVxuICAgIH0sXG4gICAgZXhhY3Q6IFByb3BUeXBlcy5ib29sLFxuICAgIGxvY2F0aW9uOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIHBhdGg6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5zdHJpbmcpXSksXG4gICAgcmVuZGVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBzZW5zaXRpdmU6IFByb3BUeXBlcy5ib29sLFxuICAgIHN0cmljdDogUHJvcFR5cGVzLmJvb2xcbiAgfTtcblxuICBSb3V0ZS5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMuY2hpbGRyZW4gJiYgIWlzRW1wdHlDaGlsZHJlbih0aGlzLnByb3BzLmNoaWxkcmVuKSAmJiB0aGlzLnByb3BzLmNvbXBvbmVudCksIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSBjb21wb25lbnQ+IGFuZCA8Um91dGUgY2hpbGRyZW4+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgY29tcG9uZW50PiB3aWxsIGJlIGlnbm9yZWRcIikgOiB2b2lkIDA7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMuY2hpbGRyZW4gJiYgIWlzRW1wdHlDaGlsZHJlbih0aGlzLnByb3BzLmNoaWxkcmVuKSAmJiB0aGlzLnByb3BzLnJlbmRlciksIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSByZW5kZXI+IGFuZCA8Um91dGUgY2hpbGRyZW4+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgcmVuZGVyPiB3aWxsIGJlIGlnbm9yZWRcIikgOiB2b2lkIDA7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMuY29tcG9uZW50ICYmIHRoaXMucHJvcHMucmVuZGVyKSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIGNvbXBvbmVudD4gYW5kIDxSb3V0ZSByZW5kZXI+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgcmVuZGVyPiB3aWxsIGJlIGlnbm9yZWRcIikgOiB2b2lkIDA7XG4gIH07XG5cbiAgUm91dGUucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIChwcmV2UHJvcHMpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodGhpcy5wcm9wcy5sb2NhdGlvbiAmJiAhcHJldlByb3BzLmxvY2F0aW9uKSwgJzxSb3V0ZT4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSB1bmNvbnRyb2xsZWQgdG8gY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBpbml0aWFsbHkgdXNlZCBubyBcImxvY2F0aW9uXCIgcHJvcCBhbmQgdGhlbiBwcm92aWRlZCBvbmUgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKSA6IHZvaWQgMDtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEoIXRoaXMucHJvcHMubG9jYXRpb24gJiYgcHJldlByb3BzLmxvY2F0aW9uKSwgJzxSb3V0ZT4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSBjb250cm9sbGVkIHRvIHVuY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBwcm92aWRlZCBhIFwibG9jYXRpb25cIiBwcm9wIGluaXRpYWxseSBidXQgb21pdHRlZCBpdCBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpIDogdm9pZCAwO1xuICB9O1xufVxuXG5mdW5jdGlvbiBhZGRMZWFkaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09IFwiL1wiID8gcGF0aCA6IFwiL1wiICsgcGF0aDtcbn1cblxuZnVuY3Rpb24gYWRkQmFzZW5hbWUoYmFzZW5hbWUsIGxvY2F0aW9uKSB7XG4gIGlmICghYmFzZW5hbWUpIHJldHVybiBsb2NhdGlvbjtcbiAgcmV0dXJuIF9leHRlbmRzKHt9LCBsb2NhdGlvbiwge1xuICAgIHBhdGhuYW1lOiBhZGRMZWFkaW5nU2xhc2goYmFzZW5hbWUpICsgbG9jYXRpb24ucGF0aG5hbWVcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHN0cmlwQmFzZW5hbWUoYmFzZW5hbWUsIGxvY2F0aW9uKSB7XG4gIGlmICghYmFzZW5hbWUpIHJldHVybiBsb2NhdGlvbjtcbiAgdmFyIGJhc2UgPSBhZGRMZWFkaW5nU2xhc2goYmFzZW5hbWUpO1xuICBpZiAobG9jYXRpb24ucGF0aG5hbWUuaW5kZXhPZihiYXNlKSAhPT0gMCkgcmV0dXJuIGxvY2F0aW9uO1xuICByZXR1cm4gX2V4dGVuZHMoe30sIGxvY2F0aW9uLCB7XG4gICAgcGF0aG5hbWU6IGxvY2F0aW9uLnBhdGhuYW1lLnN1YnN0cihiYXNlLmxlbmd0aClcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVVSTChsb2NhdGlvbikge1xuICByZXR1cm4gdHlwZW9mIGxvY2F0aW9uID09PSBcInN0cmluZ1wiID8gbG9jYXRpb24gOiBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbn1cblxuZnVuY3Rpb24gc3RhdGljSGFuZGxlcihtZXRob2ROYW1lKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3UgY2Fubm90ICVzIHdpdGggPFN0YXRpY1JvdXRlcj5cIiwgbWV0aG9kTmFtZSkgOiBpbnZhcmlhbnQoZmFsc2UpIDtcbiAgfTtcbn1cblxuZnVuY3Rpb24gbm9vcCgpIHt9XG4vKipcbiAqIFRoZSBwdWJsaWMgdG9wLWxldmVsIEFQSSBmb3IgYSBcInN0YXRpY1wiIDxSb3V0ZXI+LCBzby1jYWxsZWQgYmVjYXVzZSBpdFxuICogY2FuJ3QgYWN0dWFsbHkgY2hhbmdlIHRoZSBjdXJyZW50IGxvY2F0aW9uLiBJbnN0ZWFkLCBpdCBqdXN0IHJlY29yZHNcbiAqIGxvY2F0aW9uIGNoYW5nZXMgaW4gYSBjb250ZXh0IG9iamVjdC4gVXNlZnVsIG1haW5seSBpbiB0ZXN0aW5nIGFuZFxuICogc2VydmVyLXJlbmRlcmluZyBzY2VuYXJpb3MuXG4gKi9cblxuXG52YXIgU3RhdGljUm91dGVyID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKFN0YXRpY1JvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gU3RhdGljUm91dGVyKCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xuXG4gICAgX3RoaXMuaGFuZGxlUHVzaCA9IGZ1bmN0aW9uIChsb2NhdGlvbikge1xuICAgICAgcmV0dXJuIF90aGlzLm5hdmlnYXRlVG8obG9jYXRpb24sIFwiUFVTSFwiKTtcbiAgICB9O1xuXG4gICAgX3RoaXMuaGFuZGxlUmVwbGFjZSA9IGZ1bmN0aW9uIChsb2NhdGlvbikge1xuICAgICAgcmV0dXJuIF90aGlzLm5hdmlnYXRlVG8obG9jYXRpb24sIFwiUkVQTEFDRVwiKTtcbiAgICB9O1xuXG4gICAgX3RoaXMuaGFuZGxlTGlzdGVuID0gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIG5vb3A7XG4gICAgfTtcblxuICAgIF90aGlzLmhhbmRsZUJsb2NrID0gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIG5vb3A7XG4gICAgfTtcblxuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBTdGF0aWNSb3V0ZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5uYXZpZ2F0ZVRvID0gZnVuY3Rpb24gbmF2aWdhdGVUbyhsb2NhdGlvbiwgYWN0aW9uKSB7XG4gICAgdmFyIF90aGlzJHByb3BzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgX3RoaXMkcHJvcHMkYmFzZW5hbWUgPSBfdGhpcyRwcm9wcy5iYXNlbmFtZSxcbiAgICAgICAgYmFzZW5hbWUgPSBfdGhpcyRwcm9wcyRiYXNlbmFtZSA9PT0gdm9pZCAwID8gXCJcIiA6IF90aGlzJHByb3BzJGJhc2VuYW1lLFxuICAgICAgICBfdGhpcyRwcm9wcyRjb250ZXh0ID0gX3RoaXMkcHJvcHMuY29udGV4dCxcbiAgICAgICAgY29udGV4dCA9IF90aGlzJHByb3BzJGNvbnRleHQgPT09IHZvaWQgMCA/IHt9IDogX3RoaXMkcHJvcHMkY29udGV4dDtcbiAgICBjb250ZXh0LmFjdGlvbiA9IGFjdGlvbjtcbiAgICBjb250ZXh0LmxvY2F0aW9uID0gYWRkQmFzZW5hbWUoYmFzZW5hbWUsIGNyZWF0ZUxvY2F0aW9uKGxvY2F0aW9uKSk7XG4gICAgY29udGV4dC51cmwgPSBjcmVhdGVVUkwoY29udGV4dC5sb2NhdGlvbik7XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgX3RoaXMkcHJvcHMyID0gdGhpcy5wcm9wcyxcbiAgICAgICAgX3RoaXMkcHJvcHMyJGJhc2VuYW1lID0gX3RoaXMkcHJvcHMyLmJhc2VuYW1lLFxuICAgICAgICBiYXNlbmFtZSA9IF90aGlzJHByb3BzMiRiYXNlbmFtZSA9PT0gdm9pZCAwID8gXCJcIiA6IF90aGlzJHByb3BzMiRiYXNlbmFtZSxcbiAgICAgICAgX3RoaXMkcHJvcHMyJGNvbnRleHQgPSBfdGhpcyRwcm9wczIuY29udGV4dCxcbiAgICAgICAgY29udGV4dCA9IF90aGlzJHByb3BzMiRjb250ZXh0ID09PSB2b2lkIDAgPyB7fSA6IF90aGlzJHByb3BzMiRjb250ZXh0LFxuICAgICAgICBfdGhpcyRwcm9wczIkbG9jYXRpb24gPSBfdGhpcyRwcm9wczIubG9jYXRpb24sXG4gICAgICAgIGxvY2F0aW9uID0gX3RoaXMkcHJvcHMyJGxvY2F0aW9uID09PSB2b2lkIDAgPyBcIi9cIiA6IF90aGlzJHByb3BzMiRsb2NhdGlvbixcbiAgICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF90aGlzJHByb3BzMiwgW1wiYmFzZW5hbWVcIiwgXCJjb250ZXh0XCIsIFwibG9jYXRpb25cIl0pO1xuXG4gICAgdmFyIGhpc3RvcnkgPSB7XG4gICAgICBjcmVhdGVIcmVmOiBmdW5jdGlvbiBjcmVhdGVIcmVmKHBhdGgpIHtcbiAgICAgICAgcmV0dXJuIGFkZExlYWRpbmdTbGFzaChiYXNlbmFtZSArIGNyZWF0ZVVSTChwYXRoKSk7XG4gICAgICB9LFxuICAgICAgYWN0aW9uOiBcIlBPUFwiLFxuICAgICAgbG9jYXRpb246IHN0cmlwQmFzZW5hbWUoYmFzZW5hbWUsIGNyZWF0ZUxvY2F0aW9uKGxvY2F0aW9uKSksXG4gICAgICBwdXNoOiB0aGlzLmhhbmRsZVB1c2gsXG4gICAgICByZXBsYWNlOiB0aGlzLmhhbmRsZVJlcGxhY2UsXG4gICAgICBnbzogc3RhdGljSGFuZGxlcihcImdvXCIpLFxuICAgICAgZ29CYWNrOiBzdGF0aWNIYW5kbGVyKFwiZ29CYWNrXCIpLFxuICAgICAgZ29Gb3J3YXJkOiBzdGF0aWNIYW5kbGVyKFwiZ29Gb3J3YXJkXCIpLFxuICAgICAgbGlzdGVuOiB0aGlzLmhhbmRsZUxpc3RlbixcbiAgICAgIGJsb2NrOiB0aGlzLmhhbmRsZUJsb2NrXG4gICAgfTtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIF9leHRlbmRzKHt9LCByZXN0LCB7XG4gICAgICBoaXN0b3J5OiBoaXN0b3J5LFxuICAgICAgc3RhdGljQ29udGV4dDogY29udGV4dFxuICAgIH0pKTtcbiAgfTtcblxuICByZXR1cm4gU3RhdGljUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFN0YXRpY1JvdXRlci5wcm9wVHlwZXMgPSB7XG4gICAgYmFzZW5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgY29udGV4dDogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm9iamVjdF0pXG4gIH07XG5cbiAgU3RhdGljUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPFN0YXRpY1JvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgKyBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IFN0YXRpY1JvdXRlciBhcyBSb3V0ZXIgfWAuXCIpIDogdm9pZCAwO1xuICB9O1xufVxuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciByZW5kZXJpbmcgdGhlIGZpcnN0IDxSb3V0ZT4gdGhhdCBtYXRjaGVzLlxuICovXG5cbnZhciBTd2l0Y2ggPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoU3dpdGNoLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBTd2l0Y2goKSB7XG4gICAgcmV0dXJuIF9SZWFjdCRDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFN3aXRjaC5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAgICFjb250ZXh0ID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8U3dpdGNoPiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgICAgdmFyIGxvY2F0aW9uID0gX3RoaXMucHJvcHMubG9jYXRpb24gfHwgY29udGV4dC5sb2NhdGlvbjtcbiAgICAgIHZhciBlbGVtZW50LCBtYXRjaDsgLy8gV2UgdXNlIFJlYWN0LkNoaWxkcmVuLmZvckVhY2ggaW5zdGVhZCBvZiBSZWFjdC5DaGlsZHJlbi50b0FycmF5KCkuZmluZCgpXG4gICAgICAvLyBoZXJlIGJlY2F1c2UgdG9BcnJheSBhZGRzIGtleXMgdG8gYWxsIGNoaWxkIGVsZW1lbnRzIGFuZCB3ZSBkbyBub3Qgd2FudFxuICAgICAgLy8gdG8gdHJpZ2dlciBhbiB1bm1vdW50L3JlbW91bnQgZm9yIHR3byA8Um91dGU+cyB0aGF0IHJlbmRlciB0aGUgc2FtZVxuICAgICAgLy8gY29tcG9uZW50IGF0IGRpZmZlcmVudCBVUkxzLlxuXG4gICAgICBSZWFjdC5DaGlsZHJlbi5mb3JFYWNoKF90aGlzLnByb3BzLmNoaWxkcmVuLCBmdW5jdGlvbiAoY2hpbGQpIHtcbiAgICAgICAgaWYgKG1hdGNoID09IG51bGwgJiYgUmVhY3QuaXNWYWxpZEVsZW1lbnQoY2hpbGQpKSB7XG4gICAgICAgICAgZWxlbWVudCA9IGNoaWxkO1xuICAgICAgICAgIHZhciBwYXRoID0gY2hpbGQucHJvcHMucGF0aCB8fCBjaGlsZC5wcm9wcy5mcm9tO1xuICAgICAgICAgIG1hdGNoID0gcGF0aCA/IG1hdGNoUGF0aChsb2NhdGlvbi5wYXRobmFtZSwgX2V4dGVuZHMoe30sIGNoaWxkLnByb3BzLCB7XG4gICAgICAgICAgICBwYXRoOiBwYXRoXG4gICAgICAgICAgfSkpIDogY29udGV4dC5tYXRjaDtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICByZXR1cm4gbWF0Y2ggPyBSZWFjdC5jbG9uZUVsZW1lbnQoZWxlbWVudCwge1xuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICAgIGNvbXB1dGVkTWF0Y2g6IG1hdGNoXG4gICAgICB9KSA6IG51bGw7XG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIFN3aXRjaDtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBTd2l0Y2gucHJvcFR5cGVzID0ge1xuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdFxuICB9O1xuXG4gIFN3aXRjaC5wcm90b3R5cGUuY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gKHByZXZQcm9wcykge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmxvY2F0aW9uICYmICFwcmV2UHJvcHMubG9jYXRpb24pLCAnPFN3aXRjaD4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSB1bmNvbnRyb2xsZWQgdG8gY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBpbml0aWFsbHkgdXNlZCBubyBcImxvY2F0aW9uXCIgcHJvcCBhbmQgdGhlbiBwcm92aWRlZCBvbmUgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKSA6IHZvaWQgMDtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEoIXRoaXMucHJvcHMubG9jYXRpb24gJiYgcHJldlByb3BzLmxvY2F0aW9uKSwgJzxTd2l0Y2g+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gY29udHJvbGxlZCB0byB1bmNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgcHJvdmlkZWQgYSBcImxvY2F0aW9uXCIgcHJvcCBpbml0aWFsbHkgYnV0IG9taXR0ZWQgaXQgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuLyoqXG4gKiBBIHB1YmxpYyBoaWdoZXItb3JkZXIgY29tcG9uZW50IHRvIGFjY2VzcyB0aGUgaW1wZXJhdGl2ZSBBUElcbiAqL1xuXG5mdW5jdGlvbiB3aXRoUm91dGVyKENvbXBvbmVudCkge1xuICB2YXIgZGlzcGxheU5hbWUgPSBcIndpdGhSb3V0ZXIoXCIgKyAoQ29tcG9uZW50LmRpc3BsYXlOYW1lIHx8IENvbXBvbmVudC5uYW1lKSArIFwiKVwiO1xuXG4gIHZhciBDID0gZnVuY3Rpb24gQyhwcm9wcykge1xuICAgIHZhciB3cmFwcGVkQ29tcG9uZW50UmVmID0gcHJvcHMud3JhcHBlZENvbXBvbmVudFJlZixcbiAgICAgICAgcmVtYWluaW5nUHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShwcm9wcywgW1wid3JhcHBlZENvbXBvbmVudFJlZlwiXSk7XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICAgIWNvbnRleHQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxcIiArIGRpc3BsYXlOYW1lICsgXCIgLz4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KENvbXBvbmVudCwgX2V4dGVuZHMoe30sIHJlbWFpbmluZ1Byb3BzLCBjb250ZXh0LCB7XG4gICAgICAgIHJlZjogd3JhcHBlZENvbXBvbmVudFJlZlxuICAgICAgfSkpO1xuICAgIH0pO1xuICB9O1xuXG4gIEMuZGlzcGxheU5hbWUgPSBkaXNwbGF5TmFtZTtcbiAgQy5XcmFwcGVkQ29tcG9uZW50ID0gQ29tcG9uZW50O1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICBDLnByb3BUeXBlcyA9IHtcbiAgICAgIHdyYXBwZWRDb21wb25lbnRSZWY6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMub2JqZWN0XSlcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIGhvaXN0U3RhdGljcyhDLCBDb21wb25lbnQpO1xufVxuXG52YXIgdXNlQ29udGV4dCA9IFJlYWN0LnVzZUNvbnRleHQ7XG5mdW5jdGlvbiB1c2VIaXN0b3J5KCkge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgISh0eXBlb2YgdXNlQ29udGV4dCA9PT0gXCJmdW5jdGlvblwiKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3UgbXVzdCB1c2UgUmVhY3QgPj0gMTYuOCBpbiBvcmRlciB0byB1c2UgdXNlSGlzdG9yeSgpXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgfVxuXG4gIHJldHVybiB1c2VDb250ZXh0KGhpc3RvcnlDb250ZXh0KTtcbn1cbmZ1bmN0aW9uIHVzZUxvY2F0aW9uKCkge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgISh0eXBlb2YgdXNlQ29udGV4dCA9PT0gXCJmdW5jdGlvblwiKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3UgbXVzdCB1c2UgUmVhY3QgPj0gMTYuOCBpbiBvcmRlciB0byB1c2UgdXNlTG9jYXRpb24oKVwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIH1cblxuICByZXR1cm4gdXNlQ29udGV4dChjb250ZXh0KS5sb2NhdGlvbjtcbn1cbmZ1bmN0aW9uIHVzZVBhcmFtcygpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICEodHlwZW9mIHVzZUNvbnRleHQgPT09IFwiZnVuY3Rpb25cIikgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IG11c3QgdXNlIFJlYWN0ID49IDE2LjggaW4gb3JkZXIgdG8gdXNlIHVzZVBhcmFtcygpXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgfVxuXG4gIHZhciBtYXRjaCA9IHVzZUNvbnRleHQoY29udGV4dCkubWF0Y2g7XG4gIHJldHVybiBtYXRjaCA/IG1hdGNoLnBhcmFtcyA6IHt9O1xufVxuZnVuY3Rpb24gdXNlUm91dGVNYXRjaChwYXRoKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAhKHR5cGVvZiB1c2VDb250ZXh0ID09PSBcImZ1bmN0aW9uXCIpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBtdXN0IHVzZSBSZWFjdCA+PSAxNi44IGluIG9yZGVyIHRvIHVzZSB1c2VSb3V0ZU1hdGNoKClcIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICB9XG5cbiAgdmFyIGxvY2F0aW9uID0gdXNlTG9jYXRpb24oKTtcbiAgdmFyIG1hdGNoID0gdXNlQ29udGV4dChjb250ZXh0KS5tYXRjaDtcbiAgcmV0dXJuIHBhdGggPyBtYXRjaFBhdGgobG9jYXRpb24ucGF0aG5hbWUsIHBhdGgpIDogbWF0Y2g7XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgaWYgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgZ2xvYmFsID0gd2luZG93O1xuICAgIHZhciBrZXkgPSBcIl9fcmVhY3Rfcm91dGVyX2J1aWxkX19cIjtcbiAgICB2YXIgYnVpbGROYW1lcyA9IHtcbiAgICAgIGNqczogXCJDb21tb25KU1wiLFxuICAgICAgZXNtOiBcIkVTIG1vZHVsZXNcIixcbiAgICAgIHVtZDogXCJVTURcIlxuICAgIH07XG5cbiAgICBpZiAoZ2xvYmFsW2tleV0gJiYgZ2xvYmFsW2tleV0gIT09IFwiZXNtXCIpIHtcbiAgICAgIHZhciBpbml0aWFsQnVpbGROYW1lID0gYnVpbGROYW1lc1tnbG9iYWxba2V5XV07XG4gICAgICB2YXIgc2Vjb25kYXJ5QnVpbGROYW1lID0gYnVpbGROYW1lc1tcImVzbVwiXTsgLy8gVE9ETzogQWRkIGxpbmsgdG8gYXJ0aWNsZSB0aGF0IGV4cGxhaW5zIGluIGRldGFpbCBob3cgdG8gYXZvaWRcbiAgICAgIC8vIGxvYWRpbmcgMiBkaWZmZXJlbnQgYnVpbGRzLlxuXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJZb3UgYXJlIGxvYWRpbmcgdGhlIFwiICsgc2Vjb25kYXJ5QnVpbGROYW1lICsgXCIgYnVpbGQgb2YgUmVhY3QgUm91dGVyIFwiICsgKFwib24gYSBwYWdlIHRoYXQgaXMgYWxyZWFkeSBydW5uaW5nIHRoZSBcIiArIGluaXRpYWxCdWlsZE5hbWUgKyBcIiBcIikgKyBcImJ1aWxkLCBzbyB0aGluZ3Mgd29uJ3Qgd29yayByaWdodC5cIik7XG4gICAgfVxuXG4gICAgZ2xvYmFsW2tleV0gPSBcImVzbVwiO1xuICB9XG59XG5cbmV4cG9ydCB7IE1lbW9yeVJvdXRlciwgUHJvbXB0LCBSZWRpcmVjdCwgUm91dGUsIFJvdXRlciwgU3RhdGljUm91dGVyLCBTd2l0Y2gsIGhpc3RvcnlDb250ZXh0IGFzIF9fSGlzdG9yeUNvbnRleHQsIGNvbnRleHQgYXMgX19Sb3V0ZXJDb250ZXh0LCBnZW5lcmF0ZVBhdGgsIG1hdGNoUGF0aCwgdXNlSGlzdG9yeSwgdXNlTG9jYXRpb24sIHVzZVBhcmFtcywgdXNlUm91dGVNYXRjaCwgd2l0aFJvdXRlciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVhY3Qtcm91dGVyLmpzLm1hcFxuIiwiaW1wb3J0IHsgUm91dGVyLCBfX1JvdXRlckNvbnRleHQsIG1hdGNoUGF0aCB9IGZyb20gJ3JlYWN0LXJvdXRlcic7XG5leHBvcnQgeyBNZW1vcnlSb3V0ZXIsIFByb21wdCwgUmVkaXJlY3QsIFJvdXRlLCBSb3V0ZXIsIFN0YXRpY1JvdXRlciwgU3dpdGNoLCBnZW5lcmF0ZVBhdGgsIG1hdGNoUGF0aCwgdXNlSGlzdG9yeSwgdXNlTG9jYXRpb24sIHVzZVBhcmFtcywgdXNlUm91dGVNYXRjaCwgd2l0aFJvdXRlciB9IGZyb20gJ3JlYWN0LXJvdXRlcic7XG5pbXBvcnQgX2luaGVyaXRzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZSc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY3JlYXRlQnJvd3Nlckhpc3RvcnksIGNyZWF0ZUhhc2hIaXN0b3J5LCBjcmVhdGVMb2NhdGlvbiB9IGZyb20gJ2hpc3RvcnknO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB3YXJuaW5nIGZyb20gJ3Rpbnktd2FybmluZyc7XG5pbXBvcnQgX2V4dGVuZHMgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyc7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSc7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ3RpbnktaW52YXJpYW50JztcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgYSA8Um91dGVyPiB0aGF0IHVzZXMgSFRNTDUgaGlzdG9yeS5cbiAqL1xuXG52YXIgQnJvd3NlclJvdXRlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShCcm93c2VyUm91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBCcm93c2VyUm91dGVyKCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xuICAgIF90aGlzLmhpc3RvcnkgPSBjcmVhdGVCcm93c2VySGlzdG9yeShfdGhpcy5wcm9wcyk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IEJyb3dzZXJSb3V0ZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGVyLCB7XG4gICAgICBoaXN0b3J5OiB0aGlzLmhpc3RvcnksXG4gICAgICBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlblxuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBCcm93c2VyUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIEJyb3dzZXJSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGJhc2VuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgICBmb3JjZVJlZnJlc2g6IFByb3BUeXBlcy5ib29sLFxuICAgIGdldFVzZXJDb25maXJtYXRpb246IFByb3BUeXBlcy5mdW5jLFxuICAgIGtleUxlbmd0aDogUHJvcFR5cGVzLm51bWJlclxuICB9O1xuXG4gIEJyb3dzZXJSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIXRoaXMucHJvcHMuaGlzdG9yeSwgXCI8QnJvd3NlclJvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgKyBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IEJyb3dzZXJSb3V0ZXIgYXMgUm91dGVyIH1gLlwiKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgYSA8Um91dGVyPiB0aGF0IHVzZXMgd2luZG93LmxvY2F0aW9uLmhhc2guXG4gKi9cblxudmFyIEhhc2hSb3V0ZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoSGFzaFJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gSGFzaFJvdXRlcigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcbiAgICBfdGhpcy5oaXN0b3J5ID0gY3JlYXRlSGFzaEhpc3RvcnkoX3RoaXMucHJvcHMpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBIYXNoUm91dGVyLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwge1xuICAgICAgaGlzdG9yeTogdGhpcy5oaXN0b3J5LFxuICAgICAgY2hpbGRyZW46IHRoaXMucHJvcHMuY2hpbGRyZW5cbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gSGFzaFJvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBIYXNoUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBiYXNlbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgZ2V0VXNlckNvbmZpcm1hdGlvbjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgaGFzaFR5cGU6IFByb3BUeXBlcy5vbmVPZihbXCJoYXNoYmFuZ1wiLCBcIm5vc2xhc2hcIiwgXCJzbGFzaFwiXSlcbiAgfTtcblxuICBIYXNoUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPEhhc2hSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBIYXNoUm91dGVyIGFzIFJvdXRlciB9YC5cIikgOiB2b2lkIDA7XG4gIH07XG59XG5cbnZhciByZXNvbHZlVG9Mb2NhdGlvbiA9IGZ1bmN0aW9uIHJlc29sdmVUb0xvY2F0aW9uKHRvLCBjdXJyZW50TG9jYXRpb24pIHtcbiAgcmV0dXJuIHR5cGVvZiB0byA9PT0gXCJmdW5jdGlvblwiID8gdG8oY3VycmVudExvY2F0aW9uKSA6IHRvO1xufTtcbnZhciBub3JtYWxpemVUb0xvY2F0aW9uID0gZnVuY3Rpb24gbm9ybWFsaXplVG9Mb2NhdGlvbih0bywgY3VycmVudExvY2F0aW9uKSB7XG4gIHJldHVybiB0eXBlb2YgdG8gPT09IFwic3RyaW5nXCIgPyBjcmVhdGVMb2NhdGlvbih0bywgbnVsbCwgbnVsbCwgY3VycmVudExvY2F0aW9uKSA6IHRvO1xufTtcblxudmFyIGZvcndhcmRSZWZTaGltID0gZnVuY3Rpb24gZm9yd2FyZFJlZlNoaW0oQykge1xuICByZXR1cm4gQztcbn07XG5cbnZhciBmb3J3YXJkUmVmID0gUmVhY3QuZm9yd2FyZFJlZjtcblxuaWYgKHR5cGVvZiBmb3J3YXJkUmVmID09PSBcInVuZGVmaW5lZFwiKSB7XG4gIGZvcndhcmRSZWYgPSBmb3J3YXJkUmVmU2hpbTtcbn1cblxuZnVuY3Rpb24gaXNNb2RpZmllZEV2ZW50KGV2ZW50KSB7XG4gIHJldHVybiAhIShldmVudC5tZXRhS2V5IHx8IGV2ZW50LmFsdEtleSB8fCBldmVudC5jdHJsS2V5IHx8IGV2ZW50LnNoaWZ0S2V5KTtcbn1cblxudmFyIExpbmtBbmNob3IgPSBmb3J3YXJkUmVmKGZ1bmN0aW9uIChfcmVmLCBmb3J3YXJkZWRSZWYpIHtcbiAgdmFyIGlubmVyUmVmID0gX3JlZi5pbm5lclJlZixcbiAgICAgIG5hdmlnYXRlID0gX3JlZi5uYXZpZ2F0ZSxcbiAgICAgIF9vbkNsaWNrID0gX3JlZi5vbkNsaWNrLFxuICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYsIFtcImlubmVyUmVmXCIsIFwibmF2aWdhdGVcIiwgXCJvbkNsaWNrXCJdKTtcblxuICB2YXIgdGFyZ2V0ID0gcmVzdC50YXJnZXQ7XG5cbiAgdmFyIHByb3BzID0gX2V4dGVuZHMoe30sIHJlc3QsIHtcbiAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKGV2ZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICBpZiAoX29uQ2xpY2spIF9vbkNsaWNrKGV2ZW50KTtcbiAgICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHRocm93IGV4O1xuICAgICAgfVxuXG4gICAgICBpZiAoIWV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQgJiYgLy8gb25DbGljayBwcmV2ZW50ZWQgZGVmYXVsdFxuICAgICAgZXZlbnQuYnV0dG9uID09PSAwICYmICggLy8gaWdub3JlIGV2ZXJ5dGhpbmcgYnV0IGxlZnQgY2xpY2tzXG4gICAgICAhdGFyZ2V0IHx8IHRhcmdldCA9PT0gXCJfc2VsZlwiKSAmJiAvLyBsZXQgYnJvd3NlciBoYW5kbGUgXCJ0YXJnZXQ9X2JsYW5rXCIgZXRjLlxuICAgICAgIWlzTW9kaWZpZWRFdmVudChldmVudCkgLy8gaWdub3JlIGNsaWNrcyB3aXRoIG1vZGlmaWVyIGtleXNcbiAgICAgICkge1xuICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgbmF2aWdhdGUoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgfSk7IC8vIFJlYWN0IDE1IGNvbXBhdFxuXG5cbiAgaWYgKGZvcndhcmRSZWZTaGltICE9PSBmb3J3YXJkUmVmKSB7XG4gICAgcHJvcHMucmVmID0gZm9yd2FyZGVkUmVmIHx8IGlubmVyUmVmO1xuICB9IGVsc2Uge1xuICAgIHByb3BzLnJlZiA9IGlubmVyUmVmO1xuICB9XG4gIC8qIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBqc3gtYTExeS9hbmNob3ItaGFzLWNvbnRlbnQgKi9cblxuXG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFwiYVwiLCBwcm9wcyk7XG59KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBMaW5rQW5jaG9yLmRpc3BsYXlOYW1lID0gXCJMaW5rQW5jaG9yXCI7XG59XG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciByZW5kZXJpbmcgYSBoaXN0b3J5LWF3YXJlIDxhPi5cbiAqL1xuXG5cbnZhciBMaW5rID0gZm9yd2FyZFJlZihmdW5jdGlvbiAoX3JlZjIsIGZvcndhcmRlZFJlZikge1xuICB2YXIgX3JlZjIkY29tcG9uZW50ID0gX3JlZjIuY29tcG9uZW50LFxuICAgICAgY29tcG9uZW50ID0gX3JlZjIkY29tcG9uZW50ID09PSB2b2lkIDAgPyBMaW5rQW5jaG9yIDogX3JlZjIkY29tcG9uZW50LFxuICAgICAgcmVwbGFjZSA9IF9yZWYyLnJlcGxhY2UsXG4gICAgICB0byA9IF9yZWYyLnRvLFxuICAgICAgaW5uZXJSZWYgPSBfcmVmMi5pbm5lclJlZixcbiAgICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmMiwgW1wiY29tcG9uZW50XCIsIFwicmVwbGFjZVwiLCBcInRvXCIsIFwiaW5uZXJSZWZcIl0pO1xuXG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KF9fUm91dGVyQ29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPExpbms+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgdmFyIGhpc3RvcnkgPSBjb250ZXh0Lmhpc3Rvcnk7XG4gICAgdmFyIGxvY2F0aW9uID0gbm9ybWFsaXplVG9Mb2NhdGlvbihyZXNvbHZlVG9Mb2NhdGlvbih0bywgY29udGV4dC5sb2NhdGlvbiksIGNvbnRleHQubG9jYXRpb24pO1xuICAgIHZhciBocmVmID0gbG9jYXRpb24gPyBoaXN0b3J5LmNyZWF0ZUhyZWYobG9jYXRpb24pIDogXCJcIjtcblxuICAgIHZhciBwcm9wcyA9IF9leHRlbmRzKHt9LCByZXN0LCB7XG4gICAgICBocmVmOiBocmVmLFxuICAgICAgbmF2aWdhdGU6IGZ1bmN0aW9uIG5hdmlnYXRlKCkge1xuICAgICAgICB2YXIgbG9jYXRpb24gPSByZXNvbHZlVG9Mb2NhdGlvbih0bywgY29udGV4dC5sb2NhdGlvbik7XG4gICAgICAgIHZhciBtZXRob2QgPSByZXBsYWNlID8gaGlzdG9yeS5yZXBsYWNlIDogaGlzdG9yeS5wdXNoO1xuICAgICAgICBtZXRob2QobG9jYXRpb24pO1xuICAgICAgfVxuICAgIH0pOyAvLyBSZWFjdCAxNSBjb21wYXRcblxuXG4gICAgaWYgKGZvcndhcmRSZWZTaGltICE9PSBmb3J3YXJkUmVmKSB7XG4gICAgICBwcm9wcy5yZWYgPSBmb3J3YXJkZWRSZWYgfHwgaW5uZXJSZWY7XG4gICAgfSBlbHNlIHtcbiAgICAgIHByb3BzLmlubmVyUmVmID0gaW5uZXJSZWY7XG4gICAgfVxuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29tcG9uZW50LCBwcm9wcyk7XG4gIH0pO1xufSk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgdmFyIHRvVHlwZSA9IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5mdW5jXSk7XG4gIHZhciByZWZUeXBlID0gUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5zaGFwZSh7XG4gICAgY3VycmVudDogUHJvcFR5cGVzLmFueVxuICB9KV0pO1xuICBMaW5rLmRpc3BsYXlOYW1lID0gXCJMaW5rXCI7XG4gIExpbmsucHJvcFR5cGVzID0ge1xuICAgIGlubmVyUmVmOiByZWZUeXBlLFxuICAgIG9uQ2xpY2s6IFByb3BUeXBlcy5mdW5jLFxuICAgIHJlcGxhY2U6IFByb3BUeXBlcy5ib29sLFxuICAgIHRhcmdldDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICB0bzogdG9UeXBlLmlzUmVxdWlyZWRcbiAgfTtcbn1cblxudmFyIGZvcndhcmRSZWZTaGltJDEgPSBmdW5jdGlvbiBmb3J3YXJkUmVmU2hpbShDKSB7XG4gIHJldHVybiBDO1xufTtcblxudmFyIGZvcndhcmRSZWYkMSA9IFJlYWN0LmZvcndhcmRSZWY7XG5cbmlmICh0eXBlb2YgZm9yd2FyZFJlZiQxID09PSBcInVuZGVmaW5lZFwiKSB7XG4gIGZvcndhcmRSZWYkMSA9IGZvcndhcmRSZWZTaGltJDE7XG59XG5cbmZ1bmN0aW9uIGpvaW5DbGFzc25hbWVzKCkge1xuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgY2xhc3NuYW1lcyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBjbGFzc25hbWVzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgcmV0dXJuIGNsYXNzbmFtZXMuZmlsdGVyKGZ1bmN0aW9uIChpKSB7XG4gICAgcmV0dXJuIGk7XG4gIH0pLmpvaW4oXCIgXCIpO1xufVxuLyoqXG4gKiBBIDxMaW5rPiB3cmFwcGVyIHRoYXQga25vd3MgaWYgaXQncyBcImFjdGl2ZVwiIG9yIG5vdC5cbiAqL1xuXG5cbnZhciBOYXZMaW5rID0gZm9yd2FyZFJlZiQxKGZ1bmN0aW9uIChfcmVmLCBmb3J3YXJkZWRSZWYpIHtcbiAgdmFyIF9yZWYkYXJpYUN1cnJlbnQgPSBfcmVmW1wiYXJpYS1jdXJyZW50XCJdLFxuICAgICAgYXJpYUN1cnJlbnQgPSBfcmVmJGFyaWFDdXJyZW50ID09PSB2b2lkIDAgPyBcInBhZ2VcIiA6IF9yZWYkYXJpYUN1cnJlbnQsXG4gICAgICBfcmVmJGFjdGl2ZUNsYXNzTmFtZSA9IF9yZWYuYWN0aXZlQ2xhc3NOYW1lLFxuICAgICAgYWN0aXZlQ2xhc3NOYW1lID0gX3JlZiRhY3RpdmVDbGFzc05hbWUgPT09IHZvaWQgMCA/IFwiYWN0aXZlXCIgOiBfcmVmJGFjdGl2ZUNsYXNzTmFtZSxcbiAgICAgIGFjdGl2ZVN0eWxlID0gX3JlZi5hY3RpdmVTdHlsZSxcbiAgICAgIGNsYXNzTmFtZVByb3AgPSBfcmVmLmNsYXNzTmFtZSxcbiAgICAgIGV4YWN0ID0gX3JlZi5leGFjdCxcbiAgICAgIGlzQWN0aXZlUHJvcCA9IF9yZWYuaXNBY3RpdmUsXG4gICAgICBsb2NhdGlvblByb3AgPSBfcmVmLmxvY2F0aW9uLFxuICAgICAgc2Vuc2l0aXZlID0gX3JlZi5zZW5zaXRpdmUsXG4gICAgICBzdHJpY3QgPSBfcmVmLnN0cmljdCxcbiAgICAgIHN0eWxlUHJvcCA9IF9yZWYuc3R5bGUsXG4gICAgICB0byA9IF9yZWYudG8sXG4gICAgICBpbm5lclJlZiA9IF9yZWYuaW5uZXJSZWYsXG4gICAgICByZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZiwgW1wiYXJpYS1jdXJyZW50XCIsIFwiYWN0aXZlQ2xhc3NOYW1lXCIsIFwiYWN0aXZlU3R5bGVcIiwgXCJjbGFzc05hbWVcIiwgXCJleGFjdFwiLCBcImlzQWN0aXZlXCIsIFwibG9jYXRpb25cIiwgXCJzZW5zaXRpdmVcIiwgXCJzdHJpY3RcIiwgXCJzdHlsZVwiLCBcInRvXCIsIFwiaW5uZXJSZWZcIl0pO1xuXG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KF9fUm91dGVyQ29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPE5hdkxpbms+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgdmFyIGN1cnJlbnRMb2NhdGlvbiA9IGxvY2F0aW9uUHJvcCB8fCBjb250ZXh0LmxvY2F0aW9uO1xuICAgIHZhciB0b0xvY2F0aW9uID0gbm9ybWFsaXplVG9Mb2NhdGlvbihyZXNvbHZlVG9Mb2NhdGlvbih0bywgY3VycmVudExvY2F0aW9uKSwgY3VycmVudExvY2F0aW9uKTtcbiAgICB2YXIgcGF0aCA9IHRvTG9jYXRpb24ucGF0aG5hbWU7IC8vIFJlZ2V4IHRha2VuIGZyb206IGh0dHBzOi8vZ2l0aHViLmNvbS9waWxsYXJqcy9wYXRoLXRvLXJlZ2V4cC9ibG9iL21hc3Rlci9pbmRleC5qcyNMMjAyXG5cbiAgICB2YXIgZXNjYXBlZFBhdGggPSBwYXRoICYmIHBhdGgucmVwbGFjZSgvKFsuKyo/PV4hOiR7fSgpW1xcXXwvXFxcXF0pL2csIFwiXFxcXCQxXCIpO1xuICAgIHZhciBtYXRjaCA9IGVzY2FwZWRQYXRoID8gbWF0Y2hQYXRoKGN1cnJlbnRMb2NhdGlvbi5wYXRobmFtZSwge1xuICAgICAgcGF0aDogZXNjYXBlZFBhdGgsXG4gICAgICBleGFjdDogZXhhY3QsXG4gICAgICBzZW5zaXRpdmU6IHNlbnNpdGl2ZSxcbiAgICAgIHN0cmljdDogc3RyaWN0XG4gICAgfSkgOiBudWxsO1xuICAgIHZhciBpc0FjdGl2ZSA9ICEhKGlzQWN0aXZlUHJvcCA/IGlzQWN0aXZlUHJvcChtYXRjaCwgY3VycmVudExvY2F0aW9uKSA6IG1hdGNoKTtcbiAgICB2YXIgY2xhc3NOYW1lID0gaXNBY3RpdmUgPyBqb2luQ2xhc3NuYW1lcyhjbGFzc05hbWVQcm9wLCBhY3RpdmVDbGFzc05hbWUpIDogY2xhc3NOYW1lUHJvcDtcbiAgICB2YXIgc3R5bGUgPSBpc0FjdGl2ZSA/IF9leHRlbmRzKHt9LCBzdHlsZVByb3AsIHt9LCBhY3RpdmVTdHlsZSkgOiBzdHlsZVByb3A7XG5cbiAgICB2YXIgcHJvcHMgPSBfZXh0ZW5kcyh7XG4gICAgICBcImFyaWEtY3VycmVudFwiOiBpc0FjdGl2ZSAmJiBhcmlhQ3VycmVudCB8fCBudWxsLFxuICAgICAgY2xhc3NOYW1lOiBjbGFzc05hbWUsXG4gICAgICBzdHlsZTogc3R5bGUsXG4gICAgICB0bzogdG9Mb2NhdGlvblxuICAgIH0sIHJlc3QpOyAvLyBSZWFjdCAxNSBjb21wYXRcblxuXG4gICAgaWYgKGZvcndhcmRSZWZTaGltJDEgIT09IGZvcndhcmRSZWYkMSkge1xuICAgICAgcHJvcHMucmVmID0gZm9yd2FyZGVkUmVmIHx8IGlubmVyUmVmO1xuICAgIH0gZWxzZSB7XG4gICAgICBwcm9wcy5pbm5lclJlZiA9IGlubmVyUmVmO1xuICAgIH1cblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KExpbmssIHByb3BzKTtcbiAgfSk7XG59KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBOYXZMaW5rLmRpc3BsYXlOYW1lID0gXCJOYXZMaW5rXCI7XG4gIHZhciBhcmlhQ3VycmVudFR5cGUgPSBQcm9wVHlwZXMub25lT2YoW1wicGFnZVwiLCBcInN0ZXBcIiwgXCJsb2NhdGlvblwiLCBcImRhdGVcIiwgXCJ0aW1lXCIsIFwidHJ1ZVwiXSk7XG4gIE5hdkxpbmsucHJvcFR5cGVzID0gX2V4dGVuZHMoe30sIExpbmsucHJvcFR5cGVzLCB7XG4gICAgXCJhcmlhLWN1cnJlbnRcIjogYXJpYUN1cnJlbnRUeXBlLFxuICAgIGFjdGl2ZUNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBhY3RpdmVTdHlsZTogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgZXhhY3Q6IFByb3BUeXBlcy5ib29sLFxuICAgIGlzQWN0aXZlOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBzZW5zaXRpdmU6IFByb3BUeXBlcy5ib29sLFxuICAgIHN0cmljdDogUHJvcFR5cGVzLmJvb2wsXG4gICAgc3R5bGU6IFByb3BUeXBlcy5vYmplY3RcbiAgfSk7XG59XG5cbmV4cG9ydCB7IEJyb3dzZXJSb3V0ZXIsIEhhc2hSb3V0ZXIsIExpbmssIE5hdkxpbmsgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlYWN0LXJvdXRlci1kb20uanMubWFwXG4iLCJleHBvcnQgdHlwZSBhbnlvYmogPSBSZWNvcmQ8c3RyaW5nLCBhbnk+O1xyXG5leHBvcnQgaW50ZXJmYWNlIFBlcnNvbkluZm8ge1xyXG4gICAgTmFtZTogc3RyaW5nLFxyXG4gICAgSWQ6IHN0cmluZyxcclxuICAgIFtwcm9wczogc3RyaW5nXTogYW55LFxyXG59XHJcbmV4cG9ydCB0eXBlIEVtZXJneUxldmFsID0gJ0xvdycgfCBcIk5vcm1hbFwiIHwgXCJVcmdlbnRcIiB8ICdFeHRyZW1lVXJnZW50JztcclxuZXhwb3J0IGludGVyZmFjZSBUYXNrIHtcclxuICAgIFRpdGxlOiBzdHJpbmcsXHJcbiAgICBQZXJzb246IFBlcnNvbkluZm8sXHJcbiAgICBFeHBpcmVUaW1lOiBEYXRlLFxyXG4gICAgaWZGaW5pc2hlZD86IGJvb2xlYW4sXHJcbiAgICBNZW1vPzogc3RyaW5nLFxyXG4gICAgQXR0YWNoZWRGaWxlcz86IEFycmF5PEZpbGU+O1xyXG4gICAgT3RoZXJQYXJ0aWNpcGFudHM/OiBBcnJheTxzdHJpbmc+O1xyXG4gICAgRW1lcmd5TGV2YWw/OiBFbWVyZ3lMZXZhbDtcclxufVxyXG5leHBvcnQgY2xhc3MgUmVhbFRhc2sge1xyXG4gICAgVGl0bGU6IHN0cmluZyA9IFwiXCI7XHJcbiAgICBQZXJzb246IFBlcnNvbkluZm9cclxuICAgIEV4cGlyZVRpbWU6IERhdGVcclxuICAgIGlmRmluaXNoZWQ6IGJvb2xlYW4gPSBmYWxzZTtcclxuICAgIE1lbW86IHN0cmluZyA9IFwiXCJcclxuICAgIEF0dGFjaGVkRmlsZXM6IEFycmF5PEZpbGU+ID0gW11cclxuICAgIE90aGVyUGFydGljaXBhbnRzOiBBcnJheTxzdHJpbmc+ID0gW11cclxuICAgIEVtZXJneUxldmFsOiBFbWVyZ3lMZXZhbCA9IFwiTG93XCJcclxuICAgIGNvbnN0cnVjdG9yKHBhcmFtOiBUYXNrKSB7XHJcbiAgICAgICAgdGhpcy5UaXRsZSA9IHBhcmFtLlRpdGxlO1xyXG4gICAgICAgIHRoaXMuUGVyc29uID0gcGFyYW0uUGVyc29uO1xyXG4gICAgICAgIHRoaXMuRXhwaXJlVGltZSA9IHBhcmFtLkV4cGlyZVRpbWU7XHJcbiAgICAgICAgdGhpcy5NZW1vID0gcGFyYW0uTWVtbyA/IHBhcmFtLk1lbW8gOiB0aGlzLk1lbW87XHJcbiAgICAgICAgdGhpcy5BdHRhY2hlZEZpbGVzID0gcGFyYW0uQXR0YWNoZWRGaWxlcyA/IFsuLi5wYXJhbS5BdHRhY2hlZEZpbGVzXSA6IHRoaXMuQXR0YWNoZWRGaWxlcztcclxuICAgICAgICB0aGlzLk90aGVyUGFydGljaXBhbnRzID0gcGFyYW0uT3RoZXJQYXJ0aWNpcGFudHMgPyBbLi4ucGFyYW0uT3RoZXJQYXJ0aWNpcGFudHNdIDogdGhpcy5PdGhlclBhcnRpY2lwYW50cztcclxuICAgICAgICB0aGlzLkVtZXJneUxldmFsID0gcGFyYW0uRW1lcmd5TGV2YWwgPyBwYXJhbS5FbWVyZ3lMZXZhbCA6IHRoaXMuRW1lcmd5TGV2YWw7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCB0eXBlIFRpbWVyVHlwZSA9IFJldHVyblR5cGU8dHlwZW9mIHNldEludGVydmFsPjtcclxuXHJcbmV4cG9ydCBlbnVtIERheURpY3Qge1xyXG4gICAgXCLmmJ/mnJ/kuIBcIiwgXCLmmJ/mnJ/kuoxcIiwgXCLmmJ/mnJ/kuIlcIiwgXCLmmJ/mnJ/lm5tcIiwgXCLmmJ/mnJ/kupRcIiwgXCLmmJ/mnJ/lha1cIiwgXCLmmJ/mnJ/ml6VcIlxyXG59XHJcbmV4cG9ydCB0eXBlIFRvZG9JdGVtU3RhdHVzVHlwZSA9IFwi5bey6YC+5pyfXCIgfCBcIuacquadpeS4g+WkqVwiIHwgXCLku6XlkI5cIiB8IFwi5bey5a6M5oiQXCI7XHJcblxyXG5leHBvcnQgY29uc3QgRGF5TGVuZ3RoOiBudW1iZXIgPSA2MCAqIDI0ICogNjAgKiAxMDAwOyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcclxuaW1wb3J0IHtMaW5rfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJ1xyXG5pbXBvcnQgeyBUYXNrLCBEYXlEaWN0LCBUb2RvSXRlbVN0YXR1c1R5cGUgfSBmcm9tICcuL3R5cGVzJ1xyXG5pbXBvcnQgcXMgZnJvbSAncXVlcnktc3RyaW5nJ1xyXG5pbXBvcnQgJy4vc3R5bGVzL3N0eWxlLmxlc3MnXHJcbmNvbnN0IGFsZXJ0VGV4dENvbG9yID0gXCJyZ2IoMjEzLDEyMiwxMDcpXCI7XHJcbmNvbnN0IG5vcm1hbFRleHRDb2xvciA9IFwicmdiKDEwOSwxMjEsMTIzKVwiXHJcbmNvbnN0IG5vcm1hbEJsdWUgPSBcInJnYig5OCwgMTUxLCAyMDQpXCI7XHJcbmNvbnN0IGJhY2tncm91bmRDb2xvciA9IFwid2hpdGVcIjtcclxuXHJcbmludGVyZmFjZSBUb2RvSXRlbVByb3BzIHtcclxuICAgIGZyZXNoVGFza3NMaXN0PzogKGl0ZW06IFRhc2spID0+IHZvaWQ7XHJcbiAgICBkZXNjcmlwdGlvbjogVG9kb0l0ZW1TdGF0dXNUeXBlLFxyXG4gICAgaXRlbTogVGFzaztcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVG9kb0l0ZW0gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQ8VG9kb0l0ZW1Qcm9wcywge30+IHtcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihwcm9wczogVG9kb0l0ZW1Qcm9wcykge1xyXG4gICAgICAgIHN1cGVyKHByb3BzKTtcclxuICAgIH1cclxuXHJcbiAgICBoYW5kbGVCdG5DbGlja0l0ZW1GaW5pc2hlZCgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnByb3BzLmZyZXNoVGFza3NMaXN0ISh0aGlzLnByb3BzLml0ZW0pO1xyXG4gICAgfVxyXG5cclxuICAgIGNhbGN1bGF0ZURhdGVUZXh0KCk6IHN0cmluZyB7XHJcbiAgICAgICAgY29uc3QgZXhwaXJlVGltZSA9IHRoaXMucHJvcHMuaXRlbS5FeHBpcmVUaW1lO1xyXG4gICAgICAgIHN3aXRjaCAodGhpcy5wcm9wcy5kZXNjcmlwdGlvbikge1xyXG4gICAgICAgICAgICBjYXNlIFwi5bey6YC+5pyfXCI6IHJldHVybiBEYXlEaWN0W2V4cGlyZVRpbWUuZ2V0RGF5KCldICsgXCIgIOaIquatolwiO1xyXG4gICAgICAgICAgICBjYXNlIFwi5pyq5p2l5LiD5aSpXCI6IHJldHVybiBEYXlEaWN0W2V4cGlyZVRpbWUuZ2V0RGF5KCldICsgXCIgIOaIquatolwiO1xyXG4gICAgICAgICAgICBjYXNlIFwi5Lul5ZCOXCI6IHJldHVybiBleHBpcmVUaW1lLmdldE1vbnRoKCkgKyBcIuaciFwiICsgZXhwaXJlVGltZS5nZXREYXRlKCkgKyBcIuaXpVwiICsgXCIgIOaIquatolwiO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gXCJcIjtcclxuICAgIH1cclxuXHJcbiAgICBjYWxjdWxhdGVUZXh0Q29sb3IoKTogc3RyaW5nIHtcclxuICAgICAgICBpZiAodGhpcy5wcm9wcy5kZXNjcmlwdGlvbiA9PSBcIuW3sumAvuacn1wiKSByZXR1cm4gYWxlcnRUZXh0Q29sb3I7XHJcbiAgICAgICAgcmV0dXJuIG5vcm1hbFRleHRDb2xvcjtcclxuICAgIH1cclxuICAgIHJlbmRlcigpIHtcclxuICAgICAgICByZXR1cm4gKFxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lID0gXCJyZWxhdGl2ZS1wb3NpdGlvbiB0b2RvLWNvbnRlbnQtYm94XCI+XHJcbiAgICAgICAgICAgIDxMaW5rICB0bz17YC9lZGl0SXRlbT8ke3FzLnN0cmluZ2lmeSh0aGlzLnByb3BzLml0ZW0pfWB9PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBzdHlsZSA9IHt7aGVpZ2h0OlwiODBweFwifX0+XHJcbiAgICAgICAgICAgICAgICA8c3BhbiBcclxuICAgICAgICAgICAgICAgICAgICBzdHlsZT17XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiBub3JtYWxCbHVlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAgICAgICAge3RoaXMucHJvcHMuaXRlbS5QZXJzb24uTmFtZX1cclxuICAgICAgICAgICAgICAgIDwvc3Bhbj5cclxuICAgICAgICAgICAgICAgIDxzcGFuXHJcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU9e1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogbm9ybWFsVGV4dENvbG9yXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH19XHJcbiAgICAgICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAgICAgICAge3RoaXMucHJvcHMuaXRlbS5UaXRsZX1cclxuICAgICAgICAgICAgICAgIDwvc3Bhbj5cclxuICAgICAgICAgICAgICAgIDxzcGFuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImFic29sdXRlLXBvc2l0aW9uXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiB0aGlzLmNhbGN1bGF0ZVRleHRDb2xvcigpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJpZ2h0OiBcIjEwcHhcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b3A6IFwiNXB4XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fVxyXG4gICAgICAgICAgICAgICAgICAgID5cclxuICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY2FsY3VsYXRlRGF0ZVRleHQoKX1cclxuICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPC9MaW5rPlxyXG4gICAgICAgICAgICA8YnV0dG9uXHJcbiAgICAgICAgICAgICAgICBkaXNhYmxlZD17dGhpcy5wcm9wcy5pdGVtLmlmRmluaXNoZWR9XHJcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2Ake3RoaXMucHJvcHMuaXRlbS5pZkZpbmlzaGVkID8gJ2J1dHRvbi1zdHlsZW9rJyA6ICdidXR0b24tc3R5bGUnfSBhYnNvbHV0ZS1wb3NpdGlvbmB9XHJcbiAgICAgICAgICAgICAgICBzdHlsZT17XHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByaWdodDogXCIxMHB4XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvdHRvbTogXCIxMHB4XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgfX1cclxuICAgICAgICAgICAgICAgIG9uQ2xpY2s9e3RoaXMuaGFuZGxlQnRuQ2xpY2tJdGVtRmluaXNoZWQuYmluZCh0aGlzKX0+5a6M5oiQXHJcbiAgICAgICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIClcclxuICAgIH1cclxufSIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJpbWFnZXMvcmlnaHRfYWZjZjNjOTA1Njc5YWNhMjFhYmQ0YTNmMTg2MjA4MmEucG5nXCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImltYWdlcy9kb3duXzRjZTdiMzI0YzAxNWI1OTVkMTYyNjBlMzRkOWY0NzY1LnBuZ1wiOyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcclxuaW1wb3J0IHsgVGFzaywgVG9kb0l0ZW1TdGF0dXNUeXBlIH0gZnJvbSAnLi90eXBlcydcclxuaW1wb3J0IFRvZG9JdGVtIGZyb20gJy4vVG9kb0l0ZW0nXHJcbmltcG9ydCByaWdodEljb24gZnJvbSBcIi4vaWNvbnMvcmlnaHQucG5nXCI7XHJcbmltcG9ydCBkb3duSWNvbiBmcm9tIFwiLi9pY29ucy9kb3duLnBuZ1wiO1xyXG5pbXBvcnQgXCIuL3N0eWxlcy9zdHlsZS5sZXNzXCJcclxuXHJcbmludGVyZmFjZSBUb2RvSXRlbUxpc3RQcm9wcyB7XHJcbiAgICBmcmVzaFRhc2tzTGlzdDogKGl0ZW06IFRhc2spID0+IHZvaWRcclxuICAgIGRlc2NyaXB0aW9uOiBUb2RvSXRlbVN0YXR1c1R5cGUsXHJcbiAgICBsaXN0OiBUYXNrW10sXHJcbn1cclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUb2RvSXRlbUxpc3QgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQ8VG9kb0l0ZW1MaXN0UHJvcHMsIHt9PiB7XHJcbiAgICBpZnNob3dMaXN0OiBib29sZWFuID0gZmFsc2U7XHJcbiAgICBJY29uID0gcmlnaHRJY29uO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHByb3BzOiBUb2RvSXRlbUxpc3RQcm9wcykge1xyXG4gICAgICAgIHN1cGVyKHByb3BzKTtcclxuICAgIH1cclxuXHJcbiAgICBoYW5kbGVJdGVtRmluaXNoZWQoaXRlbTogVGFzaykge1xyXG4gICAgfVxyXG5cclxuICAgIGhhbmRsZUNsaWNrSGlkZSgpIHtcclxuICAgICAgICB0aGlzLkljb24gPSB0aGlzLkljb24gPT0gZG93bkljb24gPyByaWdodEljb24gOiBkb3duSWNvbjtcclxuICAgICAgICB0aGlzLmlmc2hvd0xpc3QgPSAhdGhpcy5pZnNob3dMaXN0O1xyXG4gICAgfVxyXG4gICAgZnJlc2hUYXNrc0xpc3QoaXRlbTogVGFzayk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMucHJvcHMuZnJlc2hUYXNrc0xpc3QoaXRlbSk7XHJcbiAgICB9XHJcbiAgICByZW5kZXIoKSB7XHJcbiAgICAgICAgcmV0dXJuICg8PlxyXG4gICAgICAgICAgICA8ZGl2IG9uQ2xpY2s9e3RoaXMuaGFuZGxlQ2xpY2tIaWRlLmJpbmQodGhpcyl9PlxyXG4gICAgICAgICAgICAgICAgPGltZyBjbGFzc05hbWU9XCJpY29uXCIgc3JjPXt0aGlzLkljb259IGFsdD1cImRvd25cIiAvPlxyXG4gICAgICAgICAgICAgICAgPGI+e3RoaXMucHJvcHMuZGVzY3JpcHRpb259PC9iPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgey8qIOimgea4suafk+eahOWIl+ihqCAqL31cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3RoaXMuaWZzaG93TGlzdCA/IFwic2hvd1wiIDogXCJoaWRlXCJ9PlxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMucHJvcHMubGlzdC5tYXAoKGl0ZW0pID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDxUb2RvSXRlbVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb249e3RoaXMucHJvcHMuZGVzY3JpcHRpb259XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk9e2l0ZW0uVGl0bGV9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtPXtpdGVtfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZnJlc2hUYXNrc0xpc3Q9e3RoaXMuZnJlc2hUYXNrc0xpc3QuYmluZCh0aGlzKX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8Lz4pXHJcbiAgICB9XHJcbn1cclxuLy/ms6jmhI/muLLmn5PliJfooajkuK3mraTml7bnmoRrZXnkuI3mmK/lvojlkIjpgIIiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiaW1hZ2VzL2FkZF84OWM3NzE0YzdlMTQ1M2JiMzFiOGFmNTkxYTk4YTAyMC5wbmdcIjsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXHJcbmltcG9ydCBUb2RvSXRlbUxpc3QgZnJvbSAnLi9Ub2RvSXRlbUxpc3QnXHJcbmltcG9ydCB7ICBUYXNrLCBUaW1lclR5cGUgfSBmcm9tICcuL3R5cGVzJ1xyXG5pbXBvcnQgeyBEYXlMZW5ndGggfSBmcm9tICcuL2dsb2JhbCdcclxuaW1wb3J0ICcuL3N0eWxlcy9zdHlsZS5sZXNzJ1xyXG5pbXBvcnQgeyBMaW5rIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSdcclxuaW1wb3J0IEFkZEJ0biBmcm9tICcuL2ljb25zL2FkZC5wbmcnXHJcblxyXG5cclxuaW50ZXJmYWNlIFRvZG9Db21wb25lbnRQcm9wcyB7XHJcbiAgICBmcmVzaFRhc2tzTGlzdDogKGl0ZW06IFRhc2spID0+IHZvaWQsXHJcbiAgICBUYXNrc0xpc3Q6IFRhc2tbXTtcclxufVxyXG5pbnRlcmZhY2UgVG9kb1N0YXRlcyB7XHJcbiAgICBUYXNrc0xpc3Q6IFRhc2tbXTtcclxuICAgIGN1cnJlbnRUaW1lOiBudW1iZXI7XHJcbn1cclxuXHJcbmNsYXNzIFRvZG9Db21wb25lbnQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQ8VG9kb0NvbXBvbmVudFByb3BzLCBUb2RvU3RhdGVzPiB7XHJcblxyXG4gICAgdGltZXI6IFRpbWVyVHlwZSB8IG51bGwgPSBudWxsO1xyXG4gICAgc3RhdGU6IFRvZG9TdGF0ZXMgPSB7XHJcbiAgICAgICAgVGFza3NMaXN0OiBbXSxcclxuICAgICAgICBjdXJyZW50VGltZTogRGF0ZS5ub3coKSxcclxuICAgIH1cclxuXHJcbiAgICBjb21wb25lbnREaWRNb3VudCgpIHtcclxuICAgICAgICB0aGlzLnNldFN0YXRlKHtcclxuICAgICAgICAgICAgVGFza3NMaXN0OiB0aGlzLnByb3BzLlRhc2tzTGlzdC5maWx0ZXIoKGl0ZW0pID0+IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiAhaXRlbS5pZkZpbmlzaGVkO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgdGhpcy50aW1lciA9IHNldEludGVydmFsKCgpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XHJcbiAgICAgICAgICAgICAgICBjdXJyZW50VGltZTogRGF0ZS5ub3coKVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH0sIDEpO1xyXG4gICAgICAgIC8vIOW+iOWlh+aAqui/meS4quaVsOWtl+S4gOWkp+WwseWxleW8gOW+iOaFou+8jOS4jeefpemBk+S4uuWVpVxyXG4gICAgfVxyXG5cclxuICAgIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xyXG4gICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy50aW1lciEpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgZ2V0RXhwaXJlVGFza3MoKTogVGFza1tdIHtcclxuICAgICAgICBjb25zdCBjdXJyZW50VGltZSA9IHRoaXMuc3RhdGUuY3VycmVudFRpbWU7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhdGUuVGFza3NMaXN0LmZpbHRlcigoaXRlbSkgPT4ge1xyXG4gICAgICAgICAgICByZXR1cm4gaXRlbS5FeHBpcmVUaW1lLmdldFRpbWUoKSA8IGN1cnJlbnRUaW1lO1xyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBnZXRJbjdEYXlzVGFza3MoKTogVGFza1tdIHtcclxuICAgICAgICBjb25zdCBjdXJyZW50VGltZSA9IHRoaXMuc3RhdGUuY3VycmVudFRpbWU7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhdGUuVGFza3NMaXN0LmZpbHRlcigoaXRlbSkgPT4ge1xyXG4gICAgICAgICAgICByZXR1cm4gaXRlbS5FeHBpcmVUaW1lLmdldFRpbWUoKSA8PSAoY3VycmVudFRpbWUgKyA3ICogRGF5TGVuZ3RoKVxyXG4gICAgICAgICAgICAgICAgJiYgaXRlbS5FeHBpcmVUaW1lLmdldFRpbWUoKSA+PSBjdXJyZW50VGltZTtcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgZ2V0RnV0dXJlQ29taW5nVGFzaygpOiBUYXNrW10ge1xyXG4gICAgICAgIGNvbnN0IGN1cnJlbnRUaW1lID0gdGhpcy5zdGF0ZS5jdXJyZW50VGltZTtcclxuICAgICAgICByZXR1cm4gdGhpcy5zdGF0ZS5UYXNrc0xpc3QuZmlsdGVyKChpdGVtKSA9PiB7XHJcbiAgICAgICAgICAgIHJldHVybiBpdGVtLkV4cGlyZVRpbWUuZ2V0VGltZSgpID4gKGN1cnJlbnRUaW1lICsgNyAqIERheUxlbmd0aCk7XHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuICAgIGZyZXNoVGFza3NMaXN0KGl0ZW06IFRhc2spOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnByb3BzLmZyZXNoVGFza3NMaXN0KGl0ZW0pO1xyXG4gICAgfVxyXG5cclxuICAgIHJlbmRlcigpIHtcclxuICAgICAgICByZXR1cm4gKDw+XHJcbiAgICAgICAgICAgIDxUb2RvSXRlbUxpc3RcclxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uPXtcIuW3sumAvuacn1wifVxyXG4gICAgICAgICAgICAgICAgbGlzdD17dGhpcy5nZXRFeHBpcmVUYXNrcygpfVxyXG4gICAgICAgICAgICAgICAgZnJlc2hUYXNrc0xpc3Q9e3RoaXMuZnJlc2hUYXNrc0xpc3QuYmluZCh0aGlzKX1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPFRvZG9JdGVtTGlzdFxyXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb249e1wi5pyq5p2l5LiD5aSpXCJ9XHJcbiAgICAgICAgICAgICAgICBsaXN0PXt0aGlzLmdldEluN0RheXNUYXNrcygpfVxyXG4gICAgICAgICAgICAgICAgZnJlc2hUYXNrc0xpc3Q9e3RoaXMuZnJlc2hUYXNrc0xpc3QuYmluZCh0aGlzKX1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPFRvZG9JdGVtTGlzdFxyXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb249e1wi5Lul5ZCOXCJ9XHJcbiAgICAgICAgICAgICAgICBsaXN0PXt0aGlzLmdldEZ1dHVyZUNvbWluZ1Rhc2soKX1cclxuICAgICAgICAgICAgICAgIGZyZXNoVGFza3NMaXN0PXt0aGlzLmZyZXNoVGFza3NMaXN0LmJpbmQodGhpcyl9XHJcbiAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaW5saW5lLWNlbnRlclwiPlxyXG4gICAgICAgICAgICAgICAgPExpbmsgdG89XCIvVmlzaXRGaW5pc2hlZFwiID5cclxuICAgICAgICAgICAgICAgICAgICB7XCLlt7LlpITnkIbnmoTlvoXlip4gPlwifVxyXG4gICAgICAgICAgICAgICAgPC9MaW5rPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPExpbmsgdG89XCIvVmlzaXRGaW5pc2hlZFwiPlxyXG4gICAgICAgICAgICAgICAgPGltZyBjbGFzc05hbWU9XCJhZGQtYnRuaWNvblwiIHNyYz17QWRkQnRufSBhbHQ9XCJBZGQgVG9kb0l0ZW1cIiAvPlxyXG4gICAgICAgICAgICA8L0xpbms+XHJcblxyXG4gICAgICAgIDwvPilcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgVG9kb0NvbXBvbmVudCIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJpbWFnZXMvYmFja19kY2IxNmZhYWRlZDIzMDE1MDhkZTYxZjVhM2QyMzA3ZC5wbmdcIjsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXHJcbmltcG9ydCB7IExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJ1xyXG5pbXBvcnQgVG9kb0l0ZW0gZnJvbSAnLi9Ub2RvSXRlbSdcclxuaW1wb3J0IHsgVGFzayB9IGZyb20gJy4vdHlwZXMnXHJcbmltcG9ydCBiYWNrIGZyb20gJy4vaWNvbnMvYmFjay5wbmcnXHJcbmludGVyZmFjZSBGaW5pc2hlZFRvZG9Qcm9wcyB7XHJcbiAgICBUYXNrc0xpc3Q6IFRhc2tbXSxcclxufVxyXG5pbnRlcmZhY2UgRmluaXNoZWRUb2RvU3RhdGUge1xyXG4gICAgVGFza3NMaXN0OiBUYXNrW10sXHJcbn1cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRmluaXNoZWRUb2RvIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50PEZpbmlzaGVkVG9kb1Byb3BzLCBGaW5pc2hlZFRvZG9TdGF0ZT4ge1xyXG4gICAgc3RhdGUgPSB7XHJcbiAgICAgICAgVGFza3NMaXN0OiBbXVxyXG4gICAgfVxyXG5cclxuICAgIGNvbXBvbmVudERpZE1vdW50KCkge1xyXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIFRhc2tzTGlzdDogdGhpcy5wcm9wcy5UYXNrc0xpc3QuZmlsdGVyKChpdGVtKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGl0ZW0uaWZGaW5pc2hlZDtcclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICApXHJcbiAgICB9XHJcblxyXG4gICAgcmVuZGVyKCkge1xyXG4gICAgICAgIHJldHVybiA8PlxyXG4gICAgICAgICAgICA8TGluayB0bz1cIi9cIj48aW1nIHNyYz17YmFja30gY2xhc3NOYW1lPVwiaWNvblwiIGFsdD1cImJhY2tcIiAvPiBCYWNrPC9MaW5rPlxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnN0YXRlLlRhc2tzTGlzdC5tYXAoKGl0ZW06IFRhc2spID0+XHJcbiAgICAgICAgICAgICAgICAgICAgPFRvZG9JdGVtIGtleT17aXRlbS5UaXRsZX0gZGVzY3JpcHRpb249XCLlt7LlrozmiJBcIiBpdGVtPXtpdGVtfSAvPilcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIDwvPlxyXG4gICAgfVxyXG59IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImltYWdlcy9wZXJzb25fYThhM2FmNTRmODE4MmRlNjE3OTg3MjA3NDQzYjE2MzQucG5nXCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImltYWdlcy9wcmlvcml0eS1oaWdoXzhjYWZkNzA4NjhhZTc4MDBlNzVkMWMxZjk5ZTYyYjJhLnBuZ1wiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJpbWFnZXMvcGFydGljaXBhbnRzXzg3ZTQxNmE2M2QxMmIzZWI2NzA1NzIzODI4MGM3YjRmLnBuZ1wiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJpbWFnZXMvbWVtb181ZTU1NjJiYWZkMzE0NjFkZDM4MWNiM2U1NGJmODFjYi5wbmdcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiaW1hZ2VzL2Nsb2NrXzM3NWMyY2Q5OTY2MjZiNGYyOTA2Y2IxMDU1NzNhZTdmLnBuZ1wiOyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcclxuaW1wb3J0IHFzIGZyb20gJ3F1ZXJ5LXN0cmluZydcclxuaW1wb3J0IHsgTGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nXHJcbmltcG9ydCB7IFRhc2ssIEVtZXJneUxldmFsIH0gZnJvbSAnLi90eXBlcydcclxuaW1wb3J0ICcuL3N0eWxlcy9zdHlsZS5sZXNzJ1xyXG5pbXBvcnQgcGVyc29uSWNvbiBmcm9tICcuL2ljb25zL3BlcnNvbi5wbmcnXHJcbmltcG9ydCBwcmlvcml0eUljb24gZnJvbSAnLi9pY29ucy9wcmlvcml0eS1oaWdoLnBuZydcclxuaW1wb3J0IHBhcnRpY2lwYW50SWNvbiBmcm9tICcuL2ljb25zL3BhcnRpY2lwYW50cy5wbmcnXHJcbmltcG9ydCBtZW1vSWNvbiBmcm9tICcuL2ljb25zL21lbW8ucG5nJ1xyXG5pbXBvcnQgY2xvY2tJY29uIGZyb20gJy4vaWNvbnMvY2xvY2sucG5nJ1xyXG5pbXBvcnQgYmFjayBmcm9tICcuL2ljb25zL2JhY2sucG5nJ1xyXG5cclxuaW50ZXJmYWNlIEVkaXRUb2RvSXRlbVByb3BzIHtcclxuICAgIFRhc2tzTGlzdDogVGFza1tdO1xyXG4gICAgaGFuZGxlUmVmcmVzaFRhc2tzTGlzdDogKGluZGV4OiBudW1iZXIsIG5ld1ZhbDogVGFzaykgPT4gdm9pZDtcclxufVxyXG50eXBlIEVkaXRUb2RvSXRlbVN0YXRlID0gVGFzaztcclxuXHJcbi8v6L+Z5Liq57uE5Lu26ZyA6KaB5qC55o2u6Lev55Sx5Y+Y5YyW55u45bqU5pu05pawXHJcbmNsYXNzIEVkaXRUb2RvSXRlbSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudDxFZGl0VG9kb0l0ZW1Qcm9wcywgRWRpdFRvZG9JdGVtU3RhdGU+IHtcclxuICAgIHRhcmdldDogRWRpdFRvZG9JdGVtU3RhdGUgfCB1bmRlZmluZWQgPSB1bmRlZmluZWRcclxuICAgIGluZGV4OiBudW1iZXIgPSAtMTtcclxuICAgIGNvbnN0cnVjdG9yKHByb3BzOiBFZGl0VG9kb0l0ZW1Qcm9wcykge1xyXG4gICAgICAgIHN1cGVyKHByb3BzKTtcclxuICAgICAgICB0aGlzLnByb3BzLlRhc2tzTGlzdC5mb3JFYWNoKChpdGVtLCBpbmRleCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAocXMuc3RyaW5naWZ5KGl0ZW0pID09IGdsb2JhbFRoaXMubG9jYXRpb24uc2VhcmNoLnNsaWNlKDEpKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnRhcmdldCA9IHRoaXMucHJvcHMuVGFza3NMaXN0W2luZGV4XTtcclxuICAgICAgICAgICAgICAgIHRoaXMuaW5kZXggPSBpbmRleDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcblxyXG4gICAgfVxyXG4gICAgY29tcG9uZW50RGlkTW91bnQoKSB7XHJcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XHJcbiAgICAgICAgICAgIC4uLnRoaXMudGFyZ2V0IVxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcbiAgICBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcclxuICAgICAgICB0aGlzLnByb3BzLmhhbmRsZVJlZnJlc2hUYXNrc0xpc3QodGhpcy5pbmRleCwgeyAuLi50aGlzLnN0YXRlIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHJlbmRlcigpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5zdGF0ZSAmJlxyXG4gICAgICAgICAgICAoPD5cclxuICAgICAgICAgICAgICAgIDxMaW5rIHRvPVwiL1wiPjxpbWcgc3JjPXtiYWNrfSBjbGFzc05hbWU9XCJpY29uXCIgYWx0PVwiYmFja1wiIC8+IEJhY2s8L0xpbms+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImVkaXQtYmxvY2tcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIml0ZW1cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGgxPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tlZD17dGhpcy5zdGF0ZS5pZkZpbmlzaGVkfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChlKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGUudGFyZ2V0LnZhbHVlKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZkZpbmlzaGVkOiBlLnRhcmdldC5jaGVja2VkXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAvPnt0aGlzLnN0YXRlLlRpdGxlfTwvaDE+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJpdGVtXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPXtwZXJzb25JY29ufSBhbHQ9XCJwZXJzb25JY29uXCIgLz5cclxuICAgICAgICAgICAgICAgICAgICAgICAg5omn6KGM5Lq6OiA8aW5wdXQgdHlwZT1cInRleHRcIiB2YWx1ZT17dGhpcy5zdGF0ZS5QZXJzb24uTmFtZX0gLz5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIml0ZW1cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9e2Nsb2NrSWNvbn0gYWx0PVwiY2xvY2tJY29uXCIgLz5cclxuICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuc3RhdGUuRXhwaXJlVGltZS50b0xvY2FsZURhdGVTdHJpbmcoKSArIFwi5oiq5q2iXCJ9XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJpdGVtXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPXttZW1vSWNvbn0gYWx0PVwibWVtb0ljb25cIiAvPuWkh+azqDpcclxuICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXt0aGlzLnN0YXRlLk1lbW99XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cIueCueatpOa3u+WKoOWkh+azqFwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTWVtbzogZS50YXJnZXQudmFsdWVcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfX0gLz5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIml0ZW1cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9e3ByaW9yaXR5SWNvbn0gYWx0PVwicHJpb3JpdHlJY29uXCIgLz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHNlbGVjdFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT17XCJwcmlvcml0eVwifVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e3RoaXMuc3RhdGUuRW1lcmd5TGV2YWx9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IEVtZXJneUxldmFsOiBlLnRhcmdldC52YWx1ZSBhcyBFbWVyZ3lMZXZhbCB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIkxvd1wiPui+g+S9jjwvb3B0aW9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIk5vcm1hbFwiPuaZrumAmjwvb3B0aW9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIlVyZ2VudFwiPue0p+aApTwvb3B0aW9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIkV4dHJlbWVVcmdlbnRcIj7pnZ7luLjntKfmgKU8L29wdGlvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9zZWxlY3Q+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJpdGVtXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPXtwYXJ0aWNpcGFudEljb259IGFsdD1cInBhcnRpY2lwYW50SWNvblwiIC8+5Y+C5LiO5Lq6OjxzcGFuPnt0aGlzLnN0YXRlLlBlcnNvbi5OYW1lfTwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPC8+KVxyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBFZGl0VG9kb0l0ZW0iLCJpbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQgeyBCcm93c2VyUm91dGVyIGFzIFJvdXRlciwgUm91dGUsIExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJ1xyXG5cclxuaW1wb3J0IHsgVGFzayB9IGZyb20gJy4vY29tcG9uZW50cy9Ub2RvL3R5cGVzJ1xyXG5pbXBvcnQgeyBwcm9kdWNlRGF0YSB9IGZyb20gJy4vY29tcG9uZW50cy9Ub2RvL2dsb2JhbCdcclxuaW1wb3J0IHsgVG9kb0NvbXBvbmVudCBhcyBUb2RvLCBGaW5pc2hlZFRvZG8sIEVkaXRUb2RvSXRlbSB9IGZyb20gJy4vY29tcG9uZW50cy9Ub2RvJ1xyXG5cclxuY29uc3QgQXBwOiBSZWFjdC5GQzx7fT4gPSAoKSA9PiB7XHJcblxyXG4gICAgbGV0IFtkYXRhLCBzZXREYXRhXTogW1Rhc2tbXSwgYW55XSA9IHVzZVN0YXRlKFtdKTtcclxuXHJcblxyXG4gICAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgICAgICBzZXREYXRhKHByb2R1Y2VEYXRhKCkpO1xyXG4gICAgfSwgW10pO1xyXG5cclxuICAgIGNvbnN0IG1ha2VJdGVtRmluaXNoZWQgPSAodGFyZ2V0OiBUYXNrKSA9PiB7XHJcbiAgICAgICAgY29uc3QgZGF0YWNvcHkgPSBbLi4uZGF0YV1cclxuICAgICAgICBkYXRhLmZvckVhY2goKGl0ZW0sIGluZGV4KSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChpdGVtID09PSB0YXJnZXQpIHtcclxuICAgICAgICAgICAgICAgIGRhdGFjb3B5W2luZGV4XS5pZkZpbmlzaGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgc2V0RGF0YShkYXRhY29weSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIChcclxuXHJcbiAgICAgICAgPFJvdXRlcj5cclxuICAgICAgICAgICAgPFJvdXRlXHJcbiAgICAgICAgICAgICAgICBwYXRoPVwiL1wiXHJcbiAgICAgICAgICAgICAgICBleGFjdFxyXG4gICAgICAgICAgICAgICAgY29tcG9uZW50PXsoKSA9PiA8VG9kbyBUYXNrc0xpc3Q9e2RhdGF9IGZyZXNoVGFza3NMaXN0PXsodGFyZ2V0KSA9PiB7IG1ha2VJdGVtRmluaXNoZWQodGFyZ2V0KSB9fSAvPn0+XHJcbiAgICAgICAgICAgIDwvUm91dGU+XHJcbiAgICAgICAgICAgIDxSb3V0ZVxyXG4gICAgICAgICAgICAgICAgcGF0aD1cIi9WaXNpdEZpbmlzaGVkXCJcclxuICAgICAgICAgICAgICAgIHJlbmRlcj17KCkgPT4gPEZpbmlzaGVkVG9kbyBUYXNrc0xpc3Q9e2RhdGF9IC8+fT5cclxuICAgICAgICAgICAgPC9Sb3V0ZT5cclxuICAgICAgICAgICAgPFJvdXRlXHJcbiAgICAgICAgICAgICAgICBwYXRoPVwiL2VkaXRJdGVtXCJcclxuICAgICAgICAgICAgICAgIHJlbmRlcj17KCkgPT4gPEVkaXRUb2RvSXRlbSBUYXNrc0xpc3Q9e2RhdGF9XHJcbiAgICAgICAgICAgICAgICAgICAgaGFuZGxlUmVmcmVzaFRhc2tzTGlzdD17XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIChpbmRleDogbnVtYmVyLCBpdGVtOiBUYXNrKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaW5kZXggPT0gLTEpIHJldHVybjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG5ld0RhdGEgPSBbLi4uZGF0YV07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXdEYXRhW2luZGV4XSA9IGl0ZW07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXREYXRhKG5ld0RhdGEpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5kaXIoZGF0YSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH19IC8+fT5cclxuICAgICAgICAgICAgPC9Sb3V0ZT5cclxuICAgICAgICA8L1JvdXRlciA+XHJcblxyXG4gICAgKVxyXG59XHJcbmV4cG9ydCBkZWZhdWx0IEFwcDtcclxuIiwiaW1wb3J0IHtUYXNrLFBlcnNvbkluZm8sUmVhbFRhc2t9IGZyb20gJy4vdHlwZXMnXHJcblxyXG5leHBvcnQgY29uc3QgRGF5TGVuZ3RoIDpudW1iZXIgPSA2MCAqIDI0ICogNjAgKiAxMDAwO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHByb2R1Y2VEYXRhKCk6IFRhc2tbXSB7XHJcblxyXG4gIGxldCBUZXN0RGF0YTogVGFza1tdID0gW107XHJcbiAgY29uc3QgcGVyc29uMTogUGVyc29uSW5mbyA9IHtcclxuICAgICAgTmFtZTogXCLpob7mib/vvIjmiJHvvIlcIixcclxuICAgICAgSWQ6IFwiMDAwMDFcIixcclxuICB9XHJcbiAgVGVzdERhdGEucHVzaChuZXcgUmVhbFRhc2soe1xyXG4gICAgICBUaXRsZTogXCJUYXNrMVwiLFxyXG4gICAgICBQZXJzb246IHBlcnNvbjEsXHJcbiAgICAgIEV4cGlyZVRpbWU6IG5ldyBEYXRlKERhdGUubm93KCkgKyBEYXlMZW5ndGgpLFxyXG4gIH0pKVxyXG4gIFRlc3REYXRhLnB1c2gobmV3IFJlYWxUYXNrKHtcclxuICAgICAgVGl0bGU6IFwiVGFzazJcIixcclxuICAgICAgUGVyc29uOiBwZXJzb24xLFxyXG4gICAgICBFeHBpcmVUaW1lOiBuZXcgRGF0ZShEYXRlLm5vdygpICsgMiAqIERheUxlbmd0aCksXHJcbiAgICAgIE1lbW86IFwiTXVzdCBkbyBpdFwiLFxyXG4gIH0pKVxyXG4gIFRlc3REYXRhLnB1c2gobmV3IFJlYWxUYXNrKHtcclxuICAgICAgVGl0bGU6IFwiVGFzazNcIixcclxuICAgICAgUGVyc29uOiBwZXJzb24xLFxyXG4gICAgICBFeHBpcmVUaW1lOiBuZXcgRGF0ZShEYXRlLm5vdygpICsgMTAgKiBEYXlMZW5ndGgpLFxyXG4gICAgICBNZW1vOiBcIk11c3QgZG8gaXRcIixcclxuICB9KSlcclxuICByZXR1cm4gVGVzdERhdGE7XHJcbn0iLCJpbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJ1xyXG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCBBcHAgZnJvbSAnLi9BcHAnXHJcblxyXG5SZWFjdERPTS5yZW5kZXIoPEFwcCAvPiwgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhcHBcIikpO1xyXG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICBpZiAodHlwZW9mIGl0ICE9ICdmdW5jdGlvbicpIHRocm93IFR5cGVFcnJvcihpdCArICcgaXMgbm90IGEgZnVuY3Rpb24hJyk7XG4gIHJldHVybiBpdDtcbn07XG4iLCJ2YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmICghaXNPYmplY3QoaXQpKSB0aHJvdyBUeXBlRXJyb3IoaXQgKyAnIGlzIG5vdCBhbiBvYmplY3QhJyk7XG4gIHJldHVybiBpdDtcbn07XG4iLCIvLyBmYWxzZSAtPiBBcnJheSNpbmRleE9mXG4vLyB0cnVlICAtPiBBcnJheSNpbmNsdWRlc1xudmFyIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIHRvQWJzb2x1dGVJbmRleCA9IHJlcXVpcmUoJy4vX3RvLWFic29sdXRlLWluZGV4Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChJU19JTkNMVURFUykge1xuICByZXR1cm4gZnVuY3Rpb24gKCR0aGlzLCBlbCwgZnJvbUluZGV4KSB7XG4gICAgdmFyIE8gPSB0b0lPYmplY3QoJHRoaXMpO1xuICAgIHZhciBsZW5ndGggPSB0b0xlbmd0aChPLmxlbmd0aCk7XG4gICAgdmFyIGluZGV4ID0gdG9BYnNvbHV0ZUluZGV4KGZyb21JbmRleCwgbGVuZ3RoKTtcbiAgICB2YXIgdmFsdWU7XG4gICAgLy8gQXJyYXkjaW5jbHVkZXMgdXNlcyBTYW1lVmFsdWVaZXJvIGVxdWFsaXR5IGFsZ29yaXRobVxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgICBpZiAoSVNfSU5DTFVERVMgJiYgZWwgIT0gZWwpIHdoaWxlIChsZW5ndGggPiBpbmRleCkge1xuICAgICAgdmFsdWUgPSBPW2luZGV4KytdO1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZVxuICAgICAgaWYgKHZhbHVlICE9IHZhbHVlKSByZXR1cm4gdHJ1ZTtcbiAgICAvLyBBcnJheSNpbmRleE9mIGlnbm9yZXMgaG9sZXMsIEFycmF5I2luY2x1ZGVzIC0gbm90XG4gICAgfSBlbHNlIGZvciAoO2xlbmd0aCA+IGluZGV4OyBpbmRleCsrKSBpZiAoSVNfSU5DTFVERVMgfHwgaW5kZXggaW4gTykge1xuICAgICAgaWYgKE9baW5kZXhdID09PSBlbCkgcmV0dXJuIElTX0lOQ0xVREVTIHx8IGluZGV4IHx8IDA7XG4gICAgfSByZXR1cm4gIUlTX0lOQ0xVREVTICYmIC0xO1xuICB9O1xufTtcbiIsIi8vIDAgLT4gQXJyYXkjZm9yRWFjaFxuLy8gMSAtPiBBcnJheSNtYXBcbi8vIDIgLT4gQXJyYXkjZmlsdGVyXG4vLyAzIC0+IEFycmF5I3NvbWVcbi8vIDQgLT4gQXJyYXkjZXZlcnlcbi8vIDUgLT4gQXJyYXkjZmluZFxuLy8gNiAtPiBBcnJheSNmaW5kSW5kZXhcbnZhciBjdHggPSByZXF1aXJlKCcuL19jdHgnKTtcbnZhciBJT2JqZWN0ID0gcmVxdWlyZSgnLi9faW9iamVjdCcpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciBhc2MgPSByZXF1aXJlKCcuL19hcnJheS1zcGVjaWVzLWNyZWF0ZScpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoVFlQRSwgJGNyZWF0ZSkge1xuICB2YXIgSVNfTUFQID0gVFlQRSA9PSAxO1xuICB2YXIgSVNfRklMVEVSID0gVFlQRSA9PSAyO1xuICB2YXIgSVNfU09NRSA9IFRZUEUgPT0gMztcbiAgdmFyIElTX0VWRVJZID0gVFlQRSA9PSA0O1xuICB2YXIgSVNfRklORF9JTkRFWCA9IFRZUEUgPT0gNjtcbiAgdmFyIE5PX0hPTEVTID0gVFlQRSA9PSA1IHx8IElTX0ZJTkRfSU5ERVg7XG4gIHZhciBjcmVhdGUgPSAkY3JlYXRlIHx8IGFzYztcbiAgcmV0dXJuIGZ1bmN0aW9uICgkdGhpcywgY2FsbGJhY2tmbiwgdGhhdCkge1xuICAgIHZhciBPID0gdG9PYmplY3QoJHRoaXMpO1xuICAgIHZhciBzZWxmID0gSU9iamVjdChPKTtcbiAgICB2YXIgZiA9IGN0eChjYWxsYmFja2ZuLCB0aGF0LCAzKTtcbiAgICB2YXIgbGVuZ3RoID0gdG9MZW5ndGgoc2VsZi5sZW5ndGgpO1xuICAgIHZhciBpbmRleCA9IDA7XG4gICAgdmFyIHJlc3VsdCA9IElTX01BUCA/IGNyZWF0ZSgkdGhpcywgbGVuZ3RoKSA6IElTX0ZJTFRFUiA/IGNyZWF0ZSgkdGhpcywgMCkgOiB1bmRlZmluZWQ7XG4gICAgdmFyIHZhbCwgcmVzO1xuICAgIGZvciAoO2xlbmd0aCA+IGluZGV4OyBpbmRleCsrKSBpZiAoTk9fSE9MRVMgfHwgaW5kZXggaW4gc2VsZikge1xuICAgICAgdmFsID0gc2VsZltpbmRleF07XG4gICAgICByZXMgPSBmKHZhbCwgaW5kZXgsIE8pO1xuICAgICAgaWYgKFRZUEUpIHtcbiAgICAgICAgaWYgKElTX01BUCkgcmVzdWx0W2luZGV4XSA9IHJlczsgICAvLyBtYXBcbiAgICAgICAgZWxzZSBpZiAocmVzKSBzd2l0Y2ggKFRZUEUpIHtcbiAgICAgICAgICBjYXNlIDM6IHJldHVybiB0cnVlOyAgICAgICAgICAgICAvLyBzb21lXG4gICAgICAgICAgY2FzZSA1OiByZXR1cm4gdmFsOyAgICAgICAgICAgICAgLy8gZmluZFxuICAgICAgICAgIGNhc2UgNjogcmV0dXJuIGluZGV4OyAgICAgICAgICAgIC8vIGZpbmRJbmRleFxuICAgICAgICAgIGNhc2UgMjogcmVzdWx0LnB1c2godmFsKTsgICAgICAgIC8vIGZpbHRlclxuICAgICAgICB9IGVsc2UgaWYgKElTX0VWRVJZKSByZXR1cm4gZmFsc2U7IC8vIGV2ZXJ5XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBJU19GSU5EX0lOREVYID8gLTEgOiBJU19TT01FIHx8IElTX0VWRVJZID8gSVNfRVZFUlkgOiByZXN1bHQ7XG4gIH07XG59O1xuIiwidmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgaXNBcnJheSA9IHJlcXVpcmUoJy4vX2lzLWFycmF5Jyk7XG52YXIgU1BFQ0lFUyA9IHJlcXVpcmUoJy4vX3drcycpKCdzcGVjaWVzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG9yaWdpbmFsKSB7XG4gIHZhciBDO1xuICBpZiAoaXNBcnJheShvcmlnaW5hbCkpIHtcbiAgICBDID0gb3JpZ2luYWwuY29uc3RydWN0b3I7XG4gICAgLy8gY3Jvc3MtcmVhbG0gZmFsbGJhY2tcbiAgICBpZiAodHlwZW9mIEMgPT0gJ2Z1bmN0aW9uJyAmJiAoQyA9PT0gQXJyYXkgfHwgaXNBcnJheShDLnByb3RvdHlwZSkpKSBDID0gdW5kZWZpbmVkO1xuICAgIGlmIChpc09iamVjdChDKSkge1xuICAgICAgQyA9IENbU1BFQ0lFU107XG4gICAgICBpZiAoQyA9PT0gbnVsbCkgQyA9IHVuZGVmaW5lZDtcbiAgICB9XG4gIH0gcmV0dXJuIEMgPT09IHVuZGVmaW5lZCA/IEFycmF5IDogQztcbn07XG4iLCIvLyA5LjQuMi4zIEFycmF5U3BlY2llc0NyZWF0ZShvcmlnaW5hbEFycmF5LCBsZW5ndGgpXG52YXIgc3BlY2llc0NvbnN0cnVjdG9yID0gcmVxdWlyZSgnLi9fYXJyYXktc3BlY2llcy1jb25zdHJ1Y3RvcicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChvcmlnaW5hbCwgbGVuZ3RoKSB7XG4gIHJldHVybiBuZXcgKHNwZWNpZXNDb25zdHJ1Y3RvcihvcmlnaW5hbCkpKGxlbmd0aCk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGludm9rZSA9IHJlcXVpcmUoJy4vX2ludm9rZScpO1xudmFyIGFycmF5U2xpY2UgPSBbXS5zbGljZTtcbnZhciBmYWN0b3JpZXMgPSB7fTtcblxudmFyIGNvbnN0cnVjdCA9IGZ1bmN0aW9uIChGLCBsZW4sIGFyZ3MpIHtcbiAgaWYgKCEobGVuIGluIGZhY3RvcmllcykpIHtcbiAgICBmb3IgKHZhciBuID0gW10sIGkgPSAwOyBpIDwgbGVuOyBpKyspIG5baV0gPSAnYVsnICsgaSArICddJztcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbmV3LWZ1bmNcbiAgICBmYWN0b3JpZXNbbGVuXSA9IEZ1bmN0aW9uKCdGLGEnLCAncmV0dXJuIG5ldyBGKCcgKyBuLmpvaW4oJywnKSArICcpJyk7XG4gIH0gcmV0dXJuIGZhY3Rvcmllc1tsZW5dKEYsIGFyZ3MpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBGdW5jdGlvbi5iaW5kIHx8IGZ1bmN0aW9uIGJpbmQodGhhdCAvKiAsIC4uLmFyZ3MgKi8pIHtcbiAgdmFyIGZuID0gYUZ1bmN0aW9uKHRoaXMpO1xuICB2YXIgcGFydEFyZ3MgPSBhcnJheVNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKTtcbiAgdmFyIGJvdW5kID0gZnVuY3Rpb24gKC8qIGFyZ3MuLi4gKi8pIHtcbiAgICB2YXIgYXJncyA9IHBhcnRBcmdzLmNvbmNhdChhcnJheVNsaWNlLmNhbGwoYXJndW1lbnRzKSk7XG4gICAgcmV0dXJuIHRoaXMgaW5zdGFuY2VvZiBib3VuZCA/IGNvbnN0cnVjdChmbiwgYXJncy5sZW5ndGgsIGFyZ3MpIDogaW52b2tlKGZuLCBhcmdzLCB0aGF0KTtcbiAgfTtcbiAgaWYgKGlzT2JqZWN0KGZuLnByb3RvdHlwZSkpIGJvdW5kLnByb3RvdHlwZSA9IGZuLnByb3RvdHlwZTtcbiAgcmV0dXJuIGJvdW5kO1xufTtcbiIsIi8vIGdldHRpbmcgdGFnIGZyb20gMTkuMS4zLjYgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZygpXG52YXIgY29mID0gcmVxdWlyZSgnLi9fY29mJyk7XG52YXIgVEFHID0gcmVxdWlyZSgnLi9fd2tzJykoJ3RvU3RyaW5nVGFnJyk7XG4vLyBFUzMgd3JvbmcgaGVyZVxudmFyIEFSRyA9IGNvZihmdW5jdGlvbiAoKSB7IHJldHVybiBhcmd1bWVudHM7IH0oKSkgPT0gJ0FyZ3VtZW50cyc7XG5cbi8vIGZhbGxiYWNrIGZvciBJRTExIFNjcmlwdCBBY2Nlc3MgRGVuaWVkIGVycm9yXG52YXIgdHJ5R2V0ID0gZnVuY3Rpb24gKGl0LCBrZXkpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gaXRba2V5XTtcbiAgfSBjYXRjaCAoZSkgeyAvKiBlbXB0eSAqLyB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICB2YXIgTywgVCwgQjtcbiAgcmV0dXJuIGl0ID09PSB1bmRlZmluZWQgPyAnVW5kZWZpbmVkJyA6IGl0ID09PSBudWxsID8gJ051bGwnXG4gICAgLy8gQEB0b1N0cmluZ1RhZyBjYXNlXG4gICAgOiB0eXBlb2YgKFQgPSB0cnlHZXQoTyA9IE9iamVjdChpdCksIFRBRykpID09ICdzdHJpbmcnID8gVFxuICAgIC8vIGJ1aWx0aW5UYWcgY2FzZVxuICAgIDogQVJHID8gY29mKE8pXG4gICAgLy8gRVMzIGFyZ3VtZW50cyBmYWxsYmFja1xuICAgIDogKEIgPSBjb2YoTykpID09ICdPYmplY3QnICYmIHR5cGVvZiBPLmNhbGxlZSA9PSAnZnVuY3Rpb24nID8gJ0FyZ3VtZW50cycgOiBCO1xufTtcbiIsInZhciB0b1N0cmluZyA9IHt9LnRvU3RyaW5nO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbChpdCkuc2xpY2UoOCwgLTEpO1xufTtcbiIsInZhciBjb3JlID0gbW9kdWxlLmV4cG9ydHMgPSB7IHZlcnNpb246ICcyLjYuMTInIH07XG5pZiAodHlwZW9mIF9fZSA9PSAnbnVtYmVyJykgX19lID0gY29yZTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bmRlZlxuIiwiLy8gb3B0aW9uYWwgLyBzaW1wbGUgY29udGV4dCBiaW5kaW5nXG52YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZm4sIHRoYXQsIGxlbmd0aCkge1xuICBhRnVuY3Rpb24oZm4pO1xuICBpZiAodGhhdCA9PT0gdW5kZWZpbmVkKSByZXR1cm4gZm47XG4gIHN3aXRjaCAobGVuZ3RoKSB7XG4gICAgY2FzZSAxOiByZXR1cm4gZnVuY3Rpb24gKGEpIHtcbiAgICAgIHJldHVybiBmbi5jYWxsKHRoYXQsIGEpO1xuICAgIH07XG4gICAgY2FzZSAyOiByZXR1cm4gZnVuY3Rpb24gKGEsIGIpIHtcbiAgICAgIHJldHVybiBmbi5jYWxsKHRoYXQsIGEsIGIpO1xuICAgIH07XG4gICAgY2FzZSAzOiByZXR1cm4gZnVuY3Rpb24gKGEsIGIsIGMpIHtcbiAgICAgIHJldHVybiBmbi5jYWxsKHRoYXQsIGEsIGIsIGMpO1xuICAgIH07XG4gIH1cbiAgcmV0dXJuIGZ1bmN0aW9uICgvKiAuLi5hcmdzICovKSB7XG4gICAgcmV0dXJuIGZuLmFwcGx5KHRoYXQsIGFyZ3VtZW50cyk7XG4gIH07XG59O1xuIiwiLy8gNy4yLjEgUmVxdWlyZU9iamVjdENvZXJjaWJsZShhcmd1bWVudClcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmIChpdCA9PSB1bmRlZmluZWQpIHRocm93IFR5cGVFcnJvcihcIkNhbid0IGNhbGwgbWV0aG9kIG9uICBcIiArIGl0KTtcbiAgcmV0dXJuIGl0O1xufTtcbiIsIi8vIFRoYW5rJ3MgSUU4IGZvciBoaXMgZnVubnkgZGVmaW5lUHJvcGVydHlcbm1vZHVsZS5leHBvcnRzID0gIXJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHt9LCAnYScsIHsgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiA3OyB9IH0pLmEgIT0gNztcbn0pO1xuIiwidmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgZG9jdW1lbnQgPSByZXF1aXJlKCcuL19nbG9iYWwnKS5kb2N1bWVudDtcbi8vIHR5cGVvZiBkb2N1bWVudC5jcmVhdGVFbGVtZW50IGlzICdvYmplY3QnIGluIG9sZCBJRVxudmFyIGlzID0gaXNPYmplY3QoZG9jdW1lbnQpICYmIGlzT2JqZWN0KGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIGlzID8gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChpdCkgOiB7fTtcbn07XG4iLCIvLyBJRSA4LSBkb24ndCBlbnVtIGJ1ZyBrZXlzXG5tb2R1bGUuZXhwb3J0cyA9IChcbiAgJ2NvbnN0cnVjdG9yLGhhc093blByb3BlcnR5LGlzUHJvdG90eXBlT2YscHJvcGVydHlJc0VudW1lcmFibGUsdG9Mb2NhbGVTdHJpbmcsdG9TdHJpbmcsdmFsdWVPZidcbikuc3BsaXQoJywnKTtcbiIsInZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBjb3JlID0gcmVxdWlyZSgnLi9fY29yZScpO1xudmFyIGhpZGUgPSByZXF1aXJlKCcuL19oaWRlJyk7XG52YXIgcmVkZWZpbmUgPSByZXF1aXJlKCcuL19yZWRlZmluZScpO1xudmFyIGN0eCA9IHJlcXVpcmUoJy4vX2N0eCcpO1xudmFyIFBST1RPVFlQRSA9ICdwcm90b3R5cGUnO1xuXG52YXIgJGV4cG9ydCA9IGZ1bmN0aW9uICh0eXBlLCBuYW1lLCBzb3VyY2UpIHtcbiAgdmFyIElTX0ZPUkNFRCA9IHR5cGUgJiAkZXhwb3J0LkY7XG4gIHZhciBJU19HTE9CQUwgPSB0eXBlICYgJGV4cG9ydC5HO1xuICB2YXIgSVNfU1RBVElDID0gdHlwZSAmICRleHBvcnQuUztcbiAgdmFyIElTX1BST1RPID0gdHlwZSAmICRleHBvcnQuUDtcbiAgdmFyIElTX0JJTkQgPSB0eXBlICYgJGV4cG9ydC5CO1xuICB2YXIgdGFyZ2V0ID0gSVNfR0xPQkFMID8gZ2xvYmFsIDogSVNfU1RBVElDID8gZ2xvYmFsW25hbWVdIHx8IChnbG9iYWxbbmFtZV0gPSB7fSkgOiAoZ2xvYmFsW25hbWVdIHx8IHt9KVtQUk9UT1RZUEVdO1xuICB2YXIgZXhwb3J0cyA9IElTX0dMT0JBTCA/IGNvcmUgOiBjb3JlW25hbWVdIHx8IChjb3JlW25hbWVdID0ge30pO1xuICB2YXIgZXhwUHJvdG8gPSBleHBvcnRzW1BST1RPVFlQRV0gfHwgKGV4cG9ydHNbUFJPVE9UWVBFXSA9IHt9KTtcbiAgdmFyIGtleSwgb3duLCBvdXQsIGV4cDtcbiAgaWYgKElTX0dMT0JBTCkgc291cmNlID0gbmFtZTtcbiAgZm9yIChrZXkgaW4gc291cmNlKSB7XG4gICAgLy8gY29udGFpbnMgaW4gbmF0aXZlXG4gICAgb3duID0gIUlTX0ZPUkNFRCAmJiB0YXJnZXQgJiYgdGFyZ2V0W2tleV0gIT09IHVuZGVmaW5lZDtcbiAgICAvLyBleHBvcnQgbmF0aXZlIG9yIHBhc3NlZFxuICAgIG91dCA9IChvd24gPyB0YXJnZXQgOiBzb3VyY2UpW2tleV07XG4gICAgLy8gYmluZCB0aW1lcnMgdG8gZ2xvYmFsIGZvciBjYWxsIGZyb20gZXhwb3J0IGNvbnRleHRcbiAgICBleHAgPSBJU19CSU5EICYmIG93biA/IGN0eChvdXQsIGdsb2JhbCkgOiBJU19QUk9UTyAmJiB0eXBlb2Ygb3V0ID09ICdmdW5jdGlvbicgPyBjdHgoRnVuY3Rpb24uY2FsbCwgb3V0KSA6IG91dDtcbiAgICAvLyBleHRlbmQgZ2xvYmFsXG4gICAgaWYgKHRhcmdldCkgcmVkZWZpbmUodGFyZ2V0LCBrZXksIG91dCwgdHlwZSAmICRleHBvcnQuVSk7XG4gICAgLy8gZXhwb3J0XG4gICAgaWYgKGV4cG9ydHNba2V5XSAhPSBvdXQpIGhpZGUoZXhwb3J0cywga2V5LCBleHApO1xuICAgIGlmIChJU19QUk9UTyAmJiBleHBQcm90b1trZXldICE9IG91dCkgZXhwUHJvdG9ba2V5XSA9IG91dDtcbiAgfVxufTtcbmdsb2JhbC5jb3JlID0gY29yZTtcbi8vIHR5cGUgYml0bWFwXG4kZXhwb3J0LkYgPSAxOyAgIC8vIGZvcmNlZFxuJGV4cG9ydC5HID0gMjsgICAvLyBnbG9iYWxcbiRleHBvcnQuUyA9IDQ7ICAgLy8gc3RhdGljXG4kZXhwb3J0LlAgPSA4OyAgIC8vIHByb3RvXG4kZXhwb3J0LkIgPSAxNjsgIC8vIGJpbmRcbiRleHBvcnQuVyA9IDMyOyAgLy8gd3JhcFxuJGV4cG9ydC5VID0gNjQ7ICAvLyBzYWZlXG4kZXhwb3J0LlIgPSAxMjg7IC8vIHJlYWwgcHJvdG8gbWV0aG9kIGZvciBgbGlicmFyeWBcbm1vZHVsZS5leHBvcnRzID0gJGV4cG9ydDtcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGV4ZWMpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gISFleGVjKCk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxufTtcbiIsIid1c2Ugc3RyaWN0JztcbnJlcXVpcmUoJy4vZXM2LnJlZ2V4cC5leGVjJyk7XG52YXIgcmVkZWZpbmUgPSByZXF1aXJlKCcuL19yZWRlZmluZScpO1xudmFyIGhpZGUgPSByZXF1aXJlKCcuL19oaWRlJyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuL19mYWlscycpO1xudmFyIGRlZmluZWQgPSByZXF1aXJlKCcuL19kZWZpbmVkJyk7XG52YXIgd2tzID0gcmVxdWlyZSgnLi9fd2tzJyk7XG52YXIgcmVnZXhwRXhlYyA9IHJlcXVpcmUoJy4vX3JlZ2V4cC1leGVjJyk7XG5cbnZhciBTUEVDSUVTID0gd2tzKCdzcGVjaWVzJyk7XG5cbnZhciBSRVBMQUNFX1NVUFBPUlRTX05BTUVEX0dST1VQUyA9ICFmYWlscyhmdW5jdGlvbiAoKSB7XG4gIC8vICNyZXBsYWNlIG5lZWRzIGJ1aWx0LWluIHN1cHBvcnQgZm9yIG5hbWVkIGdyb3Vwcy5cbiAgLy8gI21hdGNoIHdvcmtzIGZpbmUgYmVjYXVzZSBpdCBqdXN0IHJldHVybiB0aGUgZXhlYyByZXN1bHRzLCBldmVuIGlmIGl0IGhhc1xuICAvLyBhIFwiZ3JvcHNcIiBwcm9wZXJ0eS5cbiAgdmFyIHJlID0gLy4vO1xuICByZS5leGVjID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciByZXN1bHQgPSBbXTtcbiAgICByZXN1bHQuZ3JvdXBzID0geyBhOiAnNycgfTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9O1xuICByZXR1cm4gJycucmVwbGFjZShyZSwgJyQ8YT4nKSAhPT0gJzcnO1xufSk7XG5cbnZhciBTUExJVF9XT1JLU19XSVRIX09WRVJXUklUVEVOX0VYRUMgPSAoZnVuY3Rpb24gKCkge1xuICAvLyBDaHJvbWUgNTEgaGFzIGEgYnVnZ3kgXCJzcGxpdFwiIGltcGxlbWVudGF0aW9uIHdoZW4gUmVnRXhwI2V4ZWMgIT09IG5hdGl2ZUV4ZWNcbiAgdmFyIHJlID0gLyg/OikvO1xuICB2YXIgb3JpZ2luYWxFeGVjID0gcmUuZXhlYztcbiAgcmUuZXhlYyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG9yaWdpbmFsRXhlYy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9O1xuICB2YXIgcmVzdWx0ID0gJ2FiJy5zcGxpdChyZSk7XG4gIHJldHVybiByZXN1bHQubGVuZ3RoID09PSAyICYmIHJlc3VsdFswXSA9PT0gJ2EnICYmIHJlc3VsdFsxXSA9PT0gJ2InO1xufSkoKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoS0VZLCBsZW5ndGgsIGV4ZWMpIHtcbiAgdmFyIFNZTUJPTCA9IHdrcyhLRVkpO1xuXG4gIHZhciBERUxFR0FURVNfVE9fU1lNQk9MID0gIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICAvLyBTdHJpbmcgbWV0aG9kcyBjYWxsIHN5bWJvbC1uYW1lZCBSZWdFcCBtZXRob2RzXG4gICAgdmFyIE8gPSB7fTtcbiAgICBPW1NZTUJPTF0gPSBmdW5jdGlvbiAoKSB7IHJldHVybiA3OyB9O1xuICAgIHJldHVybiAnJ1tLRVldKE8pICE9IDc7XG4gIH0pO1xuXG4gIHZhciBERUxFR0FURVNfVE9fRVhFQyA9IERFTEVHQVRFU19UT19TWU1CT0wgPyAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgIC8vIFN5bWJvbC1uYW1lZCBSZWdFeHAgbWV0aG9kcyBjYWxsIC5leGVjXG4gICAgdmFyIGV4ZWNDYWxsZWQgPSBmYWxzZTtcbiAgICB2YXIgcmUgPSAvYS87XG4gICAgcmUuZXhlYyA9IGZ1bmN0aW9uICgpIHsgZXhlY0NhbGxlZCA9IHRydWU7IHJldHVybiBudWxsOyB9O1xuICAgIGlmIChLRVkgPT09ICdzcGxpdCcpIHtcbiAgICAgIC8vIFJlZ0V4cFtAQHNwbGl0XSBkb2Vzbid0IGNhbGwgdGhlIHJlZ2V4J3MgZXhlYyBtZXRob2QsIGJ1dCBmaXJzdCBjcmVhdGVzXG4gICAgICAvLyBhIG5ldyBvbmUuIFdlIG5lZWQgdG8gcmV0dXJuIHRoZSBwYXRjaGVkIHJlZ2V4IHdoZW4gY3JlYXRpbmcgdGhlIG5ldyBvbmUuXG4gICAgICByZS5jb25zdHJ1Y3RvciA9IHt9O1xuICAgICAgcmUuY29uc3RydWN0b3JbU1BFQ0lFU10gPSBmdW5jdGlvbiAoKSB7IHJldHVybiByZTsgfTtcbiAgICB9XG4gICAgcmVbU1lNQk9MXSgnJyk7XG4gICAgcmV0dXJuICFleGVjQ2FsbGVkO1xuICB9KSA6IHVuZGVmaW5lZDtcblxuICBpZiAoXG4gICAgIURFTEVHQVRFU19UT19TWU1CT0wgfHxcbiAgICAhREVMRUdBVEVTX1RPX0VYRUMgfHxcbiAgICAoS0VZID09PSAncmVwbGFjZScgJiYgIVJFUExBQ0VfU1VQUE9SVFNfTkFNRURfR1JPVVBTKSB8fFxuICAgIChLRVkgPT09ICdzcGxpdCcgJiYgIVNQTElUX1dPUktTX1dJVEhfT1ZFUldSSVRURU5fRVhFQylcbiAgKSB7XG4gICAgdmFyIG5hdGl2ZVJlZ0V4cE1ldGhvZCA9IC8uL1tTWU1CT0xdO1xuICAgIHZhciBmbnMgPSBleGVjKFxuICAgICAgZGVmaW5lZCxcbiAgICAgIFNZTUJPTCxcbiAgICAgICcnW0tFWV0sXG4gICAgICBmdW5jdGlvbiBtYXliZUNhbGxOYXRpdmUobmF0aXZlTWV0aG9kLCByZWdleHAsIHN0ciwgYXJnMiwgZm9yY2VTdHJpbmdNZXRob2QpIHtcbiAgICAgICAgaWYgKHJlZ2V4cC5leGVjID09PSByZWdleHBFeGVjKSB7XG4gICAgICAgICAgaWYgKERFTEVHQVRFU19UT19TWU1CT0wgJiYgIWZvcmNlU3RyaW5nTWV0aG9kKSB7XG4gICAgICAgICAgICAvLyBUaGUgbmF0aXZlIFN0cmluZyBtZXRob2QgYWxyZWFkeSBkZWxlZ2F0ZXMgdG8gQEBtZXRob2QgKHRoaXNcbiAgICAgICAgICAgIC8vIHBvbHlmaWxsZWQgZnVuY3Rpb24pLCBsZWFzaW5nIHRvIGluZmluaXRlIHJlY3Vyc2lvbi5cbiAgICAgICAgICAgIC8vIFdlIGF2b2lkIGl0IGJ5IGRpcmVjdGx5IGNhbGxpbmcgdGhlIG5hdGl2ZSBAQG1ldGhvZCBtZXRob2QuXG4gICAgICAgICAgICByZXR1cm4geyBkb25lOiB0cnVlLCB2YWx1ZTogbmF0aXZlUmVnRXhwTWV0aG9kLmNhbGwocmVnZXhwLCBzdHIsIGFyZzIpIH07XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiB7IGRvbmU6IHRydWUsIHZhbHVlOiBuYXRpdmVNZXRob2QuY2FsbChzdHIsIHJlZ2V4cCwgYXJnMikgfTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4geyBkb25lOiBmYWxzZSB9O1xuICAgICAgfVxuICAgICk7XG4gICAgdmFyIHN0cmZuID0gZm5zWzBdO1xuICAgIHZhciByeGZuID0gZm5zWzFdO1xuXG4gICAgcmVkZWZpbmUoU3RyaW5nLnByb3RvdHlwZSwgS0VZLCBzdHJmbik7XG4gICAgaGlkZShSZWdFeHAucHJvdG90eXBlLCBTWU1CT0wsIGxlbmd0aCA9PSAyXG4gICAgICAvLyAyMS4yLjUuOCBSZWdFeHAucHJvdG90eXBlW0BAcmVwbGFjZV0oc3RyaW5nLCByZXBsYWNlVmFsdWUpXG4gICAgICAvLyAyMS4yLjUuMTEgUmVnRXhwLnByb3RvdHlwZVtAQHNwbGl0XShzdHJpbmcsIGxpbWl0KVxuICAgICAgPyBmdW5jdGlvbiAoc3RyaW5nLCBhcmcpIHsgcmV0dXJuIHJ4Zm4uY2FsbChzdHJpbmcsIHRoaXMsIGFyZyk7IH1cbiAgICAgIC8vIDIxLjIuNS42IFJlZ0V4cC5wcm90b3R5cGVbQEBtYXRjaF0oc3RyaW5nKVxuICAgICAgLy8gMjEuMi41LjkgUmVnRXhwLnByb3RvdHlwZVtAQHNlYXJjaF0oc3RyaW5nKVxuICAgICAgOiBmdW5jdGlvbiAoc3RyaW5nKSB7IHJldHVybiByeGZuLmNhbGwoc3RyaW5nLCB0aGlzKTsgfVxuICAgICk7XG4gIH1cbn07XG4iLCIndXNlIHN0cmljdCc7XG4vLyAyMS4yLjUuMyBnZXQgUmVnRXhwLnByb3RvdHlwZS5mbGFnc1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIHRoYXQgPSBhbk9iamVjdCh0aGlzKTtcbiAgdmFyIHJlc3VsdCA9ICcnO1xuICBpZiAodGhhdC5nbG9iYWwpIHJlc3VsdCArPSAnZyc7XG4gIGlmICh0aGF0Lmlnbm9yZUNhc2UpIHJlc3VsdCArPSAnaSc7XG4gIGlmICh0aGF0Lm11bHRpbGluZSkgcmVzdWx0ICs9ICdtJztcbiAgaWYgKHRoYXQudW5pY29kZSkgcmVzdWx0ICs9ICd1JztcbiAgaWYgKHRoYXQuc3RpY2t5KSByZXN1bHQgKz0gJ3knO1xuICByZXR1cm4gcmVzdWx0O1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9fc2hhcmVkJykoJ25hdGl2ZS1mdW5jdGlvbi10by1zdHJpbmcnLCBGdW5jdGlvbi50b1N0cmluZyk7XG4iLCIvLyBodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcy9pc3N1ZXMvODYjaXNzdWVjb21tZW50LTExNTc1OTAyOFxudmFyIGdsb2JhbCA9IG1vZHVsZS5leHBvcnRzID0gdHlwZW9mIHdpbmRvdyAhPSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuTWF0aCA9PSBNYXRoXG4gID8gd2luZG93IDogdHlwZW9mIHNlbGYgIT0gJ3VuZGVmaW5lZCcgJiYgc2VsZi5NYXRoID09IE1hdGggPyBzZWxmXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1uZXctZnVuY1xuICA6IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5pZiAodHlwZW9mIF9fZyA9PSAnbnVtYmVyJykgX19nID0gZ2xvYmFsOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVuZGVmXG4iLCJ2YXIgaGFzT3duUHJvcGVydHkgPSB7fS5oYXNPd25Qcm9wZXJ0eTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0LCBrZXkpIHtcbiAgcmV0dXJuIGhhc093blByb3BlcnR5LmNhbGwoaXQsIGtleSk7XG59O1xuIiwidmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgY3JlYXRlRGVzYyA9IHJlcXVpcmUoJy4vX3Byb3BlcnR5LWRlc2MnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSA/IGZ1bmN0aW9uIChvYmplY3QsIGtleSwgdmFsdWUpIHtcbiAgcmV0dXJuIGRQLmYob2JqZWN0LCBrZXksIGNyZWF0ZURlc2MoMSwgdmFsdWUpKTtcbn0gOiBmdW5jdGlvbiAob2JqZWN0LCBrZXksIHZhbHVlKSB7XG4gIG9iamVjdFtrZXldID0gdmFsdWU7XG4gIHJldHVybiBvYmplY3Q7XG59O1xuIiwidmFyIGRvY3VtZW50ID0gcmVxdWlyZSgnLi9fZ2xvYmFsJykuZG9jdW1lbnQ7XG5tb2R1bGUuZXhwb3J0cyA9IGRvY3VtZW50ICYmIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDtcbiIsIm1vZHVsZS5leHBvcnRzID0gIXJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgJiYgIXJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHJlcXVpcmUoJy4vX2RvbS1jcmVhdGUnKSgnZGl2JyksICdhJywgeyBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIDc7IH0gfSkuYSAhPSA3O1xufSk7XG4iLCIvLyBmYXN0IGFwcGx5LCBodHRwOi8vanNwZXJmLmxua2l0LmNvbS9mYXN0LWFwcGx5LzVcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGZuLCBhcmdzLCB0aGF0KSB7XG4gIHZhciB1biA9IHRoYXQgPT09IHVuZGVmaW5lZDtcbiAgc3dpdGNoIChhcmdzLmxlbmd0aCkge1xuICAgIGNhc2UgMDogcmV0dXJuIHVuID8gZm4oKVxuICAgICAgICAgICAgICAgICAgICAgIDogZm4uY2FsbCh0aGF0KTtcbiAgICBjYXNlIDE6IHJldHVybiB1biA/IGZuKGFyZ3NbMF0pXG4gICAgICAgICAgICAgICAgICAgICAgOiBmbi5jYWxsKHRoYXQsIGFyZ3NbMF0pO1xuICAgIGNhc2UgMjogcmV0dXJuIHVuID8gZm4oYXJnc1swXSwgYXJnc1sxXSlcbiAgICAgICAgICAgICAgICAgICAgICA6IGZuLmNhbGwodGhhdCwgYXJnc1swXSwgYXJnc1sxXSk7XG4gICAgY2FzZSAzOiByZXR1cm4gdW4gPyBmbihhcmdzWzBdLCBhcmdzWzFdLCBhcmdzWzJdKVxuICAgICAgICAgICAgICAgICAgICAgIDogZm4uY2FsbCh0aGF0LCBhcmdzWzBdLCBhcmdzWzFdLCBhcmdzWzJdKTtcbiAgICBjYXNlIDQ6IHJldHVybiB1biA/IGZuKGFyZ3NbMF0sIGFyZ3NbMV0sIGFyZ3NbMl0sIGFyZ3NbM10pXG4gICAgICAgICAgICAgICAgICAgICAgOiBmbi5jYWxsKHRoYXQsIGFyZ3NbMF0sIGFyZ3NbMV0sIGFyZ3NbMl0sIGFyZ3NbM10pO1xuICB9IHJldHVybiBmbi5hcHBseSh0aGF0LCBhcmdzKTtcbn07XG4iLCIvLyBmYWxsYmFjayBmb3Igbm9uLWFycmF5LWxpa2UgRVMzIGFuZCBub24tZW51bWVyYWJsZSBvbGQgVjggc3RyaW5nc1xudmFyIGNvZiA9IHJlcXVpcmUoJy4vX2NvZicpO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXByb3RvdHlwZS1idWlsdGluc1xubW9kdWxlLmV4cG9ydHMgPSBPYmplY3QoJ3onKS5wcm9wZXJ0eUlzRW51bWVyYWJsZSgwKSA/IE9iamVjdCA6IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gY29mKGl0KSA9PSAnU3RyaW5nJyA/IGl0LnNwbGl0KCcnKSA6IE9iamVjdChpdCk7XG59O1xuIiwiLy8gNy4yLjIgSXNBcnJheShhcmd1bWVudClcbnZhciBjb2YgPSByZXF1aXJlKCcuL19jb2YnKTtcbm1vZHVsZS5leHBvcnRzID0gQXJyYXkuaXNBcnJheSB8fCBmdW5jdGlvbiBpc0FycmF5KGFyZykge1xuICByZXR1cm4gY29mKGFyZykgPT0gJ0FycmF5Jztcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gdHlwZW9mIGl0ID09PSAnb2JqZWN0JyA/IGl0ICE9PSBudWxsIDogdHlwZW9mIGl0ID09PSAnZnVuY3Rpb24nO1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gZmFsc2U7XG4iLCIndXNlIHN0cmljdCc7XG4vLyAxOS4xLjIuMSBPYmplY3QuYXNzaWduKHRhcmdldCwgc291cmNlLCAuLi4pXG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpO1xudmFyIGdldEtleXMgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cycpO1xudmFyIGdPUFMgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wcycpO1xudmFyIHBJRSA9IHJlcXVpcmUoJy4vX29iamVjdC1waWUnKTtcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyIElPYmplY3QgPSByZXF1aXJlKCcuL19pb2JqZWN0Jyk7XG52YXIgJGFzc2lnbiA9IE9iamVjdC5hc3NpZ247XG5cbi8vIHNob3VsZCB3b3JrIHdpdGggc3ltYm9scyBhbmQgc2hvdWxkIGhhdmUgZGV0ZXJtaW5pc3RpYyBwcm9wZXJ0eSBvcmRlciAoVjggYnVnKVxubW9kdWxlLmV4cG9ydHMgPSAhJGFzc2lnbiB8fCByZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgdmFyIEEgPSB7fTtcbiAgdmFyIEIgPSB7fTtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG4gIHZhciBTID0gU3ltYm9sKCk7XG4gIHZhciBLID0gJ2FiY2RlZmdoaWprbG1ub3BxcnN0JztcbiAgQVtTXSA9IDc7XG4gIEsuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGspIHsgQltrXSA9IGs7IH0pO1xuICByZXR1cm4gJGFzc2lnbih7fSwgQSlbU10gIT0gNyB8fCBPYmplY3Qua2V5cygkYXNzaWduKHt9LCBCKSkuam9pbignJykgIT0gSztcbn0pID8gZnVuY3Rpb24gYXNzaWduKHRhcmdldCwgc291cmNlKSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgdmFyIFQgPSB0b09iamVjdCh0YXJnZXQpO1xuICB2YXIgYUxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gIHZhciBpbmRleCA9IDE7XG4gIHZhciBnZXRTeW1ib2xzID0gZ09QUy5mO1xuICB2YXIgaXNFbnVtID0gcElFLmY7XG4gIHdoaWxlIChhTGVuID4gaW5kZXgpIHtcbiAgICB2YXIgUyA9IElPYmplY3QoYXJndW1lbnRzW2luZGV4KytdKTtcbiAgICB2YXIga2V5cyA9IGdldFN5bWJvbHMgPyBnZXRLZXlzKFMpLmNvbmNhdChnZXRTeW1ib2xzKFMpKSA6IGdldEtleXMoUyk7XG4gICAgdmFyIGxlbmd0aCA9IGtleXMubGVuZ3RoO1xuICAgIHZhciBqID0gMDtcbiAgICB2YXIga2V5O1xuICAgIHdoaWxlIChsZW5ndGggPiBqKSB7XG4gICAgICBrZXkgPSBrZXlzW2orK107XG4gICAgICBpZiAoIURFU0NSSVBUT1JTIHx8IGlzRW51bS5jYWxsKFMsIGtleSkpIFRba2V5XSA9IFNba2V5XTtcbiAgICB9XG4gIH0gcmV0dXJuIFQ7XG59IDogJGFzc2lnbjtcbiIsIi8vIDE5LjEuMi4yIC8gMTUuMi4zLjUgT2JqZWN0LmNyZWF0ZShPIFssIFByb3BlcnRpZXNdKVxudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgZFBzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwcycpO1xudmFyIGVudW1CdWdLZXlzID0gcmVxdWlyZSgnLi9fZW51bS1idWcta2V5cycpO1xudmFyIElFX1BST1RPID0gcmVxdWlyZSgnLi9fc2hhcmVkLWtleScpKCdJRV9QUk9UTycpO1xudmFyIEVtcHR5ID0gZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9O1xudmFyIFBST1RPVFlQRSA9ICdwcm90b3R5cGUnO1xuXG4vLyBDcmVhdGUgb2JqZWN0IHdpdGggZmFrZSBgbnVsbGAgcHJvdG90eXBlOiB1c2UgaWZyYW1lIE9iamVjdCB3aXRoIGNsZWFyZWQgcHJvdG90eXBlXG52YXIgY3JlYXRlRGljdCA9IGZ1bmN0aW9uICgpIHtcbiAgLy8gVGhyYXNoLCB3YXN0ZSBhbmQgc29kb215OiBJRSBHQyBidWdcbiAgdmFyIGlmcmFtZSA9IHJlcXVpcmUoJy4vX2RvbS1jcmVhdGUnKSgnaWZyYW1lJyk7XG4gIHZhciBpID0gZW51bUJ1Z0tleXMubGVuZ3RoO1xuICB2YXIgbHQgPSAnPCc7XG4gIHZhciBndCA9ICc+JztcbiAgdmFyIGlmcmFtZURvY3VtZW50O1xuICBpZnJhbWUuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgcmVxdWlyZSgnLi9faHRtbCcpLmFwcGVuZENoaWxkKGlmcmFtZSk7XG4gIGlmcmFtZS5zcmMgPSAnamF2YXNjcmlwdDonOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXNjcmlwdC11cmxcbiAgLy8gY3JlYXRlRGljdCA9IGlmcmFtZS5jb250ZW50V2luZG93Lk9iamVjdDtcbiAgLy8gaHRtbC5yZW1vdmVDaGlsZChpZnJhbWUpO1xuICBpZnJhbWVEb2N1bWVudCA9IGlmcmFtZS5jb250ZW50V2luZG93LmRvY3VtZW50O1xuICBpZnJhbWVEb2N1bWVudC5vcGVuKCk7XG4gIGlmcmFtZURvY3VtZW50LndyaXRlKGx0ICsgJ3NjcmlwdCcgKyBndCArICdkb2N1bWVudC5GPU9iamVjdCcgKyBsdCArICcvc2NyaXB0JyArIGd0KTtcbiAgaWZyYW1lRG9jdW1lbnQuY2xvc2UoKTtcbiAgY3JlYXRlRGljdCA9IGlmcmFtZURvY3VtZW50LkY7XG4gIHdoaWxlIChpLS0pIGRlbGV0ZSBjcmVhdGVEaWN0W1BST1RPVFlQRV1bZW51bUJ1Z0tleXNbaV1dO1xuICByZXR1cm4gY3JlYXRlRGljdCgpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBPYmplY3QuY3JlYXRlIHx8IGZ1bmN0aW9uIGNyZWF0ZShPLCBQcm9wZXJ0aWVzKSB7XG4gIHZhciByZXN1bHQ7XG4gIGlmIChPICE9PSBudWxsKSB7XG4gICAgRW1wdHlbUFJPVE9UWVBFXSA9IGFuT2JqZWN0KE8pO1xuICAgIHJlc3VsdCA9IG5ldyBFbXB0eSgpO1xuICAgIEVtcHR5W1BST1RPVFlQRV0gPSBudWxsO1xuICAgIC8vIGFkZCBcIl9fcHJvdG9fX1wiIGZvciBPYmplY3QuZ2V0UHJvdG90eXBlT2YgcG9seWZpbGxcbiAgICByZXN1bHRbSUVfUFJPVE9dID0gTztcbiAgfSBlbHNlIHJlc3VsdCA9IGNyZWF0ZURpY3QoKTtcbiAgcmV0dXJuIFByb3BlcnRpZXMgPT09IHVuZGVmaW5lZCA/IHJlc3VsdCA6IGRQcyhyZXN1bHQsIFByb3BlcnRpZXMpO1xufTtcbiIsInZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIElFOF9ET01fREVGSU5FID0gcmVxdWlyZSgnLi9faWU4LWRvbS1kZWZpbmUnKTtcbnZhciB0b1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpO1xudmFyIGRQID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xuXG5leHBvcnRzLmYgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gT2JqZWN0LmRlZmluZVByb3BlcnR5IDogZnVuY3Rpb24gZGVmaW5lUHJvcGVydHkoTywgUCwgQXR0cmlidXRlcykge1xuICBhbk9iamVjdChPKTtcbiAgUCA9IHRvUHJpbWl0aXZlKFAsIHRydWUpO1xuICBhbk9iamVjdChBdHRyaWJ1dGVzKTtcbiAgaWYgKElFOF9ET01fREVGSU5FKSB0cnkge1xuICAgIHJldHVybiBkUChPLCBQLCBBdHRyaWJ1dGVzKTtcbiAgfSBjYXRjaCAoZSkgeyAvKiBlbXB0eSAqLyB9XG4gIGlmICgnZ2V0JyBpbiBBdHRyaWJ1dGVzIHx8ICdzZXQnIGluIEF0dHJpYnV0ZXMpIHRocm93IFR5cGVFcnJvcignQWNjZXNzb3JzIG5vdCBzdXBwb3J0ZWQhJyk7XG4gIGlmICgndmFsdWUnIGluIEF0dHJpYnV0ZXMpIE9bUF0gPSBBdHRyaWJ1dGVzLnZhbHVlO1xuICByZXR1cm4gTztcbn07XG4iLCJ2YXIgZFAgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIGdldEtleXMgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgPyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyA6IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXMoTywgUHJvcGVydGllcykge1xuICBhbk9iamVjdChPKTtcbiAgdmFyIGtleXMgPSBnZXRLZXlzKFByb3BlcnRpZXMpO1xuICB2YXIgbGVuZ3RoID0ga2V5cy5sZW5ndGg7XG4gIHZhciBpID0gMDtcbiAgdmFyIFA7XG4gIHdoaWxlIChsZW5ndGggPiBpKSBkUC5mKE8sIFAgPSBrZXlzW2krK10sIFByb3BlcnRpZXNbUF0pO1xuICByZXR1cm4gTztcbn07XG4iLCJ2YXIgcElFID0gcmVxdWlyZSgnLi9fb2JqZWN0LXBpZScpO1xudmFyIGNyZWF0ZURlc2MgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyIHRvUHJpbWl0aXZlID0gcmVxdWlyZSgnLi9fdG8tcHJpbWl0aXZlJyk7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgSUU4X0RPTV9ERUZJTkUgPSByZXF1aXJlKCcuL19pZTgtZG9tLWRlZmluZScpO1xudmFyIGdPUEQgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xuXG5leHBvcnRzLmYgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gZ09QRCA6IGZ1bmN0aW9uIGdldE93blByb3BlcnR5RGVzY3JpcHRvcihPLCBQKSB7XG4gIE8gPSB0b0lPYmplY3QoTyk7XG4gIFAgPSB0b1ByaW1pdGl2ZShQLCB0cnVlKTtcbiAgaWYgKElFOF9ET01fREVGSU5FKSB0cnkge1xuICAgIHJldHVybiBnT1BEKE8sIFApO1xuICB9IGNhdGNoIChlKSB7IC8qIGVtcHR5ICovIH1cbiAgaWYgKGhhcyhPLCBQKSkgcmV0dXJuIGNyZWF0ZURlc2MoIXBJRS5mLmNhbGwoTywgUCksIE9bUF0pO1xufTtcbiIsImV4cG9ydHMuZiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG4iLCJ2YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyIGFycmF5SW5kZXhPZiA9IHJlcXVpcmUoJy4vX2FycmF5LWluY2x1ZGVzJykoZmFsc2UpO1xudmFyIElFX1BST1RPID0gcmVxdWlyZSgnLi9fc2hhcmVkLWtleScpKCdJRV9QUk9UTycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChvYmplY3QsIG5hbWVzKSB7XG4gIHZhciBPID0gdG9JT2JqZWN0KG9iamVjdCk7XG4gIHZhciBpID0gMDtcbiAgdmFyIHJlc3VsdCA9IFtdO1xuICB2YXIga2V5O1xuICBmb3IgKGtleSBpbiBPKSBpZiAoa2V5ICE9IElFX1BST1RPKSBoYXMoTywga2V5KSAmJiByZXN1bHQucHVzaChrZXkpO1xuICAvLyBEb24ndCBlbnVtIGJ1ZyAmIGhpZGRlbiBrZXlzXG4gIHdoaWxlIChuYW1lcy5sZW5ndGggPiBpKSBpZiAoaGFzKE8sIGtleSA9IG5hbWVzW2krK10pKSB7XG4gICAgfmFycmF5SW5kZXhPZihyZXN1bHQsIGtleSkgfHwgcmVzdWx0LnB1c2goa2V5KTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufTtcbiIsIi8vIDE5LjEuMi4xNCAvIDE1LjIuMy4xNCBPYmplY3Qua2V5cyhPKVxudmFyICRrZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMtaW50ZXJuYWwnKTtcbnZhciBlbnVtQnVnS2V5cyA9IHJlcXVpcmUoJy4vX2VudW0tYnVnLWtleXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBPYmplY3Qua2V5cyB8fCBmdW5jdGlvbiBrZXlzKE8pIHtcbiAgcmV0dXJuICRrZXlzKE8sIGVudW1CdWdLZXlzKTtcbn07XG4iLCJleHBvcnRzLmYgPSB7fS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGJpdG1hcCwgdmFsdWUpIHtcbiAgcmV0dXJuIHtcbiAgICBlbnVtZXJhYmxlOiAhKGJpdG1hcCAmIDEpLFxuICAgIGNvbmZpZ3VyYWJsZTogIShiaXRtYXAgJiAyKSxcbiAgICB3cml0YWJsZTogIShiaXRtYXAgJiA0KSxcbiAgICB2YWx1ZTogdmFsdWVcbiAgfTtcbn07XG4iLCJ2YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgaGlkZSA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbnZhciBoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbnZhciBTUkMgPSByZXF1aXJlKCcuL191aWQnKSgnc3JjJyk7XG52YXIgJHRvU3RyaW5nID0gcmVxdWlyZSgnLi9fZnVuY3Rpb24tdG8tc3RyaW5nJyk7XG52YXIgVE9fU1RSSU5HID0gJ3RvU3RyaW5nJztcbnZhciBUUEwgPSAoJycgKyAkdG9TdHJpbmcpLnNwbGl0KFRPX1NUUklORyk7XG5cbnJlcXVpcmUoJy4vX2NvcmUnKS5pbnNwZWN0U291cmNlID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiAkdG9TdHJpbmcuY2FsbChpdCk7XG59O1xuXG4obW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoTywga2V5LCB2YWwsIHNhZmUpIHtcbiAgdmFyIGlzRnVuY3Rpb24gPSB0eXBlb2YgdmFsID09ICdmdW5jdGlvbic7XG4gIGlmIChpc0Z1bmN0aW9uKSBoYXModmFsLCAnbmFtZScpIHx8IGhpZGUodmFsLCAnbmFtZScsIGtleSk7XG4gIGlmIChPW2tleV0gPT09IHZhbCkgcmV0dXJuO1xuICBpZiAoaXNGdW5jdGlvbikgaGFzKHZhbCwgU1JDKSB8fCBoaWRlKHZhbCwgU1JDLCBPW2tleV0gPyAnJyArIE9ba2V5XSA6IFRQTC5qb2luKFN0cmluZyhrZXkpKSk7XG4gIGlmIChPID09PSBnbG9iYWwpIHtcbiAgICBPW2tleV0gPSB2YWw7XG4gIH0gZWxzZSBpZiAoIXNhZmUpIHtcbiAgICBkZWxldGUgT1trZXldO1xuICAgIGhpZGUoTywga2V5LCB2YWwpO1xuICB9IGVsc2UgaWYgKE9ba2V5XSkge1xuICAgIE9ba2V5XSA9IHZhbDtcbiAgfSBlbHNlIHtcbiAgICBoaWRlKE8sIGtleSwgdmFsKTtcbiAgfVxuLy8gYWRkIGZha2UgRnVuY3Rpb24jdG9TdHJpbmcgZm9yIGNvcnJlY3Qgd29yayB3cmFwcGVkIG1ldGhvZHMgLyBjb25zdHJ1Y3RvcnMgd2l0aCBtZXRob2RzIGxpa2UgTG9EYXNoIGlzTmF0aXZlXG59KShGdW5jdGlvbi5wcm90b3R5cGUsIFRPX1NUUklORywgZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gIHJldHVybiB0eXBlb2YgdGhpcyA9PSAnZnVuY3Rpb24nICYmIHRoaXNbU1JDXSB8fCAkdG9TdHJpbmcuY2FsbCh0aGlzKTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgY2xhc3NvZiA9IHJlcXVpcmUoJy4vX2NsYXNzb2YnKTtcbnZhciBidWlsdGluRXhlYyA9IFJlZ0V4cC5wcm90b3R5cGUuZXhlYztcblxuIC8vIGBSZWdFeHBFeGVjYCBhYnN0cmFjdCBvcGVyYXRpb25cbi8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXJlZ2V4cGV4ZWNcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKFIsIFMpIHtcbiAgdmFyIGV4ZWMgPSBSLmV4ZWM7XG4gIGlmICh0eXBlb2YgZXhlYyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHZhciByZXN1bHQgPSBleGVjLmNhbGwoUiwgUyk7XG4gICAgaWYgKHR5cGVvZiByZXN1bHQgIT09ICdvYmplY3QnKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdSZWdFeHAgZXhlYyBtZXRob2QgcmV0dXJuZWQgc29tZXRoaW5nIG90aGVyIHRoYW4gYW4gT2JqZWN0IG9yIG51bGwnKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuICBpZiAoY2xhc3NvZihSKSAhPT0gJ1JlZ0V4cCcpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdSZWdFeHAjZXhlYyBjYWxsZWQgb24gaW5jb21wYXRpYmxlIHJlY2VpdmVyJyk7XG4gIH1cbiAgcmV0dXJuIGJ1aWx0aW5FeGVjLmNhbGwoUiwgUyk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgcmVnZXhwRmxhZ3MgPSByZXF1aXJlKCcuL19mbGFncycpO1xuXG52YXIgbmF0aXZlRXhlYyA9IFJlZ0V4cC5wcm90b3R5cGUuZXhlYztcbi8vIFRoaXMgYWx3YXlzIHJlZmVycyB0byB0aGUgbmF0aXZlIGltcGxlbWVudGF0aW9uLCBiZWNhdXNlIHRoZVxuLy8gU3RyaW5nI3JlcGxhY2UgcG9seWZpbGwgdXNlcyAuL2ZpeC1yZWdleHAtd2VsbC1rbm93bi1zeW1ib2wtbG9naWMuanMsXG4vLyB3aGljaCBsb2FkcyB0aGlzIGZpbGUgYmVmb3JlIHBhdGNoaW5nIHRoZSBtZXRob2QuXG52YXIgbmF0aXZlUmVwbGFjZSA9IFN0cmluZy5wcm90b3R5cGUucmVwbGFjZTtcblxudmFyIHBhdGNoZWRFeGVjID0gbmF0aXZlRXhlYztcblxudmFyIExBU1RfSU5ERVggPSAnbGFzdEluZGV4JztcblxudmFyIFVQREFURVNfTEFTVF9JTkRFWF9XUk9ORyA9IChmdW5jdGlvbiAoKSB7XG4gIHZhciByZTEgPSAvYS8sXG4gICAgICByZTIgPSAvYiovZztcbiAgbmF0aXZlRXhlYy5jYWxsKHJlMSwgJ2EnKTtcbiAgbmF0aXZlRXhlYy5jYWxsKHJlMiwgJ2EnKTtcbiAgcmV0dXJuIHJlMVtMQVNUX0lOREVYXSAhPT0gMCB8fCByZTJbTEFTVF9JTkRFWF0gIT09IDA7XG59KSgpO1xuXG4vLyBub25wYXJ0aWNpcGF0aW5nIGNhcHR1cmluZyBncm91cCwgY29waWVkIGZyb20gZXM1LXNoaW0ncyBTdHJpbmcjc3BsaXQgcGF0Y2guXG52YXIgTlBDR19JTkNMVURFRCA9IC8oKT8/Ly5leGVjKCcnKVsxXSAhPT0gdW5kZWZpbmVkO1xuXG52YXIgUEFUQ0ggPSBVUERBVEVTX0xBU1RfSU5ERVhfV1JPTkcgfHwgTlBDR19JTkNMVURFRDtcblxuaWYgKFBBVENIKSB7XG4gIHBhdGNoZWRFeGVjID0gZnVuY3Rpb24gZXhlYyhzdHIpIHtcbiAgICB2YXIgcmUgPSB0aGlzO1xuICAgIHZhciBsYXN0SW5kZXgsIHJlQ29weSwgbWF0Y2gsIGk7XG5cbiAgICBpZiAoTlBDR19JTkNMVURFRCkge1xuICAgICAgcmVDb3B5ID0gbmV3IFJlZ0V4cCgnXicgKyByZS5zb3VyY2UgKyAnJCg/IVxcXFxzKScsIHJlZ2V4cEZsYWdzLmNhbGwocmUpKTtcbiAgICB9XG4gICAgaWYgKFVQREFURVNfTEFTVF9JTkRFWF9XUk9ORykgbGFzdEluZGV4ID0gcmVbTEFTVF9JTkRFWF07XG5cbiAgICBtYXRjaCA9IG5hdGl2ZUV4ZWMuY2FsbChyZSwgc3RyKTtcblxuICAgIGlmIChVUERBVEVTX0xBU1RfSU5ERVhfV1JPTkcgJiYgbWF0Y2gpIHtcbiAgICAgIHJlW0xBU1RfSU5ERVhdID0gcmUuZ2xvYmFsID8gbWF0Y2guaW5kZXggKyBtYXRjaFswXS5sZW5ndGggOiBsYXN0SW5kZXg7XG4gICAgfVxuICAgIGlmIChOUENHX0lOQ0xVREVEICYmIG1hdGNoICYmIG1hdGNoLmxlbmd0aCA+IDEpIHtcbiAgICAgIC8vIEZpeCBicm93c2VycyB3aG9zZSBgZXhlY2AgbWV0aG9kcyBkb24ndCBjb25zaXN0ZW50bHkgcmV0dXJuIGB1bmRlZmluZWRgXG4gICAgICAvLyBmb3IgTlBDRywgbGlrZSBJRTguIE5PVEU6IFRoaXMgZG9lc24nIHdvcmsgZm9yIC8oLj8pPy9cbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1sb29wLWZ1bmNcbiAgICAgIG5hdGl2ZVJlcGxhY2UuY2FsbChtYXRjaFswXSwgcmVDb3B5LCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGZvciAoaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoIC0gMjsgaSsrKSB7XG4gICAgICAgICAgaWYgKGFyZ3VtZW50c1tpXSA9PT0gdW5kZWZpbmVkKSBtYXRjaFtpXSA9IHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIG1hdGNoO1xuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHBhdGNoZWRFeGVjO1xuIiwiLy8gNy4yLjkgU2FtZVZhbHVlKHgsIHkpXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5pcyB8fCBmdW5jdGlvbiBpcyh4LCB5KSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgcmV0dXJuIHggPT09IHkgPyB4ICE9PSAwIHx8IDEgLyB4ID09PSAxIC8geSA6IHggIT0geCAmJiB5ICE9IHk7XG59O1xuIiwiLy8gV29ya3Mgd2l0aCBfX3Byb3RvX18gb25seS4gT2xkIHY4IGNhbid0IHdvcmsgd2l0aCBudWxsIHByb3RvIG9iamVjdHMuXG4vKiBlc2xpbnQtZGlzYWJsZSBuby1wcm90byAqL1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBjaGVjayA9IGZ1bmN0aW9uIChPLCBwcm90bykge1xuICBhbk9iamVjdChPKTtcbiAgaWYgKCFpc09iamVjdChwcm90bykgJiYgcHJvdG8gIT09IG51bGwpIHRocm93IFR5cGVFcnJvcihwcm90byArIFwiOiBjYW4ndCBzZXQgYXMgcHJvdG90eXBlIVwiKTtcbn07XG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgc2V0OiBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgKCdfX3Byb3RvX18nIGluIHt9ID8gLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICAgIGZ1bmN0aW9uICh0ZXN0LCBidWdneSwgc2V0KSB7XG4gICAgICB0cnkge1xuICAgICAgICBzZXQgPSByZXF1aXJlKCcuL19jdHgnKShGdW5jdGlvbi5jYWxsLCByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpLmYoT2JqZWN0LnByb3RvdHlwZSwgJ19fcHJvdG9fXycpLnNldCwgMik7XG4gICAgICAgIHNldCh0ZXN0LCBbXSk7XG4gICAgICAgIGJ1Z2d5ID0gISh0ZXN0IGluc3RhbmNlb2YgQXJyYXkpO1xuICAgICAgfSBjYXRjaCAoZSkgeyBidWdneSA9IHRydWU7IH1cbiAgICAgIHJldHVybiBmdW5jdGlvbiBzZXRQcm90b3R5cGVPZihPLCBwcm90bykge1xuICAgICAgICBjaGVjayhPLCBwcm90byk7XG4gICAgICAgIGlmIChidWdneSkgTy5fX3Byb3RvX18gPSBwcm90bztcbiAgICAgICAgZWxzZSBzZXQoTywgcHJvdG8pO1xuICAgICAgICByZXR1cm4gTztcbiAgICAgIH07XG4gICAgfSh7fSwgZmFsc2UpIDogdW5kZWZpbmVkKSxcbiAgY2hlY2s6IGNoZWNrXG59O1xuIiwidmFyIHNoYXJlZCA9IHJlcXVpcmUoJy4vX3NoYXJlZCcpKCdrZXlzJyk7XG52YXIgdWlkID0gcmVxdWlyZSgnLi9fdWlkJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgcmV0dXJuIHNoYXJlZFtrZXldIHx8IChzaGFyZWRba2V5XSA9IHVpZChrZXkpKTtcbn07XG4iLCJ2YXIgY29yZSA9IHJlcXVpcmUoJy4vX2NvcmUnKTtcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBTSEFSRUQgPSAnX19jb3JlLWpzX3NoYXJlZF9fJztcbnZhciBzdG9yZSA9IGdsb2JhbFtTSEFSRURdIHx8IChnbG9iYWxbU0hBUkVEXSA9IHt9KTtcblxuKG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGtleSwgdmFsdWUpIHtcbiAgcmV0dXJuIHN0b3JlW2tleV0gfHwgKHN0b3JlW2tleV0gPSB2YWx1ZSAhPT0gdW5kZWZpbmVkID8gdmFsdWUgOiB7fSk7XG59KSgndmVyc2lvbnMnLCBbXSkucHVzaCh7XG4gIHZlcnNpb246IGNvcmUudmVyc2lvbixcbiAgbW9kZTogcmVxdWlyZSgnLi9fbGlicmFyeScpID8gJ3B1cmUnIDogJ2dsb2JhbCcsXG4gIGNvcHlyaWdodDogJ8KpIDIwMjAgRGVuaXMgUHVzaGthcmV2ICh6bG9pcm9jay5ydSknXG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG1ldGhvZCwgYXJnKSB7XG4gIHJldHVybiAhIW1ldGhvZCAmJiBmYWlscyhmdW5jdGlvbiAoKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVzZWxlc3MtY2FsbFxuICAgIGFyZyA/IG1ldGhvZC5jYWxsKG51bGwsIGZ1bmN0aW9uICgpIHsgLyogZW1wdHkgKi8gfSwgMSkgOiBtZXRob2QuY2FsbChudWxsKTtcbiAgfSk7XG59O1xuIiwidmFyIHRvSW50ZWdlciA9IHJlcXVpcmUoJy4vX3RvLWludGVnZXInKTtcbnZhciBtYXggPSBNYXRoLm1heDtcbnZhciBtaW4gPSBNYXRoLm1pbjtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGluZGV4LCBsZW5ndGgpIHtcbiAgaW5kZXggPSB0b0ludGVnZXIoaW5kZXgpO1xuICByZXR1cm4gaW5kZXggPCAwID8gbWF4KGluZGV4ICsgbGVuZ3RoLCAwKSA6IG1pbihpbmRleCwgbGVuZ3RoKTtcbn07XG4iLCIvLyA3LjEuNCBUb0ludGVnZXJcbnZhciBjZWlsID0gTWF0aC5jZWlsO1xudmFyIGZsb29yID0gTWF0aC5mbG9vcjtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBpc05hTihpdCA9ICtpdCkgPyAwIDogKGl0ID4gMCA/IGZsb29yIDogY2VpbCkoaXQpO1xufTtcbiIsIi8vIHRvIGluZGV4ZWQgb2JqZWN0LCB0b09iamVjdCB3aXRoIGZhbGxiYWNrIGZvciBub24tYXJyYXktbGlrZSBFUzMgc3RyaW5nc1xudmFyIElPYmplY3QgPSByZXF1aXJlKCcuL19pb2JqZWN0Jyk7XG52YXIgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBJT2JqZWN0KGRlZmluZWQoaXQpKTtcbn07XG4iLCIvLyA3LjEuMTUgVG9MZW5ndGhcbnZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG52YXIgbWluID0gTWF0aC5taW47XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXQgPiAwID8gbWluKHRvSW50ZWdlcihpdCksIDB4MWZmZmZmZmZmZmZmZmYpIDogMDsgLy8gcG93KDIsIDUzKSAtIDEgPT0gOTAwNzE5OTI1NDc0MDk5MVxufTtcbiIsIi8vIDcuMS4xMyBUb09iamVjdChhcmd1bWVudClcbnZhciBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIE9iamVjdChkZWZpbmVkKGl0KSk7XG59O1xuIiwiLy8gNy4xLjEgVG9QcmltaXRpdmUoaW5wdXQgWywgUHJlZmVycmVkVHlwZV0pXG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbi8vIGluc3RlYWQgb2YgdGhlIEVTNiBzcGVjIHZlcnNpb24sIHdlIGRpZG4ndCBpbXBsZW1lbnQgQEB0b1ByaW1pdGl2ZSBjYXNlXG4vLyBhbmQgdGhlIHNlY29uZCBhcmd1bWVudCAtIGZsYWcgLSBwcmVmZXJyZWQgdHlwZSBpcyBhIHN0cmluZ1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQsIFMpIHtcbiAgaWYgKCFpc09iamVjdChpdCkpIHJldHVybiBpdDtcbiAgdmFyIGZuLCB2YWw7XG4gIGlmIChTICYmIHR5cGVvZiAoZm4gPSBpdC50b1N0cmluZykgPT0gJ2Z1bmN0aW9uJyAmJiAhaXNPYmplY3QodmFsID0gZm4uY2FsbChpdCkpKSByZXR1cm4gdmFsO1xuICBpZiAodHlwZW9mIChmbiA9IGl0LnZhbHVlT2YpID09ICdmdW5jdGlvbicgJiYgIWlzT2JqZWN0KHZhbCA9IGZuLmNhbGwoaXQpKSkgcmV0dXJuIHZhbDtcbiAgaWYgKCFTICYmIHR5cGVvZiAoZm4gPSBpdC50b1N0cmluZykgPT0gJ2Z1bmN0aW9uJyAmJiAhaXNPYmplY3QodmFsID0gZm4uY2FsbChpdCkpKSByZXR1cm4gdmFsO1xuICB0aHJvdyBUeXBlRXJyb3IoXCJDYW4ndCBjb252ZXJ0IG9iamVjdCB0byBwcmltaXRpdmUgdmFsdWVcIik7XG59O1xuIiwidmFyIGlkID0gMDtcbnZhciBweCA9IE1hdGgucmFuZG9tKCk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgcmV0dXJuICdTeW1ib2woJy5jb25jYXQoa2V5ID09PSB1bmRlZmluZWQgPyAnJyA6IGtleSwgJylfJywgKCsraWQgKyBweCkudG9TdHJpbmcoMzYpKTtcbn07XG4iLCJ2YXIgc3RvcmUgPSByZXF1aXJlKCcuL19zaGFyZWQnKSgnd2tzJyk7XG52YXIgdWlkID0gcmVxdWlyZSgnLi9fdWlkJyk7XG52YXIgU3ltYm9sID0gcmVxdWlyZSgnLi9fZ2xvYmFsJykuU3ltYm9sO1xudmFyIFVTRV9TWU1CT0wgPSB0eXBlb2YgU3ltYm9sID09ICdmdW5jdGlvbic7XG5cbnZhciAkZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgcmV0dXJuIHN0b3JlW25hbWVdIHx8IChzdG9yZVtuYW1lXSA9XG4gICAgVVNFX1NZTUJPTCAmJiBTeW1ib2xbbmFtZV0gfHwgKFVTRV9TWU1CT0wgPyBTeW1ib2wgOiB1aWQpKCdTeW1ib2wuJyArIG5hbWUpKTtcbn07XG5cbiRleHBvcnRzLnN0b3JlID0gc3RvcmU7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRmaWx0ZXIgPSByZXF1aXJlKCcuL19hcnJheS1tZXRob2RzJykoMik7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogIXJlcXVpcmUoJy4vX3N0cmljdC1tZXRob2QnKShbXS5maWx0ZXIsIHRydWUpLCAnQXJyYXknLCB7XG4gIC8vIDIyLjEuMy43IC8gMTUuNC40LjIwIEFycmF5LnByb3RvdHlwZS5maWx0ZXIoY2FsbGJhY2tmbiBbLCB0aGlzQXJnXSlcbiAgZmlsdGVyOiBmdW5jdGlvbiBmaWx0ZXIoY2FsbGJhY2tmbiAvKiAsIHRoaXNBcmcgKi8pIHtcbiAgICByZXR1cm4gJGZpbHRlcih0aGlzLCBjYWxsYmFja2ZuLCBhcmd1bWVudHNbMV0pO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJGZvckVhY2ggPSByZXF1aXJlKCcuL19hcnJheS1tZXRob2RzJykoMCk7XG52YXIgU1RSSUNUID0gcmVxdWlyZSgnLi9fc3RyaWN0LW1ldGhvZCcpKFtdLmZvckVhY2gsIHRydWUpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqICFTVFJJQ1QsICdBcnJheScsIHtcbiAgLy8gMjIuMS4zLjEwIC8gMTUuNC40LjE4IEFycmF5LnByb3RvdHlwZS5mb3JFYWNoKGNhbGxiYWNrZm4gWywgdGhpc0FyZ10pXG4gIGZvckVhY2g6IGZ1bmN0aW9uIGZvckVhY2goY2FsbGJhY2tmbiAvKiAsIHRoaXNBcmcgKi8pIHtcbiAgICByZXR1cm4gJGZvckVhY2godGhpcywgY2FsbGJhY2tmbiwgYXJndW1lbnRzWzFdKTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRtYXAgPSByZXF1aXJlKCcuL19hcnJheS1tZXRob2RzJykoMSk7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogIXJlcXVpcmUoJy4vX3N0cmljdC1tZXRob2QnKShbXS5tYXAsIHRydWUpLCAnQXJyYXknLCB7XG4gIC8vIDIyLjEuMy4xNSAvIDE1LjQuNC4xOSBBcnJheS5wcm90b3R5cGUubWFwKGNhbGxiYWNrZm4gWywgdGhpc0FyZ10pXG4gIG1hcDogZnVuY3Rpb24gbWFwKGNhbGxiYWNrZm4gLyogLCB0aGlzQXJnICovKSB7XG4gICAgcmV0dXJuICRtYXAodGhpcywgY2FsbGJhY2tmbiwgYXJndW1lbnRzWzFdKTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGh0bWwgPSByZXF1aXJlKCcuL19odG1sJyk7XG52YXIgY29mID0gcmVxdWlyZSgnLi9fY29mJyk7XG52YXIgdG9BYnNvbHV0ZUluZGV4ID0gcmVxdWlyZSgnLi9fdG8tYWJzb2x1dGUtaW5kZXgnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGFycmF5U2xpY2UgPSBbXS5zbGljZTtcblxuLy8gZmFsbGJhY2sgZm9yIG5vdCBhcnJheS1saWtlIEVTMyBzdHJpbmdzIGFuZCBET00gb2JqZWN0c1xuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiByZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgaWYgKGh0bWwpIGFycmF5U2xpY2UuY2FsbChodG1sKTtcbn0pLCAnQXJyYXknLCB7XG4gIHNsaWNlOiBmdW5jdGlvbiBzbGljZShiZWdpbiwgZW5kKSB7XG4gICAgdmFyIGxlbiA9IHRvTGVuZ3RoKHRoaXMubGVuZ3RoKTtcbiAgICB2YXIga2xhc3MgPSBjb2YodGhpcyk7XG4gICAgZW5kID0gZW5kID09PSB1bmRlZmluZWQgPyBsZW4gOiBlbmQ7XG4gICAgaWYgKGtsYXNzID09ICdBcnJheScpIHJldHVybiBhcnJheVNsaWNlLmNhbGwodGhpcywgYmVnaW4sIGVuZCk7XG4gICAgdmFyIHN0YXJ0ID0gdG9BYnNvbHV0ZUluZGV4KGJlZ2luLCBsZW4pO1xuICAgIHZhciB1cFRvID0gdG9BYnNvbHV0ZUluZGV4KGVuZCwgbGVuKTtcbiAgICB2YXIgc2l6ZSA9IHRvTGVuZ3RoKHVwVG8gLSBzdGFydCk7XG4gICAgdmFyIGNsb25lZCA9IG5ldyBBcnJheShzaXplKTtcbiAgICB2YXIgaSA9IDA7XG4gICAgZm9yICg7IGkgPCBzaXplOyBpKyspIGNsb25lZFtpXSA9IGtsYXNzID09ICdTdHJpbmcnXG4gICAgICA/IHRoaXMuY2hhckF0KHN0YXJ0ICsgaSlcbiAgICAgIDogdGhpc1tzdGFydCArIGldO1xuICAgIHJldHVybiBjbG9uZWQ7XG4gIH1cbn0pO1xuIiwiLy8gMjAuMy4zLjEgLyAxNS45LjQuNCBEYXRlLm5vdygpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ0RhdGUnLCB7IG5vdzogZnVuY3Rpb24gKCkgeyByZXR1cm4gbmV3IERhdGUoKS5nZXRUaW1lKCk7IH0gfSk7XG4iLCIvLyAxOS4yLjMuMiAvIDE1LjMuNC41IEZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kKHRoaXNBcmcsIGFyZ3MuLi4pXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCwgJ0Z1bmN0aW9uJywgeyBiaW5kOiByZXF1aXJlKCcuL19iaW5kJykgfSk7XG4iLCIvLyAxOS4xLjMuMSBPYmplY3QuYXNzaWduKHRhcmdldCwgc291cmNlKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYsICdPYmplY3QnLCB7IGFzc2lnbjogcmVxdWlyZSgnLi9fb2JqZWN0LWFzc2lnbicpIH0pO1xuIiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbi8vIDE5LjEuMi4yIC8gMTUuMi4zLjUgT2JqZWN0LmNyZWF0ZShPIFssIFByb3BlcnRpZXNdKVxuJGV4cG9ydCgkZXhwb3J0LlMsICdPYmplY3QnLCB7IGNyZWF0ZTogcmVxdWlyZSgnLi9fb2JqZWN0LWNyZWF0ZScpIH0pO1xuIiwiLy8gMTkuMS4zLjE5IE9iamVjdC5zZXRQcm90b3R5cGVPZihPLCBwcm90bylcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG4kZXhwb3J0KCRleHBvcnQuUywgJ09iamVjdCcsIHsgc2V0UHJvdG90eXBlT2Y6IHJlcXVpcmUoJy4vX3NldC1wcm90bycpLnNldCB9KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciByZWdleHBFeGVjID0gcmVxdWlyZSgnLi9fcmVnZXhwLWV4ZWMnKTtcbnJlcXVpcmUoJy4vX2V4cG9ydCcpKHtcbiAgdGFyZ2V0OiAnUmVnRXhwJyxcbiAgcHJvdG86IHRydWUsXG4gIGZvcmNlZDogcmVnZXhwRXhlYyAhPT0gLy4vLmV4ZWNcbn0sIHtcbiAgZXhlYzogcmVnZXhwRXhlY1xufSk7XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIHNhbWVWYWx1ZSA9IHJlcXVpcmUoJy4vX3NhbWUtdmFsdWUnKTtcbnZhciByZWdFeHBFeGVjID0gcmVxdWlyZSgnLi9fcmVnZXhwLWV4ZWMtYWJzdHJhY3QnKTtcblxuLy8gQEBzZWFyY2ggbG9naWNcbnJlcXVpcmUoJy4vX2ZpeC1yZS13a3MnKSgnc2VhcmNoJywgMSwgZnVuY3Rpb24gKGRlZmluZWQsIFNFQVJDSCwgJHNlYXJjaCwgbWF5YmVDYWxsTmF0aXZlKSB7XG4gIHJldHVybiBbXG4gICAgLy8gYFN0cmluZy5wcm90b3R5cGUuc2VhcmNoYCBtZXRob2RcbiAgICAvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1zdHJpbmcucHJvdG90eXBlLnNlYXJjaFxuICAgIGZ1bmN0aW9uIHNlYXJjaChyZWdleHApIHtcbiAgICAgIHZhciBPID0gZGVmaW5lZCh0aGlzKTtcbiAgICAgIHZhciBmbiA9IHJlZ2V4cCA9PSB1bmRlZmluZWQgPyB1bmRlZmluZWQgOiByZWdleHBbU0VBUkNIXTtcbiAgICAgIHJldHVybiBmbiAhPT0gdW5kZWZpbmVkID8gZm4uY2FsbChyZWdleHAsIE8pIDogbmV3IFJlZ0V4cChyZWdleHApW1NFQVJDSF0oU3RyaW5nKE8pKTtcbiAgICB9LFxuICAgIC8vIGBSZWdFeHAucHJvdG90eXBlW0BAc2VhcmNoXWAgbWV0aG9kXG4gICAgLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtcmVnZXhwLnByb3RvdHlwZS1AQHNlYXJjaFxuICAgIGZ1bmN0aW9uIChyZWdleHApIHtcbiAgICAgIHZhciByZXMgPSBtYXliZUNhbGxOYXRpdmUoJHNlYXJjaCwgcmVnZXhwLCB0aGlzKTtcbiAgICAgIGlmIChyZXMuZG9uZSkgcmV0dXJuIHJlcy52YWx1ZTtcbiAgICAgIHZhciByeCA9IGFuT2JqZWN0KHJlZ2V4cCk7XG4gICAgICB2YXIgUyA9IFN0cmluZyh0aGlzKTtcbiAgICAgIHZhciBwcmV2aW91c0xhc3RJbmRleCA9IHJ4Lmxhc3RJbmRleDtcbiAgICAgIGlmICghc2FtZVZhbHVlKHByZXZpb3VzTGFzdEluZGV4LCAwKSkgcngubGFzdEluZGV4ID0gMDtcbiAgICAgIHZhciByZXN1bHQgPSByZWdFeHBFeGVjKHJ4LCBTKTtcbiAgICAgIGlmICghc2FtZVZhbHVlKHJ4Lmxhc3RJbmRleCwgcHJldmlvdXNMYXN0SW5kZXgpKSByeC5sYXN0SW5kZXggPSBwcmV2aW91c0xhc3RJbmRleDtcbiAgICAgIHJldHVybiByZXN1bHQgPT09IG51bGwgPyAtMSA6IHJlc3VsdC5pbmRleDtcbiAgICB9XG4gIF07XG59KTtcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvY3NzV2l0aE1hcHBpbmdUb1N0cmluZy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiKiB7XFxuICBmb250LWZhbWlseTogJ1RpbWVzIE5ldyBSb21hbicsIFRpbWVzLCBzZXJpZjtcXG4gIGZvbnQtc2l6ZTogMTVweDtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmMGYwZWI7XFxuICBtYXJnaW4tdG9wOiAxNXB4O1xcbn1cXG5hIHtcXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG4gIGNvbG9yOiBibGFjaztcXG59XFxuLnRvZG8tY29udGVudC1ib3gge1xcbiAgcGFkZGluZzogMTBweDtcXG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXG4gIG1hcmdpbjogNXB4O1xcbiAgaGVpZ2h0OiAxMDBweDtcXG59XFxuLnRvZG8tY29udGVudC1ib3ggKiB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXG59XFxuLmljb24ge1xcbiAgaGVpZ2h0OiAxMHB4O1xcbiAgd2lkdGg6IDEwcHg7XFxufVxcbi5pbmxpbmUtY2VudGVyIHtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG59XFxuLmhpZGUge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuLnNob3cge1xcbiAgZGlzcGxheTogYmxvY2s7XFxufVxcbi5yZWxhdGl2ZS1wb3NpdGlvbiB7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxufVxcbi5hYnNvbHV0ZS1wb3NpdGlvbiB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxufVxcbi5idXR0b24tc3R5bGUge1xcbiAgYm9yZGVyOiBub25lO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2UxZWVmODtcXG4gIGNvbG9yOiAjNjI5N2NjO1xcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcXG59XFxuLmJ1dHRvbi1zdHlsZW9rIHtcXG4gIGJvcmRlcjogbm9uZTtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNlMGY0ZWQ7XFxuICBjb2xvcjogIzZhYTk4MTtcXG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxufVxcbi5hZGQtYnRuaWNvbiB7XFxuICBoZWlnaHQ6IDQwcHg7XFxuICB3aWR0aDogNDBweDtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIGJvdHRvbTogNDBweDtcXG4gIHJpZ2h0OiA0MHB4O1xcbn1cXG4uZWRpdC1ibG9jayB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXG4gIHBhZGRpbmc6IDBweCAxMHB4IDQwcHggMjBweDtcXG59XFxuLmVkaXQtYmxvY2sgaDEge1xcbiAgZm9udC1zaXplOiAyNXB4O1xcbn1cXG4uZWRpdC1ibG9jayAqIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcbn1cXG4uZWRpdC1ibG9jayAuaXRlbSB7XFxuICBwYWRkaW5nOiAyMHB4O1xcbiAgaGVpZ2h0OiAzMHB4O1xcbiAgYm9yZGVyLWJvdHRvbTogcmdiYSgxMzcsIDEyNCwgMTM2LCAwLjEpIHNvbGlkIDFweDtcXG59XFxuLmVkaXQtYmxvY2sgaW5wdXQge1xcbiAgYm9yZGVyOiBub25lO1xcbn1cXG4uZWRpdC1ibG9jayBpbWcge1xcbiAgd2lkdGg6IDIwcHg7XFxuICBoZWlnaHQ6IDIwcHg7XFxuICBwYWRkaW5nLXJpZ2h0OiAyMHB4O1xcbiAgcGFkZGluZy1ib3R0b206IC0xMHB4O1xcbn1cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvY29tcG9uZW50cy9Ub2RvL3N0eWxlcy9zdHlsZS5sZXNzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0ksNENBQUE7RUFDQSxlQUFBO0VBQ0EseUJBQUE7RUFDQSxnQkFBQTtBQUNKO0FBQ0E7RUFDSSxxQkFBQTtFQUNBLFlBQUE7QUFDSjtBQUNBO0VBSUksYUFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7RUFDQSxXQUFBO0VBQ0EsYUFBQTtBQUZKO0FBTkE7RUFFUSx1QkFBQTtBQU9SO0FBQ0E7RUFDSSxZQUFBO0VBQ0EsV0FBQTtBQUNKO0FBQ0E7RUFDSSxrQkFBQTtBQUNKO0FBQ0E7RUFDSSxhQUFBO0FBQ0o7QUFDQTtFQUNJLGNBQUE7QUFDSjtBQUNBO0VBQ0ksa0JBQUE7QUFDSjtBQUNBO0VBQ0ksa0JBQUE7QUFDSjtBQUNBO0VBQ0ksWUFBQTtFQUNBLHlCQUFBO0VBQ0EsY0FBQTtFQUNBLG1CQUFBO0FBQ0o7QUFDQTtFQUNJLFlBQUE7RUFDQSx5QkFBQTtFQUNBLGNBQUE7RUFDQSxtQkFBQTtBQUNKO0FBQ0E7RUFDSSxZQUFBO0VBQ0EsV0FBQTtFQUNBLGtCQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7QUFDSjtBQUVBO0VBQ0ksdUJBQUE7RUFDQSwyQkFBQTtBQUFKO0FBRkE7RUFJUSxlQUFBO0FBQ1I7QUFMQTtFQU9RLHVCQUFBO0FBQ1I7QUFSQTtFQVVRLGFBQUE7RUFDQSxZQUFBO0VBQ0EsaURBQUE7QUFDUjtBQWJBO0VBZVEsWUFBQTtBQUNSO0FBaEJBO0VBa0JRLFdBQUE7RUFDQSxZQUFBO0VBQ0EsbUJBQUE7RUFDQSxxQkFBQTtBQUNSXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIip7XFxuICAgIGZvbnQtZmFtaWx5OiAnVGltZXMgTmV3IFJvbWFuJywgVGltZXMsIHNlcmlmO1xcbiAgICBmb250LXNpemU6IDE1cHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyNDAsMjQwLDIzNSk7XFxuICAgIG1hcmdpbi10b3A6MTVweDtcXG59XFxuYXtcXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xcbiAgICBjb2xvcjogYmxhY2s7XFxufVxcbi50b2RvLWNvbnRlbnQtYm94e1xcbiAgICAqe1xcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjp3aGl0ZTtcXG4gICAgfVxcbiAgICBwYWRkaW5nOiAxMHB4O1xcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOndoaXRlO1xcbiAgICBtYXJnaW46IDVweDtcXG4gICAgaGVpZ2h0OiAxMDBweDtcXG59XFxuLmljb257XFxuICAgIGhlaWdodDogMTBweDtcXG4gICAgd2lkdGg6IDEwcHg7XFxufVxcbi5pbmxpbmUtY2VudGVye1xcbiAgICB0ZXh0LWFsaWduOmNlbnRlcjtcXG59XFxuLmhpZGV7XFxuICAgIGRpc3BsYXk6IG5vbmU7XFxufVxcbi5zaG93e1xcbiAgICBkaXNwbGF5OiBibG9jaztcXG59XFxuLnJlbGF0aXZlLXBvc2l0aW9ue1xcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxufVxcbi5hYnNvbHV0ZS1wb3NpdGlvbntcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbn1cXG4uYnV0dG9uLXN0eWxle1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyMjUsMjM4LDI0OCk7XFxuICAgIGNvbG9yOnJnYig5OCwgMTUxLCAyMDQpO1xcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xcbn1cXG4uYnV0dG9uLXN0eWxlb2t7XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyNCwyNDQsMjM3KTtcXG4gICAgY29sb3I6cmdiKDEwNiwgMTY5LCAxMjkpO1xcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xcbn1cXG4uYWRkLWJ0bmljb257XFxuICAgIGhlaWdodDogNDBweDtcXG4gICAgd2lkdGg6IDQwcHg7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgYm90dG9tOiA0MHB4O1xcbiAgICByaWdodDogNDBweDtcXG59XFxuXFxuLmVkaXQtYmxvY2t7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcbiAgICBwYWRkaW5nOiAwcHggMTBweCA0MHB4IDIwcHg7XFxuICAgIGgxe1xcbiAgICAgICAgZm9udC1zaXplOiAyNXB4O1xcbiAgICB9XFxuICAgICoge1xcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XFxuICAgIH1cXG4gICAgLml0ZW17XFxuICAgICAgICBwYWRkaW5nOiAyMHB4O1xcbiAgICAgICAgaGVpZ2h0OiAzMHB4O1xcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogcmdiYSgxMzcsMTI0LDEzNiwwLjEpIHNvbGlkIDFweDtcXG4gICAgfVxcbiAgICBpbnB1dHtcXG4gICAgICAgIGJvcmRlcjogbm9uZTtcXG4gICAgfVxcbiAgICBpbWd7XFxuICAgICAgICB3aWR0aDogMjBweDtcXG4gICAgICAgIGhlaWdodDogMjBweDtcXG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDIwcHg7XFxuICAgICAgICBwYWRkaW5nLWJvdHRvbTogLTEwcHg7XFxuICAgIH1cXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuLy8gY3NzIGJhc2UgY29kZSwgaW5qZWN0ZWQgYnkgdGhlIGNzcy1sb2FkZXJcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIHJldHVybiBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoY29udGVudCwgXCJ9XCIpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9OyAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuXG5cbiAgbGlzdC5pID0gZnVuY3Rpb24gKG1vZHVsZXMsIG1lZGlhUXVlcnksIGRlZHVwZSkge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCBcIlwiXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICAgICAgdmFyIGlkID0gdGhpc1tpXVswXTtcblxuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBtb2R1bGVzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfaV0pO1xuXG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnRpbnVlXG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAobWVkaWFRdWVyeSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWFRdWVyeTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzJdID0gXCJcIi5jb25jYXQobWVkaWFRdWVyeSwgXCIgYW5kIFwiKS5jb25jYXQoaXRlbVsyXSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIF9zbGljZWRUb0FycmF5KGFyciwgaSkgeyByZXR1cm4gX2FycmF5V2l0aEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgfHwgX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFyciwgaSkgfHwgX25vbkl0ZXJhYmxlUmVzdCgpOyB9XG5cbmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7IH1cblxuZnVuY3Rpb24gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8sIG1pbkxlbikgeyBpZiAoIW8pIHJldHVybjsgaWYgKHR5cGVvZiBvID09PSBcInN0cmluZ1wiKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpOyBpZiAobiA9PT0gXCJPYmplY3RcIiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lOyBpZiAobiA9PT0gXCJNYXBcIiB8fCBuID09PSBcIlNldFwiKSByZXR1cm4gQXJyYXkuZnJvbShvKTsgaWYgKG4gPT09IFwiQXJndW1lbnRzXCIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB9XG5cbmZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7IGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoOyBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShsZW4pOyBpIDwgbGVuOyBpKyspIHsgYXJyMltpXSA9IGFycltpXTsgfSByZXR1cm4gYXJyMjsgfVxuXG5mdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7IGlmICh0eXBlb2YgU3ltYm9sID09PSBcInVuZGVmaW5lZFwiIHx8ICEoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChhcnIpKSkgcmV0dXJuOyB2YXIgX2FyciA9IFtdOyB2YXIgX24gPSB0cnVlOyB2YXIgX2QgPSBmYWxzZTsgdmFyIF9lID0gdW5kZWZpbmVkOyB0cnkgeyBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7IF9hcnIucHVzaChfcy52YWx1ZSk7IGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsgfSB9IGNhdGNoIChlcnIpIHsgX2QgPSB0cnVlOyBfZSA9IGVycjsgfSBmaW5hbGx5IHsgdHJ5IHsgaWYgKCFfbiAmJiBfaVtcInJldHVyblwiXSAhPSBudWxsKSBfaVtcInJldHVyblwiXSgpOyB9IGZpbmFsbHkgeyBpZiAoX2QpIHRocm93IF9lOyB9IH0gcmV0dXJuIF9hcnI7IH1cblxuZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyOyB9XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKSB7XG4gIHZhciBfaXRlbSA9IF9zbGljZWRUb0FycmF5KGl0ZW0sIDQpLFxuICAgICAgY29udGVudCA9IF9pdGVtWzFdLFxuICAgICAgY3NzTWFwcGluZyA9IF9pdGVtWzNdO1xuXG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8IFwiXCIpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIid1c2Ugc3RyaWN0JztcbnZhciB0b2tlbiA9ICclW2EtZjAtOV17Mn0nO1xudmFyIHNpbmdsZU1hdGNoZXIgPSBuZXcgUmVnRXhwKHRva2VuLCAnZ2knKTtcbnZhciBtdWx0aU1hdGNoZXIgPSBuZXcgUmVnRXhwKCcoJyArIHRva2VuICsgJykrJywgJ2dpJyk7XG5cbmZ1bmN0aW9uIGRlY29kZUNvbXBvbmVudHMoY29tcG9uZW50cywgc3BsaXQpIHtcblx0dHJ5IHtcblx0XHQvLyBUcnkgdG8gZGVjb2RlIHRoZSBlbnRpcmUgc3RyaW5nIGZpcnN0XG5cdFx0cmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudChjb21wb25lbnRzLmpvaW4oJycpKTtcblx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0Ly8gRG8gbm90aGluZ1xuXHR9XG5cblx0aWYgKGNvbXBvbmVudHMubGVuZ3RoID09PSAxKSB7XG5cdFx0cmV0dXJuIGNvbXBvbmVudHM7XG5cdH1cblxuXHRzcGxpdCA9IHNwbGl0IHx8IDE7XG5cblx0Ly8gU3BsaXQgdGhlIGFycmF5IGluIDIgcGFydHNcblx0dmFyIGxlZnQgPSBjb21wb25lbnRzLnNsaWNlKDAsIHNwbGl0KTtcblx0dmFyIHJpZ2h0ID0gY29tcG9uZW50cy5zbGljZShzcGxpdCk7XG5cblx0cmV0dXJuIEFycmF5LnByb3RvdHlwZS5jb25jYXQuY2FsbChbXSwgZGVjb2RlQ29tcG9uZW50cyhsZWZ0KSwgZGVjb2RlQ29tcG9uZW50cyhyaWdodCkpO1xufVxuXG5mdW5jdGlvbiBkZWNvZGUoaW5wdXQpIHtcblx0dHJ5IHtcblx0XHRyZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KGlucHV0KTtcblx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0dmFyIHRva2VucyA9IGlucHV0Lm1hdGNoKHNpbmdsZU1hdGNoZXIpO1xuXG5cdFx0Zm9yICh2YXIgaSA9IDE7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcblx0XHRcdGlucHV0ID0gZGVjb2RlQ29tcG9uZW50cyh0b2tlbnMsIGkpLmpvaW4oJycpO1xuXG5cdFx0XHR0b2tlbnMgPSBpbnB1dC5tYXRjaChzaW5nbGVNYXRjaGVyKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gaW5wdXQ7XG5cdH1cbn1cblxuZnVuY3Rpb24gY3VzdG9tRGVjb2RlVVJJQ29tcG9uZW50KGlucHV0KSB7XG5cdC8vIEtlZXAgdHJhY2sgb2YgYWxsIHRoZSByZXBsYWNlbWVudHMgYW5kIHByZWZpbGwgdGhlIG1hcCB3aXRoIHRoZSBgQk9NYFxuXHR2YXIgcmVwbGFjZU1hcCA9IHtcblx0XHQnJUZFJUZGJzogJ1xcdUZGRkRcXHVGRkZEJyxcblx0XHQnJUZGJUZFJzogJ1xcdUZGRkRcXHVGRkZEJ1xuXHR9O1xuXG5cdHZhciBtYXRjaCA9IG11bHRpTWF0Y2hlci5leGVjKGlucHV0KTtcblx0d2hpbGUgKG1hdGNoKSB7XG5cdFx0dHJ5IHtcblx0XHRcdC8vIERlY29kZSBhcyBiaWcgY2h1bmtzIGFzIHBvc3NpYmxlXG5cdFx0XHRyZXBsYWNlTWFwW21hdGNoWzBdXSA9IGRlY29kZVVSSUNvbXBvbmVudChtYXRjaFswXSk7XG5cdFx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0XHR2YXIgcmVzdWx0ID0gZGVjb2RlKG1hdGNoWzBdKTtcblxuXHRcdFx0aWYgKHJlc3VsdCAhPT0gbWF0Y2hbMF0pIHtcblx0XHRcdFx0cmVwbGFjZU1hcFttYXRjaFswXV0gPSByZXN1bHQ7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0bWF0Y2ggPSBtdWx0aU1hdGNoZXIuZXhlYyhpbnB1dCk7XG5cdH1cblxuXHQvLyBBZGQgYCVDMmAgYXQgdGhlIGVuZCBvZiB0aGUgbWFwIHRvIG1ha2Ugc3VyZSBpdCBkb2VzIG5vdCByZXBsYWNlIHRoZSBjb21iaW5hdG9yIGJlZm9yZSBldmVyeXRoaW5nIGVsc2Vcblx0cmVwbGFjZU1hcFsnJUMyJ10gPSAnXFx1RkZGRCc7XG5cblx0dmFyIGVudHJpZXMgPSBPYmplY3Qua2V5cyhyZXBsYWNlTWFwKTtcblxuXHRmb3IgKHZhciBpID0gMDsgaSA8IGVudHJpZXMubGVuZ3RoOyBpKyspIHtcblx0XHQvLyBSZXBsYWNlIGFsbCBkZWNvZGVkIGNvbXBvbmVudHNcblx0XHR2YXIga2V5ID0gZW50cmllc1tpXTtcblx0XHRpbnB1dCA9IGlucHV0LnJlcGxhY2UobmV3IFJlZ0V4cChrZXksICdnJyksIHJlcGxhY2VNYXBba2V5XSk7XG5cdH1cblxuXHRyZXR1cm4gaW5wdXQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGVuY29kZWRVUkkpIHtcblx0aWYgKHR5cGVvZiBlbmNvZGVkVVJJICE9PSAnc3RyaW5nJykge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIGBlbmNvZGVkVVJJYCB0byBiZSBvZiB0eXBlIGBzdHJpbmdgLCBnb3QgYCcgKyB0eXBlb2YgZW5jb2RlZFVSSSArICdgJyk7XG5cdH1cblxuXHR0cnkge1xuXHRcdGVuY29kZWRVUkkgPSBlbmNvZGVkVVJJLnJlcGxhY2UoL1xcKy9nLCAnICcpO1xuXG5cdFx0Ly8gVHJ5IHRoZSBidWlsdCBpbiBkZWNvZGVyIGZpcnN0XG5cdFx0cmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudChlbmNvZGVkVVJJKTtcblx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0Ly8gRmFsbGJhY2sgdG8gYSBtb3JlIGFkdmFuY2VkIGRlY29kZXJcblx0XHRyZXR1cm4gY3VzdG9tRGVjb2RlVVJJQ29tcG9uZW50KGVuY29kZWRVUkkpO1xuXHR9XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob2JqLCBwcmVkaWNhdGUpIHtcblx0dmFyIHJldCA9IHt9O1xuXHR2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iaik7XG5cdHZhciBpc0FyciA9IEFycmF5LmlzQXJyYXkocHJlZGljYXRlKTtcblxuXHRmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIga2V5ID0ga2V5c1tpXTtcblx0XHR2YXIgdmFsID0gb2JqW2tleV07XG5cblx0XHRpZiAoaXNBcnIgPyBwcmVkaWNhdGUuaW5kZXhPZihrZXkpICE9PSAtMSA6IHByZWRpY2F0ZShrZXksIHZhbCwgb2JqKSkge1xuXHRcdFx0cmV0W2tleV0gPSB2YWw7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHJldDtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciByZWFjdElzID0gcmVxdWlyZSgncmVhY3QtaXMnKTtcblxuLyoqXG4gKiBDb3B5cmlnaHQgMjAxNSwgWWFob28hIEluYy5cbiAqIENvcHlyaWdodHMgbGljZW5zZWQgdW5kZXIgdGhlIE5ldyBCU0QgTGljZW5zZS4gU2VlIHRoZSBhY2NvbXBhbnlpbmcgTElDRU5TRSBmaWxlIGZvciB0ZXJtcy5cbiAqL1xudmFyIFJFQUNUX1NUQVRJQ1MgPSB7XG4gIGNoaWxkQ29udGV4dFR5cGVzOiB0cnVlLFxuICBjb250ZXh0VHlwZTogdHJ1ZSxcbiAgY29udGV4dFR5cGVzOiB0cnVlLFxuICBkZWZhdWx0UHJvcHM6IHRydWUsXG4gIGRpc3BsYXlOYW1lOiB0cnVlLFxuICBnZXREZWZhdWx0UHJvcHM6IHRydWUsXG4gIGdldERlcml2ZWRTdGF0ZUZyb21FcnJvcjogdHJ1ZSxcbiAgZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzOiB0cnVlLFxuICBtaXhpbnM6IHRydWUsXG4gIHByb3BUeXBlczogdHJ1ZSxcbiAgdHlwZTogdHJ1ZVxufTtcbnZhciBLTk9XTl9TVEFUSUNTID0ge1xuICBuYW1lOiB0cnVlLFxuICBsZW5ndGg6IHRydWUsXG4gIHByb3RvdHlwZTogdHJ1ZSxcbiAgY2FsbGVyOiB0cnVlLFxuICBjYWxsZWU6IHRydWUsXG4gIGFyZ3VtZW50czogdHJ1ZSxcbiAgYXJpdHk6IHRydWVcbn07XG52YXIgRk9SV0FSRF9SRUZfU1RBVElDUyA9IHtcbiAgJyQkdHlwZW9mJzogdHJ1ZSxcbiAgcmVuZGVyOiB0cnVlLFxuICBkZWZhdWx0UHJvcHM6IHRydWUsXG4gIGRpc3BsYXlOYW1lOiB0cnVlLFxuICBwcm9wVHlwZXM6IHRydWVcbn07XG52YXIgTUVNT19TVEFUSUNTID0ge1xuICAnJCR0eXBlb2YnOiB0cnVlLFxuICBjb21wYXJlOiB0cnVlLFxuICBkZWZhdWx0UHJvcHM6IHRydWUsXG4gIGRpc3BsYXlOYW1lOiB0cnVlLFxuICBwcm9wVHlwZXM6IHRydWUsXG4gIHR5cGU6IHRydWVcbn07XG52YXIgVFlQRV9TVEFUSUNTID0ge307XG5UWVBFX1NUQVRJQ1NbcmVhY3RJcy5Gb3J3YXJkUmVmXSA9IEZPUldBUkRfUkVGX1NUQVRJQ1M7XG5UWVBFX1NUQVRJQ1NbcmVhY3RJcy5NZW1vXSA9IE1FTU9fU1RBVElDUztcblxuZnVuY3Rpb24gZ2V0U3RhdGljcyhjb21wb25lbnQpIHtcbiAgLy8gUmVhY3QgdjE2LjExIGFuZCBiZWxvd1xuICBpZiAocmVhY3RJcy5pc01lbW8oY29tcG9uZW50KSkge1xuICAgIHJldHVybiBNRU1PX1NUQVRJQ1M7XG4gIH0gLy8gUmVhY3QgdjE2LjEyIGFuZCBhYm92ZVxuXG5cbiAgcmV0dXJuIFRZUEVfU1RBVElDU1tjb21wb25lbnRbJyQkdHlwZW9mJ11dIHx8IFJFQUNUX1NUQVRJQ1M7XG59XG5cbnZhciBkZWZpbmVQcm9wZXJ0eSA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBnZXRPd25Qcm9wZXJ0eU5hbWVzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXM7XG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xudmFyIGdldFByb3RvdHlwZU9mID0gT2JqZWN0LmdldFByb3RvdHlwZU9mO1xudmFyIG9iamVjdFByb3RvdHlwZSA9IE9iamVjdC5wcm90b3R5cGU7XG5mdW5jdGlvbiBob2lzdE5vblJlYWN0U3RhdGljcyh0YXJnZXRDb21wb25lbnQsIHNvdXJjZUNvbXBvbmVudCwgYmxhY2tsaXN0KSB7XG4gIGlmICh0eXBlb2Ygc291cmNlQ29tcG9uZW50ICE9PSAnc3RyaW5nJykge1xuICAgIC8vIGRvbid0IGhvaXN0IG92ZXIgc3RyaW5nIChodG1sKSBjb21wb25lbnRzXG4gICAgaWYgKG9iamVjdFByb3RvdHlwZSkge1xuICAgICAgdmFyIGluaGVyaXRlZENvbXBvbmVudCA9IGdldFByb3RvdHlwZU9mKHNvdXJjZUNvbXBvbmVudCk7XG5cbiAgICAgIGlmIChpbmhlcml0ZWRDb21wb25lbnQgJiYgaW5oZXJpdGVkQ29tcG9uZW50ICE9PSBvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgICAgaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBpbmhlcml0ZWRDb21wb25lbnQsIGJsYWNrbGlzdCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdmFyIGtleXMgPSBnZXRPd25Qcm9wZXJ0eU5hbWVzKHNvdXJjZUNvbXBvbmVudCk7XG5cbiAgICBpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG4gICAgICBrZXlzID0ga2V5cy5jb25jYXQoZ2V0T3duUHJvcGVydHlTeW1ib2xzKHNvdXJjZUNvbXBvbmVudCkpO1xuICAgIH1cblxuICAgIHZhciB0YXJnZXRTdGF0aWNzID0gZ2V0U3RhdGljcyh0YXJnZXRDb21wb25lbnQpO1xuICAgIHZhciBzb3VyY2VTdGF0aWNzID0gZ2V0U3RhdGljcyhzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgKytpKSB7XG4gICAgICB2YXIga2V5ID0ga2V5c1tpXTtcblxuICAgICAgaWYgKCFLTk9XTl9TVEFUSUNTW2tleV0gJiYgIShibGFja2xpc3QgJiYgYmxhY2tsaXN0W2tleV0pICYmICEoc291cmNlU3RhdGljcyAmJiBzb3VyY2VTdGF0aWNzW2tleV0pICYmICEodGFyZ2V0U3RhdGljcyAmJiB0YXJnZXRTdGF0aWNzW2tleV0pKSB7XG4gICAgICAgIHZhciBkZXNjcmlwdG9yID0gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZUNvbXBvbmVudCwga2V5KTtcblxuICAgICAgICB0cnkge1xuICAgICAgICAgIC8vIEF2b2lkIGZhaWx1cmVzIGZyb20gcmVhZC1vbmx5IHByb3BlcnRpZXNcbiAgICAgICAgICBkZWZpbmVQcm9wZXJ0eSh0YXJnZXRDb21wb25lbnQsIGtleSwgZGVzY3JpcHRvcik7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHt9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRhcmdldENvbXBvbmVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBob2lzdE5vblJlYWN0U3RhdGljcztcbiIsIi8qXG5vYmplY3QtYXNzaWduXG4oYykgU2luZHJlIFNvcmh1c1xuQGxpY2Vuc2UgTUlUXG4qL1xuXG4ndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIHByb3BJc0VudW1lcmFibGUgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG5mdW5jdGlvbiB0b09iamVjdCh2YWwpIHtcblx0aWYgKHZhbCA9PT0gbnVsbCB8fCB2YWwgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ09iamVjdC5hc3NpZ24gY2Fubm90IGJlIGNhbGxlZCB3aXRoIG51bGwgb3IgdW5kZWZpbmVkJyk7XG5cdH1cblxuXHRyZXR1cm4gT2JqZWN0KHZhbCk7XG59XG5cbmZ1bmN0aW9uIHNob3VsZFVzZU5hdGl2ZSgpIHtcblx0dHJ5IHtcblx0XHRpZiAoIU9iamVjdC5hc3NpZ24pIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBEZXRlY3QgYnVnZ3kgcHJvcGVydHkgZW51bWVyYXRpb24gb3JkZXIgaW4gb2xkZXIgVjggdmVyc2lvbnMuXG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD00MTE4XG5cdFx0dmFyIHRlc3QxID0gbmV3IFN0cmluZygnYWJjJyk7ICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ldy13cmFwcGVyc1xuXHRcdHRlc3QxWzVdID0gJ2RlJztcblx0XHRpZiAoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDEpWzBdID09PSAnNScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QyID0ge307XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XG5cdFx0XHR0ZXN0MlsnXycgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpXSA9IGk7XG5cdFx0fVxuXHRcdHZhciBvcmRlcjIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MikubWFwKGZ1bmN0aW9uIChuKSB7XG5cdFx0XHRyZXR1cm4gdGVzdDJbbl07XG5cdFx0fSk7XG5cdFx0aWYgKG9yZGVyMi5qb2luKCcnKSAhPT0gJzAxMjM0NTY3ODknKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MyA9IHt9O1xuXHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGxldHRlcikge1xuXHRcdFx0dGVzdDNbbGV0dGVyXSA9IGxldHRlcjtcblx0XHR9KTtcblx0XHRpZiAoT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgdGVzdDMpKS5qb2luKCcnKSAhPT1cblx0XHRcdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHJldHVybiB0cnVlO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHQvLyBXZSBkb24ndCBleHBlY3QgYW55IG9mIHRoZSBhYm92ZSB0byB0aHJvdywgYnV0IGJldHRlciB0byBiZSBzYWZlLlxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNob3VsZFVzZU5hdGl2ZSgpID8gT2JqZWN0LmFzc2lnbiA6IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSkge1xuXHR2YXIgZnJvbTtcblx0dmFyIHRvID0gdG9PYmplY3QodGFyZ2V0KTtcblx0dmFyIHN5bWJvbHM7XG5cblx0Zm9yICh2YXIgcyA9IDE7IHMgPCBhcmd1bWVudHMubGVuZ3RoOyBzKyspIHtcblx0XHRmcm9tID0gT2JqZWN0KGFyZ3VtZW50c1tzXSk7XG5cblx0XHRmb3IgKHZhciBrZXkgaW4gZnJvbSkge1xuXHRcdFx0aWYgKGhhc093blByb3BlcnR5LmNhbGwoZnJvbSwga2V5KSkge1xuXHRcdFx0XHR0b1trZXldID0gZnJvbVtrZXldO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcblx0XHRcdHN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZnJvbSk7XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0aWYgKHByb3BJc0VudW1lcmFibGUuY2FsbChmcm9tLCBzeW1ib2xzW2ldKSkge1xuXHRcdFx0XHRcdHRvW3N5bWJvbHNbaV1dID0gZnJvbVtzeW1ib2xzW2ldXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0bztcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gcmVxdWlyZSgnLi9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQnKTtcblxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbigpIHt9XG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0KCkge31cbmVtcHR5RnVuY3Rpb25XaXRoUmVzZXQucmVzZXRXYXJuaW5nQ2FjaGUgPSBlbXB0eUZ1bmN0aW9uO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuICBmdW5jdGlvbiBzaGltKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSwgc2VjcmV0KSB7XG4gICAgaWYgKHNlY3JldCA9PT0gUmVhY3RQcm9wVHlwZXNTZWNyZXQpIHtcbiAgICAgIC8vIEl0IGlzIHN0aWxsIHNhZmUgd2hlbiBjYWxsZWQgZnJvbSBSZWFjdC5cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIGVyciA9IG5ldyBFcnJvcihcbiAgICAgICdDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiAnICtcbiAgICAgICdVc2UgUHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzKCkgdG8gY2FsbCB0aGVtLiAnICtcbiAgICAgICdSZWFkIG1vcmUgYXQgaHR0cDovL2ZiLm1lL3VzZS1jaGVjay1wcm9wLXR5cGVzJ1xuICAgICk7XG4gICAgZXJyLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgdGhyb3cgZXJyO1xuICB9O1xuICBzaGltLmlzUmVxdWlyZWQgPSBzaGltO1xuICBmdW5jdGlvbiBnZXRTaGltKCkge1xuICAgIHJldHVybiBzaGltO1xuICB9O1xuICAvLyBJbXBvcnRhbnQhXG4gIC8vIEtlZXAgdGhpcyBsaXN0IGluIHN5bmMgd2l0aCBwcm9kdWN0aW9uIHZlcnNpb24gaW4gYC4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMuanNgLlxuICB2YXIgUmVhY3RQcm9wVHlwZXMgPSB7XG4gICAgYXJyYXk6IHNoaW0sXG4gICAgYm9vbDogc2hpbSxcbiAgICBmdW5jOiBzaGltLFxuICAgIG51bWJlcjogc2hpbSxcbiAgICBvYmplY3Q6IHNoaW0sXG4gICAgc3RyaW5nOiBzaGltLFxuICAgIHN5bWJvbDogc2hpbSxcblxuICAgIGFueTogc2hpbSxcbiAgICBhcnJheU9mOiBnZXRTaGltLFxuICAgIGVsZW1lbnQ6IHNoaW0sXG4gICAgZWxlbWVudFR5cGU6IHNoaW0sXG4gICAgaW5zdGFuY2VPZjogZ2V0U2hpbSxcbiAgICBub2RlOiBzaGltLFxuICAgIG9iamVjdE9mOiBnZXRTaGltLFxuICAgIG9uZU9mOiBnZXRTaGltLFxuICAgIG9uZU9mVHlwZTogZ2V0U2hpbSxcbiAgICBzaGFwZTogZ2V0U2hpbSxcbiAgICBleGFjdDogZ2V0U2hpbSxcblxuICAgIGNoZWNrUHJvcFR5cGVzOiBlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0LFxuICAgIHJlc2V0V2FybmluZ0NhY2hlOiBlbXB0eUZ1bmN0aW9uXG4gIH07XG5cbiAgUmVhY3RQcm9wVHlwZXMuUHJvcFR5cGVzID0gUmVhY3RQcm9wVHlwZXM7XG5cbiAgcmV0dXJuIFJlYWN0UHJvcFR5cGVzO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIFJlYWN0SXMgPSByZXF1aXJlKCdyZWFjdC1pcycpO1xuXG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IGRldmVsb3BtZW50IGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIHZhciB0aHJvd09uRGlyZWN0QWNjZXNzID0gdHJ1ZTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzJykoUmVhY3RJcy5pc0VsZW1lbnQsIHRocm93T25EaXJlY3RBY2Nlc3MpO1xufSBlbHNlIHtcbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgcHJvZHVjdGlvbiBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zJykoKTtcbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSAnU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRUQnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0UHJvcFR5cGVzU2VjcmV0O1xuIiwiJ3VzZSBzdHJpY3QnO1xuY29uc3Qgc3RyaWN0VXJpRW5jb2RlID0gcmVxdWlyZSgnc3RyaWN0LXVyaS1lbmNvZGUnKTtcbmNvbnN0IGRlY29kZUNvbXBvbmVudCA9IHJlcXVpcmUoJ2RlY29kZS11cmktY29tcG9uZW50Jyk7XG5jb25zdCBzcGxpdE9uRmlyc3QgPSByZXF1aXJlKCdzcGxpdC1vbi1maXJzdCcpO1xuY29uc3QgZmlsdGVyT2JqZWN0ID0gcmVxdWlyZSgnZmlsdGVyLW9iaicpO1xuXG5jb25zdCBpc051bGxPclVuZGVmaW5lZCA9IHZhbHVlID0+IHZhbHVlID09PSBudWxsIHx8IHZhbHVlID09PSB1bmRlZmluZWQ7XG5cbmZ1bmN0aW9uIGVuY29kZXJGb3JBcnJheUZvcm1hdChvcHRpb25zKSB7XG5cdHN3aXRjaCAob3B0aW9ucy5hcnJheUZvcm1hdCkge1xuXHRcdGNhc2UgJ2luZGV4Jzpcblx0XHRcdHJldHVybiBrZXkgPT4gKHJlc3VsdCwgdmFsdWUpID0+IHtcblx0XHRcdFx0Y29uc3QgaW5kZXggPSByZXN1bHQubGVuZ3RoO1xuXG5cdFx0XHRcdGlmIChcblx0XHRcdFx0XHR2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8XG5cdFx0XHRcdFx0KG9wdGlvbnMuc2tpcE51bGwgJiYgdmFsdWUgPT09IG51bGwpIHx8XG5cdFx0XHRcdFx0KG9wdGlvbnMuc2tpcEVtcHR5U3RyaW5nICYmIHZhbHVlID09PSAnJylcblx0XHRcdFx0KSB7XG5cdFx0XHRcdFx0cmV0dXJuIHJlc3VsdDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuXHRcdFx0XHRcdHJldHVybiBbLi4ucmVzdWx0LCBbZW5jb2RlKGtleSwgb3B0aW9ucyksICdbJywgaW5kZXgsICddJ10uam9pbignJyldO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIFtcblx0XHRcdFx0XHQuLi5yZXN1bHQsXG5cdFx0XHRcdFx0W2VuY29kZShrZXksIG9wdGlvbnMpLCAnWycsIGVuY29kZShpbmRleCwgb3B0aW9ucyksICddPScsIGVuY29kZSh2YWx1ZSwgb3B0aW9ucyldLmpvaW4oJycpXG5cdFx0XHRcdF07XG5cdFx0XHR9O1xuXG5cdFx0Y2FzZSAnYnJhY2tldCc6XG5cdFx0XHRyZXR1cm4ga2V5ID0+IChyZXN1bHQsIHZhbHVlKSA9PiB7XG5cdFx0XHRcdGlmIChcblx0XHRcdFx0XHR2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8XG5cdFx0XHRcdFx0KG9wdGlvbnMuc2tpcE51bGwgJiYgdmFsdWUgPT09IG51bGwpIHx8XG5cdFx0XHRcdFx0KG9wdGlvbnMuc2tpcEVtcHR5U3RyaW5nICYmIHZhbHVlID09PSAnJylcblx0XHRcdFx0KSB7XG5cdFx0XHRcdFx0cmV0dXJuIHJlc3VsdDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuXHRcdFx0XHRcdHJldHVybiBbLi4ucmVzdWx0LCBbZW5jb2RlKGtleSwgb3B0aW9ucyksICdbXSddLmpvaW4oJycpXTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiBbLi4ucmVzdWx0LCBbZW5jb2RlKGtleSwgb3B0aW9ucyksICdbXT0nLCBlbmNvZGUodmFsdWUsIG9wdGlvbnMpXS5qb2luKCcnKV07XG5cdFx0XHR9O1xuXG5cdFx0Y2FzZSAnY29tbWEnOlxuXHRcdGNhc2UgJ3NlcGFyYXRvcic6XG5cdFx0Y2FzZSAnYnJhY2tldC1zZXBhcmF0b3InOiB7XG5cdFx0XHRjb25zdCBrZXlWYWx1ZVNlcCA9IG9wdGlvbnMuYXJyYXlGb3JtYXQgPT09ICdicmFja2V0LXNlcGFyYXRvcicgP1xuXHRcdFx0XHQnW109JyA6XG5cdFx0XHRcdCc9JztcblxuXHRcdFx0cmV0dXJuIGtleSA9PiAocmVzdWx0LCB2YWx1ZSkgPT4ge1xuXHRcdFx0XHRpZiAoXG5cdFx0XHRcdFx0dmFsdWUgPT09IHVuZGVmaW5lZCB8fFxuXHRcdFx0XHRcdChvcHRpb25zLnNraXBOdWxsICYmIHZhbHVlID09PSBudWxsKSB8fFxuXHRcdFx0XHRcdChvcHRpb25zLnNraXBFbXB0eVN0cmluZyAmJiB2YWx1ZSA9PT0gJycpXG5cdFx0XHRcdCkge1xuXHRcdFx0XHRcdHJldHVybiByZXN1bHQ7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBUcmFuc2xhdGUgbnVsbCB0byBhbiBlbXB0eSBzdHJpbmcgc28gdGhhdCBpdCBkb2Vzbid0IHNlcmlhbGl6ZSBhcyAnbnVsbCdcblx0XHRcdFx0dmFsdWUgPSB2YWx1ZSA9PT0gbnVsbCA/ICcnIDogdmFsdWU7XG5cblx0XHRcdFx0aWYgKHJlc3VsdC5sZW5ndGggPT09IDApIHtcblx0XHRcdFx0XHRyZXR1cm4gW1tlbmNvZGUoa2V5LCBvcHRpb25zKSwga2V5VmFsdWVTZXAsIGVuY29kZSh2YWx1ZSwgb3B0aW9ucyldLmpvaW4oJycpXTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiBbW3Jlc3VsdCwgZW5jb2RlKHZhbHVlLCBvcHRpb25zKV0uam9pbihvcHRpb25zLmFycmF5Rm9ybWF0U2VwYXJhdG9yKV07XG5cdFx0XHR9O1xuXHRcdH1cblxuXHRcdGRlZmF1bHQ6XG5cdFx0XHRyZXR1cm4ga2V5ID0+IChyZXN1bHQsIHZhbHVlKSA9PiB7XG5cdFx0XHRcdGlmIChcblx0XHRcdFx0XHR2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8XG5cdFx0XHRcdFx0KG9wdGlvbnMuc2tpcE51bGwgJiYgdmFsdWUgPT09IG51bGwpIHx8XG5cdFx0XHRcdFx0KG9wdGlvbnMuc2tpcEVtcHR5U3RyaW5nICYmIHZhbHVlID09PSAnJylcblx0XHRcdFx0KSB7XG5cdFx0XHRcdFx0cmV0dXJuIHJlc3VsdDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuXHRcdFx0XHRcdHJldHVybiBbLi4ucmVzdWx0LCBlbmNvZGUoa2V5LCBvcHRpb25zKV07XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gWy4uLnJlc3VsdCwgW2VuY29kZShrZXksIG9wdGlvbnMpLCAnPScsIGVuY29kZSh2YWx1ZSwgb3B0aW9ucyldLmpvaW4oJycpXTtcblx0XHRcdH07XG5cdH1cbn1cblxuZnVuY3Rpb24gcGFyc2VyRm9yQXJyYXlGb3JtYXQob3B0aW9ucykge1xuXHRsZXQgcmVzdWx0O1xuXG5cdHN3aXRjaCAob3B0aW9ucy5hcnJheUZvcm1hdCkge1xuXHRcdGNhc2UgJ2luZGV4Jzpcblx0XHRcdHJldHVybiAoa2V5LCB2YWx1ZSwgYWNjdW11bGF0b3IpID0+IHtcblx0XHRcdFx0cmVzdWx0ID0gL1xcWyhcXGQqKVxcXSQvLmV4ZWMoa2V5KTtcblxuXHRcdFx0XHRrZXkgPSBrZXkucmVwbGFjZSgvXFxbXFxkKlxcXSQvLCAnJyk7XG5cblx0XHRcdFx0aWYgKCFyZXN1bHQpIHtcblx0XHRcdFx0XHRhY2N1bXVsYXRvcltrZXldID0gdmFsdWU7XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0aWYgKGFjY3VtdWxhdG9yW2tleV0gPT09IHVuZGVmaW5lZCkge1xuXHRcdFx0XHRcdGFjY3VtdWxhdG9yW2tleV0gPSB7fTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGFjY3VtdWxhdG9yW2tleV1bcmVzdWx0WzFdXSA9IHZhbHVlO1xuXHRcdFx0fTtcblxuXHRcdGNhc2UgJ2JyYWNrZXQnOlxuXHRcdFx0cmV0dXJuIChrZXksIHZhbHVlLCBhY2N1bXVsYXRvcikgPT4ge1xuXHRcdFx0XHRyZXN1bHQgPSAvKFxcW1xcXSkkLy5leGVjKGtleSk7XG5cdFx0XHRcdGtleSA9IGtleS5yZXBsYWNlKC9cXFtcXF0kLywgJycpO1xuXG5cdFx0XHRcdGlmICghcmVzdWx0KSB7XG5cdFx0XHRcdFx0YWNjdW11bGF0b3Jba2V5XSA9IHZhbHVlO1xuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmIChhY2N1bXVsYXRvcltrZXldID09PSB1bmRlZmluZWQpIHtcblx0XHRcdFx0XHRhY2N1bXVsYXRvcltrZXldID0gW3ZhbHVlXTtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRhY2N1bXVsYXRvcltrZXldID0gW10uY29uY2F0KGFjY3VtdWxhdG9yW2tleV0sIHZhbHVlKTtcblx0XHRcdH07XG5cblx0XHRjYXNlICdjb21tYSc6XG5cdFx0Y2FzZSAnc2VwYXJhdG9yJzpcblx0XHRcdHJldHVybiAoa2V5LCB2YWx1ZSwgYWNjdW11bGF0b3IpID0+IHtcblx0XHRcdFx0Y29uc3QgaXNBcnJheSA9IHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgdmFsdWUuaW5jbHVkZXMob3B0aW9ucy5hcnJheUZvcm1hdFNlcGFyYXRvcik7XG5cdFx0XHRcdGNvbnN0IGlzRW5jb2RlZEFycmF5ID0gKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgIWlzQXJyYXkgJiYgZGVjb2RlKHZhbHVlLCBvcHRpb25zKS5pbmNsdWRlcyhvcHRpb25zLmFycmF5Rm9ybWF0U2VwYXJhdG9yKSk7XG5cdFx0XHRcdHZhbHVlID0gaXNFbmNvZGVkQXJyYXkgPyBkZWNvZGUodmFsdWUsIG9wdGlvbnMpIDogdmFsdWU7XG5cdFx0XHRcdGNvbnN0IG5ld1ZhbHVlID0gaXNBcnJheSB8fCBpc0VuY29kZWRBcnJheSA/IHZhbHVlLnNwbGl0KG9wdGlvbnMuYXJyYXlGb3JtYXRTZXBhcmF0b3IpLm1hcChpdGVtID0+IGRlY29kZShpdGVtLCBvcHRpb25zKSkgOiB2YWx1ZSA9PT0gbnVsbCA/IHZhbHVlIDogZGVjb2RlKHZhbHVlLCBvcHRpb25zKTtcblx0XHRcdFx0YWNjdW11bGF0b3Jba2V5XSA9IG5ld1ZhbHVlO1xuXHRcdFx0fTtcblxuXHRcdGNhc2UgJ2JyYWNrZXQtc2VwYXJhdG9yJzpcblx0XHRcdHJldHVybiAoa2V5LCB2YWx1ZSwgYWNjdW11bGF0b3IpID0+IHtcblx0XHRcdFx0Y29uc3QgaXNBcnJheSA9IC8oXFxbXFxdKSQvLnRlc3Qoa2V5KTtcblx0XHRcdFx0a2V5ID0ga2V5LnJlcGxhY2UoL1xcW1xcXSQvLCAnJyk7XG5cblx0XHRcdFx0aWYgKCFpc0FycmF5KSB7XG5cdFx0XHRcdFx0YWNjdW11bGF0b3Jba2V5XSA9IHZhbHVlID8gZGVjb2RlKHZhbHVlLCBvcHRpb25zKSA6IHZhbHVlO1xuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGNvbnN0IGFycmF5VmFsdWUgPSB2YWx1ZSA9PT0gbnVsbCA/XG5cdFx0XHRcdFx0W10gOlxuXHRcdFx0XHRcdHZhbHVlLnNwbGl0KG9wdGlvbnMuYXJyYXlGb3JtYXRTZXBhcmF0b3IpLm1hcChpdGVtID0+IGRlY29kZShpdGVtLCBvcHRpb25zKSk7XG5cblx0XHRcdFx0aWYgKGFjY3VtdWxhdG9yW2tleV0gPT09IHVuZGVmaW5lZCkge1xuXHRcdFx0XHRcdGFjY3VtdWxhdG9yW2tleV0gPSBhcnJheVZhbHVlO1xuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGFjY3VtdWxhdG9yW2tleV0gPSBbXS5jb25jYXQoYWNjdW11bGF0b3Jba2V5XSwgYXJyYXlWYWx1ZSk7XG5cdFx0XHR9O1xuXG5cdFx0ZGVmYXVsdDpcblx0XHRcdHJldHVybiAoa2V5LCB2YWx1ZSwgYWNjdW11bGF0b3IpID0+IHtcblx0XHRcdFx0aWYgKGFjY3VtdWxhdG9yW2tleV0gPT09IHVuZGVmaW5lZCkge1xuXHRcdFx0XHRcdGFjY3VtdWxhdG9yW2tleV0gPSB2YWx1ZTtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRhY2N1bXVsYXRvcltrZXldID0gW10uY29uY2F0KGFjY3VtdWxhdG9yW2tleV0sIHZhbHVlKTtcblx0XHRcdH07XG5cdH1cbn1cblxuZnVuY3Rpb24gdmFsaWRhdGVBcnJheUZvcm1hdFNlcGFyYXRvcih2YWx1ZSkge1xuXHRpZiAodHlwZW9mIHZhbHVlICE9PSAnc3RyaW5nJyB8fCB2YWx1ZS5sZW5ndGggIT09IDEpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdhcnJheUZvcm1hdFNlcGFyYXRvciBtdXN0IGJlIHNpbmdsZSBjaGFyYWN0ZXIgc3RyaW5nJyk7XG5cdH1cbn1cblxuZnVuY3Rpb24gZW5jb2RlKHZhbHVlLCBvcHRpb25zKSB7XG5cdGlmIChvcHRpb25zLmVuY29kZSkge1xuXHRcdHJldHVybiBvcHRpb25zLnN0cmljdCA/IHN0cmljdFVyaUVuY29kZSh2YWx1ZSkgOiBlbmNvZGVVUklDb21wb25lbnQodmFsdWUpO1xuXHR9XG5cblx0cmV0dXJuIHZhbHVlO1xufVxuXG5mdW5jdGlvbiBkZWNvZGUodmFsdWUsIG9wdGlvbnMpIHtcblx0aWYgKG9wdGlvbnMuZGVjb2RlKSB7XG5cdFx0cmV0dXJuIGRlY29kZUNvbXBvbmVudCh2YWx1ZSk7XG5cdH1cblxuXHRyZXR1cm4gdmFsdWU7XG59XG5cbmZ1bmN0aW9uIGtleXNTb3J0ZXIoaW5wdXQpIHtcblx0aWYgKEFycmF5LmlzQXJyYXkoaW5wdXQpKSB7XG5cdFx0cmV0dXJuIGlucHV0LnNvcnQoKTtcblx0fVxuXG5cdGlmICh0eXBlb2YgaW5wdXQgPT09ICdvYmplY3QnKSB7XG5cdFx0cmV0dXJuIGtleXNTb3J0ZXIoT2JqZWN0LmtleXMoaW5wdXQpKVxuXHRcdFx0LnNvcnQoKGEsIGIpID0+IE51bWJlcihhKSAtIE51bWJlcihiKSlcblx0XHRcdC5tYXAoa2V5ID0+IGlucHV0W2tleV0pO1xuXHR9XG5cblx0cmV0dXJuIGlucHV0O1xufVxuXG5mdW5jdGlvbiByZW1vdmVIYXNoKGlucHV0KSB7XG5cdGNvbnN0IGhhc2hTdGFydCA9IGlucHV0LmluZGV4T2YoJyMnKTtcblx0aWYgKGhhc2hTdGFydCAhPT0gLTEpIHtcblx0XHRpbnB1dCA9IGlucHV0LnNsaWNlKDAsIGhhc2hTdGFydCk7XG5cdH1cblxuXHRyZXR1cm4gaW5wdXQ7XG59XG5cbmZ1bmN0aW9uIGdldEhhc2godXJsKSB7XG5cdGxldCBoYXNoID0gJyc7XG5cdGNvbnN0IGhhc2hTdGFydCA9IHVybC5pbmRleE9mKCcjJyk7XG5cdGlmIChoYXNoU3RhcnQgIT09IC0xKSB7XG5cdFx0aGFzaCA9IHVybC5zbGljZShoYXNoU3RhcnQpO1xuXHR9XG5cblx0cmV0dXJuIGhhc2g7XG59XG5cbmZ1bmN0aW9uIGV4dHJhY3QoaW5wdXQpIHtcblx0aW5wdXQgPSByZW1vdmVIYXNoKGlucHV0KTtcblx0Y29uc3QgcXVlcnlTdGFydCA9IGlucHV0LmluZGV4T2YoJz8nKTtcblx0aWYgKHF1ZXJ5U3RhcnQgPT09IC0xKSB7XG5cdFx0cmV0dXJuICcnO1xuXHR9XG5cblx0cmV0dXJuIGlucHV0LnNsaWNlKHF1ZXJ5U3RhcnQgKyAxKTtcbn1cblxuZnVuY3Rpb24gcGFyc2VWYWx1ZSh2YWx1ZSwgb3B0aW9ucykge1xuXHRpZiAob3B0aW9ucy5wYXJzZU51bWJlcnMgJiYgIU51bWJlci5pc05hTihOdW1iZXIodmFsdWUpKSAmJiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiB2YWx1ZS50cmltKCkgIT09ICcnKSkge1xuXHRcdHZhbHVlID0gTnVtYmVyKHZhbHVlKTtcblx0fSBlbHNlIGlmIChvcHRpb25zLnBhcnNlQm9vbGVhbnMgJiYgdmFsdWUgIT09IG51bGwgJiYgKHZhbHVlLnRvTG93ZXJDYXNlKCkgPT09ICd0cnVlJyB8fCB2YWx1ZS50b0xvd2VyQ2FzZSgpID09PSAnZmFsc2UnKSkge1xuXHRcdHZhbHVlID0gdmFsdWUudG9Mb3dlckNhc2UoKSA9PT0gJ3RydWUnO1xuXHR9XG5cblx0cmV0dXJuIHZhbHVlO1xufVxuXG5mdW5jdGlvbiBwYXJzZShxdWVyeSwgb3B0aW9ucykge1xuXHRvcHRpb25zID0gT2JqZWN0LmFzc2lnbih7XG5cdFx0ZGVjb2RlOiB0cnVlLFxuXHRcdHNvcnQ6IHRydWUsXG5cdFx0YXJyYXlGb3JtYXQ6ICdub25lJyxcblx0XHRhcnJheUZvcm1hdFNlcGFyYXRvcjogJywnLFxuXHRcdHBhcnNlTnVtYmVyczogZmFsc2UsXG5cdFx0cGFyc2VCb29sZWFuczogZmFsc2Vcblx0fSwgb3B0aW9ucyk7XG5cblx0dmFsaWRhdGVBcnJheUZvcm1hdFNlcGFyYXRvcihvcHRpb25zLmFycmF5Rm9ybWF0U2VwYXJhdG9yKTtcblxuXHRjb25zdCBmb3JtYXR0ZXIgPSBwYXJzZXJGb3JBcnJheUZvcm1hdChvcHRpb25zKTtcblxuXHQvLyBDcmVhdGUgYW4gb2JqZWN0IHdpdGggbm8gcHJvdG90eXBlXG5cdGNvbnN0IHJldCA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG5cblx0aWYgKHR5cGVvZiBxdWVyeSAhPT0gJ3N0cmluZycpIHtcblx0XHRyZXR1cm4gcmV0O1xuXHR9XG5cblx0cXVlcnkgPSBxdWVyeS50cmltKCkucmVwbGFjZSgvXls/IyZdLywgJycpO1xuXG5cdGlmICghcXVlcnkpIHtcblx0XHRyZXR1cm4gcmV0O1xuXHR9XG5cblx0Zm9yIChjb25zdCBwYXJhbSBvZiBxdWVyeS5zcGxpdCgnJicpKSB7XG5cdFx0aWYgKHBhcmFtID09PSAnJykge1xuXHRcdFx0Y29udGludWU7XG5cdFx0fVxuXG5cdFx0bGV0IFtrZXksIHZhbHVlXSA9IHNwbGl0T25GaXJzdChvcHRpb25zLmRlY29kZSA/IHBhcmFtLnJlcGxhY2UoL1xcKy9nLCAnICcpIDogcGFyYW0sICc9Jyk7XG5cblx0XHQvLyBNaXNzaW5nIGA9YCBzaG91bGQgYmUgYG51bGxgOlxuXHRcdC8vIGh0dHA6Ly93My5vcmcvVFIvMjAxMi9XRC11cmwtMjAxMjA1MjQvI2NvbGxlY3QtdXJsLXBhcmFtZXRlcnNcblx0XHR2YWx1ZSA9IHZhbHVlID09PSB1bmRlZmluZWQgPyBudWxsIDogWydjb21tYScsICdzZXBhcmF0b3InLCAnYnJhY2tldC1zZXBhcmF0b3InXS5pbmNsdWRlcyhvcHRpb25zLmFycmF5Rm9ybWF0KSA/IHZhbHVlIDogZGVjb2RlKHZhbHVlLCBvcHRpb25zKTtcblx0XHRmb3JtYXR0ZXIoZGVjb2RlKGtleSwgb3B0aW9ucyksIHZhbHVlLCByZXQpO1xuXHR9XG5cblx0Zm9yIChjb25zdCBrZXkgb2YgT2JqZWN0LmtleXMocmV0KSkge1xuXHRcdGNvbnN0IHZhbHVlID0gcmV0W2tleV07XG5cdFx0aWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgIT09IG51bGwpIHtcblx0XHRcdGZvciAoY29uc3QgayBvZiBPYmplY3Qua2V5cyh2YWx1ZSkpIHtcblx0XHRcdFx0dmFsdWVba10gPSBwYXJzZVZhbHVlKHZhbHVlW2tdLCBvcHRpb25zKTtcblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0cmV0W2tleV0gPSBwYXJzZVZhbHVlKHZhbHVlLCBvcHRpb25zKTtcblx0XHR9XG5cdH1cblxuXHRpZiAob3B0aW9ucy5zb3J0ID09PSBmYWxzZSkge1xuXHRcdHJldHVybiByZXQ7XG5cdH1cblxuXHRyZXR1cm4gKG9wdGlvbnMuc29ydCA9PT0gdHJ1ZSA/IE9iamVjdC5rZXlzKHJldCkuc29ydCgpIDogT2JqZWN0LmtleXMocmV0KS5zb3J0KG9wdGlvbnMuc29ydCkpLnJlZHVjZSgocmVzdWx0LCBrZXkpID0+IHtcblx0XHRjb25zdCB2YWx1ZSA9IHJldFtrZXldO1xuXHRcdGlmIChCb29sZWFuKHZhbHVlKSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmICFBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuXHRcdFx0Ly8gU29ydCBvYmplY3Qga2V5cywgbm90IHZhbHVlc1xuXHRcdFx0cmVzdWx0W2tleV0gPSBrZXlzU29ydGVyKHZhbHVlKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0cmVzdWx0W2tleV0gPSB2YWx1ZTtcblx0XHR9XG5cblx0XHRyZXR1cm4gcmVzdWx0O1xuXHR9LCBPYmplY3QuY3JlYXRlKG51bGwpKTtcbn1cblxuZXhwb3J0cy5leHRyYWN0ID0gZXh0cmFjdDtcbmV4cG9ydHMucGFyc2UgPSBwYXJzZTtcblxuZXhwb3J0cy5zdHJpbmdpZnkgPSAob2JqZWN0LCBvcHRpb25zKSA9PiB7XG5cdGlmICghb2JqZWN0KSB7XG5cdFx0cmV0dXJuICcnO1xuXHR9XG5cblx0b3B0aW9ucyA9IE9iamVjdC5hc3NpZ24oe1xuXHRcdGVuY29kZTogdHJ1ZSxcblx0XHRzdHJpY3Q6IHRydWUsXG5cdFx0YXJyYXlGb3JtYXQ6ICdub25lJyxcblx0XHRhcnJheUZvcm1hdFNlcGFyYXRvcjogJywnXG5cdH0sIG9wdGlvbnMpO1xuXG5cdHZhbGlkYXRlQXJyYXlGb3JtYXRTZXBhcmF0b3Iob3B0aW9ucy5hcnJheUZvcm1hdFNlcGFyYXRvcik7XG5cblx0Y29uc3Qgc2hvdWxkRmlsdGVyID0ga2V5ID0+IChcblx0XHQob3B0aW9ucy5za2lwTnVsbCAmJiBpc051bGxPclVuZGVmaW5lZChvYmplY3Rba2V5XSkpIHx8XG5cdFx0KG9wdGlvbnMuc2tpcEVtcHR5U3RyaW5nICYmIG9iamVjdFtrZXldID09PSAnJylcblx0KTtcblxuXHRjb25zdCBmb3JtYXR0ZXIgPSBlbmNvZGVyRm9yQXJyYXlGb3JtYXQob3B0aW9ucyk7XG5cblx0Y29uc3Qgb2JqZWN0Q29weSA9IHt9O1xuXG5cdGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKG9iamVjdCkpIHtcblx0XHRpZiAoIXNob3VsZEZpbHRlcihrZXkpKSB7XG5cdFx0XHRvYmplY3RDb3B5W2tleV0gPSBvYmplY3Rba2V5XTtcblx0XHR9XG5cdH1cblxuXHRjb25zdCBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0Q29weSk7XG5cblx0aWYgKG9wdGlvbnMuc29ydCAhPT0gZmFsc2UpIHtcblx0XHRrZXlzLnNvcnQob3B0aW9ucy5zb3J0KTtcblx0fVxuXG5cdHJldHVybiBrZXlzLm1hcChrZXkgPT4ge1xuXHRcdGNvbnN0IHZhbHVlID0gb2JqZWN0W2tleV07XG5cblx0XHRpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuXHRcdFx0cmV0dXJuICcnO1xuXHRcdH1cblxuXHRcdGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuXHRcdFx0cmV0dXJuIGVuY29kZShrZXksIG9wdGlvbnMpO1xuXHRcdH1cblxuXHRcdGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuXHRcdFx0aWYgKHZhbHVlLmxlbmd0aCA9PT0gMCAmJiBvcHRpb25zLmFycmF5Rm9ybWF0ID09PSAnYnJhY2tldC1zZXBhcmF0b3InKSB7XG5cdFx0XHRcdHJldHVybiBlbmNvZGUoa2V5LCBvcHRpb25zKSArICdbXSc7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiB2YWx1ZVxuXHRcdFx0XHQucmVkdWNlKGZvcm1hdHRlcihrZXkpLCBbXSlcblx0XHRcdFx0LmpvaW4oJyYnKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gZW5jb2RlKGtleSwgb3B0aW9ucykgKyAnPScgKyBlbmNvZGUodmFsdWUsIG9wdGlvbnMpO1xuXHR9KS5maWx0ZXIoeCA9PiB4Lmxlbmd0aCA+IDApLmpvaW4oJyYnKTtcbn07XG5cbmV4cG9ydHMucGFyc2VVcmwgPSAodXJsLCBvcHRpb25zKSA9PiB7XG5cdG9wdGlvbnMgPSBPYmplY3QuYXNzaWduKHtcblx0XHRkZWNvZGU6IHRydWVcblx0fSwgb3B0aW9ucyk7XG5cblx0Y29uc3QgW3VybF8sIGhhc2hdID0gc3BsaXRPbkZpcnN0KHVybCwgJyMnKTtcblxuXHRyZXR1cm4gT2JqZWN0LmFzc2lnbihcblx0XHR7XG5cdFx0XHR1cmw6IHVybF8uc3BsaXQoJz8nKVswXSB8fCAnJyxcblx0XHRcdHF1ZXJ5OiBwYXJzZShleHRyYWN0KHVybCksIG9wdGlvbnMpXG5cdFx0fSxcblx0XHRvcHRpb25zICYmIG9wdGlvbnMucGFyc2VGcmFnbWVudElkZW50aWZpZXIgJiYgaGFzaCA/IHtmcmFnbWVudElkZW50aWZpZXI6IGRlY29kZShoYXNoLCBvcHRpb25zKX0gOiB7fVxuXHQpO1xufTtcblxuZXhwb3J0cy5zdHJpbmdpZnlVcmwgPSAob2JqZWN0LCBvcHRpb25zKSA9PiB7XG5cdG9wdGlvbnMgPSBPYmplY3QuYXNzaWduKHtcblx0XHRlbmNvZGU6IHRydWUsXG5cdFx0c3RyaWN0OiB0cnVlXG5cdH0sIG9wdGlvbnMpO1xuXG5cdGNvbnN0IHVybCA9IHJlbW92ZUhhc2gob2JqZWN0LnVybCkuc3BsaXQoJz8nKVswXSB8fCAnJztcblx0Y29uc3QgcXVlcnlGcm9tVXJsID0gZXhwb3J0cy5leHRyYWN0KG9iamVjdC51cmwpO1xuXHRjb25zdCBwYXJzZWRRdWVyeUZyb21VcmwgPSBleHBvcnRzLnBhcnNlKHF1ZXJ5RnJvbVVybCwge3NvcnQ6IGZhbHNlfSk7XG5cblx0Y29uc3QgcXVlcnkgPSBPYmplY3QuYXNzaWduKHBhcnNlZFF1ZXJ5RnJvbVVybCwgb2JqZWN0LnF1ZXJ5KTtcblx0bGV0IHF1ZXJ5U3RyaW5nID0gZXhwb3J0cy5zdHJpbmdpZnkocXVlcnksIG9wdGlvbnMpO1xuXHRpZiAocXVlcnlTdHJpbmcpIHtcblx0XHRxdWVyeVN0cmluZyA9IGA/JHtxdWVyeVN0cmluZ31gO1xuXHR9XG5cblx0bGV0IGhhc2ggPSBnZXRIYXNoKG9iamVjdC51cmwpO1xuXHRpZiAob2JqZWN0LmZyYWdtZW50SWRlbnRpZmllcikge1xuXHRcdGhhc2ggPSBgIyR7ZW5jb2RlKG9iamVjdC5mcmFnbWVudElkZW50aWZpZXIsIG9wdGlvbnMpfWA7XG5cdH1cblxuXHRyZXR1cm4gYCR7dXJsfSR7cXVlcnlTdHJpbmd9JHtoYXNofWA7XG59O1xuXG5leHBvcnRzLnBpY2sgPSAoaW5wdXQsIGZpbHRlciwgb3B0aW9ucykgPT4ge1xuXHRvcHRpb25zID0gT2JqZWN0LmFzc2lnbih7XG5cdFx0cGFyc2VGcmFnbWVudElkZW50aWZpZXI6IHRydWVcblx0fSwgb3B0aW9ucyk7XG5cblx0Y29uc3Qge3VybCwgcXVlcnksIGZyYWdtZW50SWRlbnRpZmllcn0gPSBleHBvcnRzLnBhcnNlVXJsKGlucHV0LCBvcHRpb25zKTtcblx0cmV0dXJuIGV4cG9ydHMuc3RyaW5naWZ5VXJsKHtcblx0XHR1cmwsXG5cdFx0cXVlcnk6IGZpbHRlck9iamVjdChxdWVyeSwgZmlsdGVyKSxcblx0XHRmcmFnbWVudElkZW50aWZpZXJcblx0fSwgb3B0aW9ucyk7XG59O1xuXG5leHBvcnRzLmV4Y2x1ZGUgPSAoaW5wdXQsIGZpbHRlciwgb3B0aW9ucykgPT4ge1xuXHRjb25zdCBleGNsdXNpb25GaWx0ZXIgPSBBcnJheS5pc0FycmF5KGZpbHRlcikgPyBrZXkgPT4gIWZpbHRlci5pbmNsdWRlcyhrZXkpIDogKGtleSwgdmFsdWUpID0+ICFmaWx0ZXIoa2V5LCB2YWx1ZSk7XG5cblx0cmV0dXJuIGV4cG9ydHMucGljayhpbnB1dCwgZXhjbHVzaW9uRmlsdGVyLCBvcHRpb25zKTtcbn07XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE3LjAuMlxuICogcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbi8qXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4qL1xuJ3VzZSBzdHJpY3QnO3ZhciBhYT1yZXF1aXJlKFwicmVhY3RcIiksbT1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxyPXJlcXVpcmUoXCJzY2hlZHVsZXJcIik7ZnVuY3Rpb24geShhKXtmb3IodmFyIGI9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MTtjPGFyZ3VtZW50cy5sZW5ndGg7YysrKWIrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2NdKTtyZXR1cm5cIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCBcIitiK1wiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIn1pZighYWEpdGhyb3cgRXJyb3IoeSgyMjcpKTt2YXIgYmE9bmV3IFNldCxjYT17fTtmdW5jdGlvbiBkYShhLGIpe2VhKGEsYik7ZWEoYStcIkNhcHR1cmVcIixiKX1cbmZ1bmN0aW9uIGVhKGEsYil7Y2FbYV09Yjtmb3IoYT0wO2E8Yi5sZW5ndGg7YSsrKWJhLmFkZChiW2FdKX1cbnZhciBmYT0hKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudHx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCksaGE9L15bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRdWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXFwtLjAtOVxcdTAwQjdcXHUwMzAwLVxcdTAzNkZcXHUyMDNGLVxcdTIwNDBdKiQvLGlhPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksXG5qYT17fSxrYT17fTtmdW5jdGlvbiBsYShhKXtpZihpYS5jYWxsKGthLGEpKXJldHVybiEwO2lmKGlhLmNhbGwoamEsYSkpcmV0dXJuITE7aWYoaGEudGVzdChhKSlyZXR1cm4ga2FbYV09ITA7amFbYV09ITA7cmV0dXJuITF9ZnVuY3Rpb24gbWEoYSxiLGMsZCl7aWYobnVsbCE9PWMmJjA9PT1jLnR5cGUpcmV0dXJuITE7c3dpdGNoKHR5cGVvZiBiKXtjYXNlIFwiZnVuY3Rpb25cIjpjYXNlIFwic3ltYm9sXCI6cmV0dXJuITA7Y2FzZSBcImJvb2xlYW5cIjppZihkKXJldHVybiExO2lmKG51bGwhPT1jKXJldHVybiFjLmFjY2VwdHNCb29sZWFuczthPWEudG9Mb3dlckNhc2UoKS5zbGljZSgwLDUpO3JldHVyblwiZGF0YS1cIiE9PWEmJlwiYXJpYS1cIiE9PWE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBuYShhLGIsYyxkKXtpZihudWxsPT09Ynx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBifHxtYShhLGIsYyxkKSlyZXR1cm4hMDtpZihkKXJldHVybiExO2lmKG51bGwhPT1jKXN3aXRjaChjLnR5cGUpe2Nhc2UgMzpyZXR1cm4hYjtjYXNlIDQ6cmV0dXJuITE9PT1iO2Nhc2UgNTpyZXR1cm4gaXNOYU4oYik7Y2FzZSA2OnJldHVybiBpc05hTihiKXx8MT5ifXJldHVybiExfWZ1bmN0aW9uIEIoYSxiLGMsZCxlLGYsZyl7dGhpcy5hY2NlcHRzQm9vbGVhbnM9Mj09PWJ8fDM9PT1ifHw0PT09Yjt0aGlzLmF0dHJpYnV0ZU5hbWU9ZDt0aGlzLmF0dHJpYnV0ZU5hbWVzcGFjZT1lO3RoaXMubXVzdFVzZVByb3BlcnR5PWM7dGhpcy5wcm9wZXJ0eU5hbWU9YTt0aGlzLnR5cGU9Yjt0aGlzLnNhbml0aXplVVJMPWY7dGhpcy5yZW1vdmVFbXB0eVN0cmluZz1nfXZhciBEPXt9O1xuXCJjaGlsZHJlbiBkYW5nZXJvdXNseVNldElubmVySFRNTCBkZWZhdWx0VmFsdWUgZGVmYXVsdENoZWNrZWQgaW5uZXJIVE1MIHN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZyBzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmcgc3R5bGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMCwhMSxhLG51bGwsITEsITEpfSk7W1tcImFjY2VwdENoYXJzZXRcIixcImFjY2VwdC1jaGFyc2V0XCJdLFtcImNsYXNzTmFtZVwiLFwiY2xhc3NcIl0sW1wiaHRtbEZvclwiLFwiZm9yXCJdLFtcImh0dHBFcXVpdlwiLFwiaHR0cC1lcXVpdlwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hWzBdO0RbYl09bmV3IEIoYiwxLCExLGFbMV0sbnVsbCwhMSwhMSl9KTtbXCJjb250ZW50RWRpdGFibGVcIixcImRyYWdnYWJsZVwiLFwic3BlbGxDaGVja1wiLFwidmFsdWVcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMiwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTtcbltcImF1dG9SZXZlcnNlXCIsXCJleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkXCIsXCJmb2N1c2FibGVcIixcInByZXNlcnZlQWxwaGFcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMiwhMSxhLG51bGwsITEsITEpfSk7XCJhbGxvd0Z1bGxTY3JlZW4gYXN5bmMgYXV0b0ZvY3VzIGF1dG9QbGF5IGNvbnRyb2xzIGRlZmF1bHQgZGVmZXIgZGlzYWJsZWQgZGlzYWJsZVBpY3R1cmVJblBpY3R1cmUgZGlzYWJsZVJlbW90ZVBsYXliYWNrIGZvcm1Ob1ZhbGlkYXRlIGhpZGRlbiBsb29wIG5vTW9kdWxlIG5vVmFsaWRhdGUgb3BlbiBwbGF5c0lubGluZSByZWFkT25seSByZXF1aXJlZCByZXZlcnNlZCBzY29wZWQgc2VhbWxlc3MgaXRlbVNjb3BlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDMsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEsITEpfSk7XG5bXCJjaGVja2VkXCIsXCJtdWx0aXBsZVwiLFwibXV0ZWRcIixcInNlbGVjdGVkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDMsITAsYSxudWxsLCExLCExKX0pO1tcImNhcHR1cmVcIixcImRvd25sb2FkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDQsITEsYSxudWxsLCExLCExKX0pO1tcImNvbHNcIixcInJvd3NcIixcInNpemVcIixcInNwYW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsNiwhMSxhLG51bGwsITEsITEpfSk7W1wicm93U3BhblwiLFwic3RhcnRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsNSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTt2YXIgb2E9L1tcXC06XShbYS16XSkvZztmdW5jdGlvbiBwYShhKXtyZXR1cm4gYVsxXS50b1VwcGVyQ2FzZSgpfVxuXCJhY2NlbnQtaGVpZ2h0IGFsaWdubWVudC1iYXNlbGluZSBhcmFiaWMtZm9ybSBiYXNlbGluZS1zaGlmdCBjYXAtaGVpZ2h0IGNsaXAtcGF0aCBjbGlwLXJ1bGUgY29sb3ItaW50ZXJwb2xhdGlvbiBjb2xvci1pbnRlcnBvbGF0aW9uLWZpbHRlcnMgY29sb3ItcHJvZmlsZSBjb2xvci1yZW5kZXJpbmcgZG9taW5hbnQtYmFzZWxpbmUgZW5hYmxlLWJhY2tncm91bmQgZmlsbC1vcGFjaXR5IGZpbGwtcnVsZSBmbG9vZC1jb2xvciBmbG9vZC1vcGFjaXR5IGZvbnQtZmFtaWx5IGZvbnQtc2l6ZSBmb250LXNpemUtYWRqdXN0IGZvbnQtc3RyZXRjaCBmb250LXN0eWxlIGZvbnQtdmFyaWFudCBmb250LXdlaWdodCBnbHlwaC1uYW1lIGdseXBoLW9yaWVudGF0aW9uLWhvcml6b250YWwgZ2x5cGgtb3JpZW50YXRpb24tdmVydGljYWwgaG9yaXotYWR2LXggaG9yaXotb3JpZ2luLXggaW1hZ2UtcmVuZGVyaW5nIGxldHRlci1zcGFjaW5nIGxpZ2h0aW5nLWNvbG9yIG1hcmtlci1lbmQgbWFya2VyLW1pZCBtYXJrZXItc3RhcnQgb3ZlcmxpbmUtcG9zaXRpb24gb3ZlcmxpbmUtdGhpY2tuZXNzIHBhaW50LW9yZGVyIHBhbm9zZS0xIHBvaW50ZXItZXZlbnRzIHJlbmRlcmluZy1pbnRlbnQgc2hhcGUtcmVuZGVyaW5nIHN0b3AtY29sb3Igc3RvcC1vcGFjaXR5IHN0cmlrZXRocm91Z2gtcG9zaXRpb24gc3RyaWtldGhyb3VnaC10aGlja25lc3Mgc3Ryb2tlLWRhc2hhcnJheSBzdHJva2UtZGFzaG9mZnNldCBzdHJva2UtbGluZWNhcCBzdHJva2UtbGluZWpvaW4gc3Ryb2tlLW1pdGVybGltaXQgc3Ryb2tlLW9wYWNpdHkgc3Ryb2tlLXdpZHRoIHRleHQtYW5jaG9yIHRleHQtZGVjb3JhdGlvbiB0ZXh0LXJlbmRlcmluZyB1bmRlcmxpbmUtcG9zaXRpb24gdW5kZXJsaW5lLXRoaWNrbmVzcyB1bmljb2RlLWJpZGkgdW5pY29kZS1yYW5nZSB1bml0cy1wZXItZW0gdi1hbHBoYWJldGljIHYtaGFuZ2luZyB2LWlkZW9ncmFwaGljIHYtbWF0aGVtYXRpY2FsIHZlY3Rvci1lZmZlY3QgdmVydC1hZHYteSB2ZXJ0LW9yaWdpbi14IHZlcnQtb3JpZ2luLXkgd29yZC1zcGFjaW5nIHdyaXRpbmctbW9kZSB4bWxuczp4bGluayB4LWhlaWdodFwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShvYSxcbnBhKTtEW2JdPW5ldyBCKGIsMSwhMSxhLG51bGwsITEsITEpfSk7XCJ4bGluazphY3R1YXRlIHhsaW5rOmFyY3JvbGUgeGxpbms6cm9sZSB4bGluazpzaG93IHhsaW5rOnRpdGxlIHhsaW5rOnR5cGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2Uob2EscGEpO0RbYl09bmV3IEIoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsITEsITEpfSk7W1wieG1sOmJhc2VcIixcInhtbDpsYW5nXCIsXCJ4bWw6c3BhY2VcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2Uob2EscGEpO0RbYl09bmV3IEIoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2VcIiwhMSwhMSl9KTtbXCJ0YWJJbmRleFwiLFwiY3Jvc3NPcmlnaW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTtcbkQueGxpbmtIcmVmPW5ldyBCKFwieGxpbmtIcmVmXCIsMSwhMSxcInhsaW5rOmhyZWZcIixcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwhMCwhMSk7W1wic3JjXCIsXCJocmVmXCIsXCJhY3Rpb25cIixcImZvcm1BY3Rpb25cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMCwhMCl9KTtcbmZ1bmN0aW9uIHFhKGEsYixjLGQpe3ZhciBlPUQuaGFzT3duUHJvcGVydHkoYik/RFtiXTpudWxsO3ZhciBmPW51bGwhPT1lPzA9PT1lLnR5cGU6ZD8hMTohKDI8Yi5sZW5ndGgpfHxcIm9cIiE9PWJbMF0mJlwiT1wiIT09YlswXXx8XCJuXCIhPT1iWzFdJiZcIk5cIiE9PWJbMV0/ITE6ITA7Znx8KG5hKGIsYyxlLGQpJiYoYz1udWxsKSxkfHxudWxsPT09ZT9sYShiKSYmKG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOmEuc2V0QXR0cmlidXRlKGIsXCJcIitjKSk6ZS5tdXN0VXNlUHJvcGVydHk/YVtlLnByb3BlcnR5TmFtZV09bnVsbD09PWM/Mz09PWUudHlwZT8hMTpcIlwiOmM6KGI9ZS5hdHRyaWJ1dGVOYW1lLGQ9ZS5hdHRyaWJ1dGVOYW1lc3BhY2UsbnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6KGU9ZS50eXBlLGM9Mz09PWV8fDQ9PT1lJiYhMD09PWM/XCJcIjpcIlwiK2MsZD9hLnNldEF0dHJpYnV0ZU5TKGQsYixjKTphLnNldEF0dHJpYnV0ZShiLGMpKSkpfVxudmFyIHJhPWFhLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVELHNhPTYwMTAzLHRhPTYwMTA2LHVhPTYwMTA3LHdhPTYwMTA4LHhhPTYwMTE0LHlhPTYwMTA5LHphPTYwMTEwLEFhPTYwMTEyLEJhPTYwMTEzLENhPTYwMTIwLERhPTYwMTE1LEVhPTYwMTE2LEZhPTYwMTIxLEdhPTYwMTI4LEhhPTYwMTI5LElhPTYwMTMwLEphPTYwMTMxO1xuaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcil7dmFyIEU9U3ltYm9sLmZvcjtzYT1FKFwicmVhY3QuZWxlbWVudFwiKTt0YT1FKFwicmVhY3QucG9ydGFsXCIpO3VhPUUoXCJyZWFjdC5mcmFnbWVudFwiKTt3YT1FKFwicmVhY3Quc3RyaWN0X21vZGVcIik7eGE9RShcInJlYWN0LnByb2ZpbGVyXCIpO3lhPUUoXCJyZWFjdC5wcm92aWRlclwiKTt6YT1FKFwicmVhY3QuY29udGV4dFwiKTtBYT1FKFwicmVhY3QuZm9yd2FyZF9yZWZcIik7QmE9RShcInJlYWN0LnN1c3BlbnNlXCIpO0NhPUUoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpO0RhPUUoXCJyZWFjdC5tZW1vXCIpO0VhPUUoXCJyZWFjdC5sYXp5XCIpO0ZhPUUoXCJyZWFjdC5ibG9ja1wiKTtFKFwicmVhY3Quc2NvcGVcIik7R2E9RShcInJlYWN0Lm9wYXF1ZS5pZFwiKTtIYT1FKFwicmVhY3QuZGVidWdfdHJhY2VfbW9kZVwiKTtJYT1FKFwicmVhY3Qub2Zmc2NyZWVuXCIpO0phPUUoXCJyZWFjdC5sZWdhY3lfaGlkZGVuXCIpfVxudmFyIEthPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBMYShhKXtpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhKXJldHVybiBudWxsO2E9S2EmJmFbS2FdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9dmFyIE1hO2Z1bmN0aW9uIE5hKGEpe2lmKHZvaWQgMD09PU1hKXRyeXt0aHJvdyBFcnJvcigpO31jYXRjaChjKXt2YXIgYj1jLnN0YWNrLnRyaW0oKS5tYXRjaCgvXFxuKCAqKGF0ICk/KS8pO01hPWImJmJbMV18fFwiXCJ9cmV0dXJuXCJcXG5cIitNYSthfXZhciBPYT0hMTtcbmZ1bmN0aW9uIFBhKGEsYil7aWYoIWF8fE9hKXJldHVyblwiXCI7T2E9ITA7dmFyIGM9RXJyb3IucHJlcGFyZVN0YWNrVHJhY2U7RXJyb3IucHJlcGFyZVN0YWNrVHJhY2U9dm9pZCAwO3RyeXtpZihiKWlmKGI9ZnVuY3Rpb24oKXt0aHJvdyBFcnJvcigpO30sT2JqZWN0LmRlZmluZVByb3BlcnR5KGIucHJvdG90eXBlLFwicHJvcHNcIix7c2V0OmZ1bmN0aW9uKCl7dGhyb3cgRXJyb3IoKTt9fSksXCJvYmplY3RcIj09PXR5cGVvZiBSZWZsZWN0JiZSZWZsZWN0LmNvbnN0cnVjdCl7dHJ5e1JlZmxlY3QuY29uc3RydWN0KGIsW10pfWNhdGNoKGspe3ZhciBkPWt9UmVmbGVjdC5jb25zdHJ1Y3QoYSxbXSxiKX1lbHNle3RyeXtiLmNhbGwoKX1jYXRjaChrKXtkPWt9YS5jYWxsKGIucHJvdG90eXBlKX1lbHNle3RyeXt0aHJvdyBFcnJvcigpO31jYXRjaChrKXtkPWt9YSgpfX1jYXRjaChrKXtpZihrJiZkJiZcInN0cmluZ1wiPT09dHlwZW9mIGsuc3RhY2spe2Zvcih2YXIgZT1rLnN0YWNrLnNwbGl0KFwiXFxuXCIpLFxuZj1kLnN0YWNrLnNwbGl0KFwiXFxuXCIpLGc9ZS5sZW5ndGgtMSxoPWYubGVuZ3RoLTE7MTw9ZyYmMDw9aCYmZVtnXSE9PWZbaF07KWgtLTtmb3IoOzE8PWcmJjA8PWg7Zy0tLGgtLSlpZihlW2ddIT09ZltoXSl7aWYoMSE9PWd8fDEhPT1oKXtkbyBpZihnLS0saC0tLDA+aHx8ZVtnXSE9PWZbaF0pcmV0dXJuXCJcXG5cIitlW2ddLnJlcGxhY2UoXCIgYXQgbmV3IFwiLFwiIGF0IFwiKTt3aGlsZSgxPD1nJiYwPD1oKX1icmVha319fWZpbmFsbHl7T2E9ITEsRXJyb3IucHJlcGFyZVN0YWNrVHJhY2U9Y31yZXR1cm4oYT1hP2EuZGlzcGxheU5hbWV8fGEubmFtZTpcIlwiKT9OYShhKTpcIlwifVxuZnVuY3Rpb24gUWEoYSl7c3dpdGNoKGEudGFnKXtjYXNlIDU6cmV0dXJuIE5hKGEudHlwZSk7Y2FzZSAxNjpyZXR1cm4gTmEoXCJMYXp5XCIpO2Nhc2UgMTM6cmV0dXJuIE5hKFwiU3VzcGVuc2VcIik7Y2FzZSAxOTpyZXR1cm4gTmEoXCJTdXNwZW5zZUxpc3RcIik7Y2FzZSAwOmNhc2UgMjpjYXNlIDE1OnJldHVybiBhPVBhKGEudHlwZSwhMSksYTtjYXNlIDExOnJldHVybiBhPVBhKGEudHlwZS5yZW5kZXIsITEpLGE7Y2FzZSAyMjpyZXR1cm4gYT1QYShhLnR5cGUuX3JlbmRlciwhMSksYTtjYXNlIDE6cmV0dXJuIGE9UGEoYS50eXBlLCEwKSxhO2RlZmF1bHQ6cmV0dXJuXCJcIn19XG5mdW5jdGlvbiBSYShhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBhLmRpc3BsYXlOYW1lfHxhLm5hbWV8fG51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKXJldHVybiBhO3N3aXRjaChhKXtjYXNlIHVhOnJldHVyblwiRnJhZ21lbnRcIjtjYXNlIHRhOnJldHVyblwiUG9ydGFsXCI7Y2FzZSB4YTpyZXR1cm5cIlByb2ZpbGVyXCI7Y2FzZSB3YTpyZXR1cm5cIlN0cmljdE1vZGVcIjtjYXNlIEJhOnJldHVyblwiU3VzcGVuc2VcIjtjYXNlIENhOnJldHVyblwiU3VzcGVuc2VMaXN0XCJ9aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHphOnJldHVybihhLmRpc3BsYXlOYW1lfHxcIkNvbnRleHRcIikrXCIuQ29uc3VtZXJcIjtjYXNlIHlhOnJldHVybihhLl9jb250ZXh0LmRpc3BsYXlOYW1lfHxcIkNvbnRleHRcIikrXCIuUHJvdmlkZXJcIjtjYXNlIEFhOnZhciBiPWEucmVuZGVyO2I9Yi5kaXNwbGF5TmFtZXx8Yi5uYW1lfHxcIlwiO1xucmV0dXJuIGEuZGlzcGxheU5hbWV8fChcIlwiIT09Yj9cIkZvcndhcmRSZWYoXCIrYitcIilcIjpcIkZvcndhcmRSZWZcIik7Y2FzZSBEYTpyZXR1cm4gUmEoYS50eXBlKTtjYXNlIEZhOnJldHVybiBSYShhLl9yZW5kZXIpO2Nhc2UgRWE6Yj1hLl9wYXlsb2FkO2E9YS5faW5pdDt0cnl7cmV0dXJuIFJhKGEoYikpfWNhdGNoKGMpe319cmV0dXJuIG51bGx9ZnVuY3Rpb24gU2EoYSl7c3dpdGNoKHR5cGVvZiBhKXtjYXNlIFwiYm9vbGVhblwiOmNhc2UgXCJudW1iZXJcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJ1bmRlZmluZWRcIjpyZXR1cm4gYTtkZWZhdWx0OnJldHVyblwiXCJ9fWZ1bmN0aW9uIFRhKGEpe3ZhciBiPWEudHlwZTtyZXR1cm4oYT1hLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09YS50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09Ynx8XCJyYWRpb1wiPT09Yil9XG5mdW5jdGlvbiBVYShhKXt2YXIgYj1UYShhKT9cImNoZWNrZWRcIjpcInZhbHVlXCIsYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGEuY29uc3RydWN0b3IucHJvdG90eXBlLGIpLGQ9XCJcIithW2JdO2lmKCFhLmhhc093blByb3BlcnR5KGIpJiZcInVuZGVmaW5lZFwiIT09dHlwZW9mIGMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmdldCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuc2V0KXt2YXIgZT1jLmdldCxmPWMuc2V0O09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2NvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZS5jYWxsKHRoaXMpfSxzZXQ6ZnVuY3Rpb24oYSl7ZD1cIlwiK2E7Zi5jYWxsKHRoaXMsYSl9fSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7ZW51bWVyYWJsZTpjLmVudW1lcmFibGV9KTtyZXR1cm57Z2V0VmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gZH0sc2V0VmFsdWU6ZnVuY3Rpb24oYSl7ZD1cIlwiK2F9LHN0b3BUcmFja2luZzpmdW5jdGlvbigpe2EuX3ZhbHVlVHJhY2tlcj1cbm51bGw7ZGVsZXRlIGFbYl19fX19ZnVuY3Rpb24gVmEoYSl7YS5fdmFsdWVUcmFja2VyfHwoYS5fdmFsdWVUcmFja2VyPVVhKGEpKX1mdW5jdGlvbiBXYShhKXtpZighYSlyZXR1cm4hMTt2YXIgYj1hLl92YWx1ZVRyYWNrZXI7aWYoIWIpcmV0dXJuITA7dmFyIGM9Yi5nZXRWYWx1ZSgpO3ZhciBkPVwiXCI7YSYmKGQ9VGEoYSk/YS5jaGVja2VkP1widHJ1ZVwiOlwiZmFsc2VcIjphLnZhbHVlKTthPWQ7cmV0dXJuIGEhPT1jPyhiLnNldFZhbHVlKGEpLCEwKTohMX1mdW5jdGlvbiBYYShhKXthPWF8fChcInVuZGVmaW5lZFwiIT09dHlwZW9mIGRvY3VtZW50P2RvY3VtZW50OnZvaWQgMCk7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBhKXJldHVybiBudWxsO3RyeXtyZXR1cm4gYS5hY3RpdmVFbGVtZW50fHxhLmJvZHl9Y2F0Y2goYil7cmV0dXJuIGEuYm9keX19XG5mdW5jdGlvbiBZYShhLGIpe3ZhciBjPWIuY2hlY2tlZDtyZXR1cm4gbSh7fSxiLHtkZWZhdWx0Q2hlY2tlZDp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCx2YWx1ZTp2b2lkIDAsY2hlY2tlZDpudWxsIT1jP2M6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkfSl9ZnVuY3Rpb24gWmEoYSxiKXt2YXIgYz1udWxsPT1iLmRlZmF1bHRWYWx1ZT9cIlwiOmIuZGVmYXVsdFZhbHVlLGQ9bnVsbCE9Yi5jaGVja2VkP2IuY2hlY2tlZDpiLmRlZmF1bHRDaGVja2VkO2M9U2EobnVsbCE9Yi52YWx1ZT9iLnZhbHVlOmMpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbENoZWNrZWQ6ZCxpbml0aWFsVmFsdWU6Yyxjb250cm9sbGVkOlwiY2hlY2tib3hcIj09PWIudHlwZXx8XCJyYWRpb1wiPT09Yi50eXBlP251bGwhPWIuY2hlY2tlZDpudWxsIT1iLnZhbHVlfX1mdW5jdGlvbiAkYShhLGIpe2I9Yi5jaGVja2VkO251bGwhPWImJnFhKGEsXCJjaGVja2VkXCIsYiwhMSl9XG5mdW5jdGlvbiBhYihhLGIpeyRhKGEsYik7dmFyIGM9U2EoYi52YWx1ZSksZD1iLnR5cGU7aWYobnVsbCE9YylpZihcIm51bWJlclwiPT09ZCl7aWYoMD09PWMmJlwiXCI9PT1hLnZhbHVlfHxhLnZhbHVlIT1jKWEudmFsdWU9XCJcIitjfWVsc2UgYS52YWx1ZSE9PVwiXCIrYyYmKGEudmFsdWU9XCJcIitjKTtlbHNlIGlmKFwic3VibWl0XCI9PT1kfHxcInJlc2V0XCI9PT1kKXthLnJlbW92ZUF0dHJpYnV0ZShcInZhbHVlXCIpO3JldHVybn1iLmhhc093blByb3BlcnR5KFwidmFsdWVcIik/YmIoYSxiLnR5cGUsYyk6Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSYmYmIoYSxiLnR5cGUsU2EoYi5kZWZhdWx0VmFsdWUpKTtudWxsPT1iLmNoZWNrZWQmJm51bGwhPWIuZGVmYXVsdENoZWNrZWQmJihhLmRlZmF1bHRDaGVja2VkPSEhYi5kZWZhdWx0Q2hlY2tlZCl9XG5mdW5jdGlvbiBjYihhLGIsYyl7aWYoYi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpfHxiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpKXt2YXIgZD1iLnR5cGU7aWYoIShcInN1Ym1pdFwiIT09ZCYmXCJyZXNldFwiIT09ZHx8dm9pZCAwIT09Yi52YWx1ZSYmbnVsbCE9PWIudmFsdWUpKXJldHVybjtiPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTtjfHxiPT09YS52YWx1ZXx8KGEudmFsdWU9Yik7YS5kZWZhdWx0VmFsdWU9Yn1jPWEubmFtZTtcIlwiIT09YyYmKGEubmFtZT1cIlwiKTthLmRlZmF1bHRDaGVja2VkPSEhYS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkO1wiXCIhPT1jJiYoYS5uYW1lPWMpfVxuZnVuY3Rpb24gYmIoYSxiLGMpe2lmKFwibnVtYmVyXCIhPT1ifHxYYShhLm93bmVyRG9jdW1lbnQpIT09YSludWxsPT1jP2EuZGVmYXVsdFZhbHVlPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTphLmRlZmF1bHRWYWx1ZSE9PVwiXCIrYyYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrYyl9ZnVuY3Rpb24gZGIoYSl7dmFyIGI9XCJcIjthYS5DaGlsZHJlbi5mb3JFYWNoKGEsZnVuY3Rpb24oYSl7bnVsbCE9YSYmKGIrPWEpfSk7cmV0dXJuIGJ9ZnVuY3Rpb24gZWIoYSxiKXthPW0oe2NoaWxkcmVuOnZvaWQgMH0sYik7aWYoYj1kYihiLmNoaWxkcmVuKSlhLmNoaWxkcmVuPWI7cmV0dXJuIGF9XG5mdW5jdGlvbiBmYihhLGIsYyxkKXthPWEub3B0aW9ucztpZihiKXtiPXt9O2Zvcih2YXIgZT0wO2U8Yy5sZW5ndGg7ZSsrKWJbXCIkXCIrY1tlXV09ITA7Zm9yKGM9MDtjPGEubGVuZ3RoO2MrKyllPWIuaGFzT3duUHJvcGVydHkoXCIkXCIrYVtjXS52YWx1ZSksYVtjXS5zZWxlY3RlZCE9PWUmJihhW2NdLnNlbGVjdGVkPWUpLGUmJmQmJihhW2NdLmRlZmF1bHRTZWxlY3RlZD0hMCl9ZWxzZXtjPVwiXCIrU2EoYyk7Yj1udWxsO2ZvcihlPTA7ZTxhLmxlbmd0aDtlKyspe2lmKGFbZV0udmFsdWU9PT1jKXthW2VdLnNlbGVjdGVkPSEwO2QmJihhW2VdLmRlZmF1bHRTZWxlY3RlZD0hMCk7cmV0dXJufW51bGwhPT1ifHxhW2VdLmRpc2FibGVkfHwoYj1hW2VdKX1udWxsIT09YiYmKGIuc2VsZWN0ZWQ9ITApfX1cbmZ1bmN0aW9uIGdiKGEsYil7aWYobnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCl0aHJvdyBFcnJvcih5KDkxKSk7cmV0dXJuIG0oe30sYix7dmFsdWU6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsY2hpbGRyZW46XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlfSl9ZnVuY3Rpb24gaGIoYSxiKXt2YXIgYz1iLnZhbHVlO2lmKG51bGw9PWMpe2M9Yi5jaGlsZHJlbjtiPWIuZGVmYXVsdFZhbHVlO2lmKG51bGwhPWMpe2lmKG51bGwhPWIpdGhyb3cgRXJyb3IoeSg5MikpO2lmKEFycmF5LmlzQXJyYXkoYykpe2lmKCEoMT49Yy5sZW5ndGgpKXRocm93IEVycm9yKHkoOTMpKTtjPWNbMF19Yj1jfW51bGw9PWImJihiPVwiXCIpO2M9Yn1hLl93cmFwcGVyU3RhdGU9e2luaXRpYWxWYWx1ZTpTYShjKX19XG5mdW5jdGlvbiBpYihhLGIpe3ZhciBjPVNhKGIudmFsdWUpLGQ9U2EoYi5kZWZhdWx0VmFsdWUpO251bGwhPWMmJihjPVwiXCIrYyxjIT09YS52YWx1ZSYmKGEudmFsdWU9YyksbnVsbD09Yi5kZWZhdWx0VmFsdWUmJmEuZGVmYXVsdFZhbHVlIT09YyYmKGEuZGVmYXVsdFZhbHVlPWMpKTtudWxsIT1kJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitkKX1mdW5jdGlvbiBqYihhKXt2YXIgYj1hLnRleHRDb250ZW50O2I9PT1hLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlJiZcIlwiIT09YiYmbnVsbCE9PWImJihhLnZhbHVlPWIpfXZhciBrYj17aHRtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIixtYXRobWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCIsc3ZnOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIn07XG5mdW5jdGlvbiBsYihhKXtzd2l0Y2goYSl7Y2FzZSBcInN2Z1wiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtjYXNlIFwibWF0aFwiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiO2RlZmF1bHQ6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCJ9fWZ1bmN0aW9uIG1iKGEsYil7cmV0dXJuIG51bGw9PWF8fFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YT9sYihiKTpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI9PT1hJiZcImZvcmVpZ25PYmplY3RcIj09PWI/XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI6YX1cbnZhciBuYixvYj1mdW5jdGlvbihhKXtyZXR1cm5cInVuZGVmaW5lZFwiIT09dHlwZW9mIE1TQXBwJiZNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbj9mdW5jdGlvbihiLGMsZCxlKXtNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbihmdW5jdGlvbigpe3JldHVybiBhKGIsYyxkLGUpfSl9OmF9KGZ1bmN0aW9uKGEsYil7aWYoYS5uYW1lc3BhY2VVUkkhPT1rYi5zdmd8fFwiaW5uZXJIVE1MXCJpbiBhKWEuaW5uZXJIVE1MPWI7ZWxzZXtuYj1uYnx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtuYi5pbm5lckhUTUw9XCI8c3ZnPlwiK2IudmFsdWVPZigpLnRvU3RyaW5nKCkrXCI8L3N2Zz5cIjtmb3IoYj1uYi5maXJzdENoaWxkO2EuZmlyc3RDaGlsZDspYS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpO2Zvcig7Yi5maXJzdENoaWxkOylhLmFwcGVuZENoaWxkKGIuZmlyc3RDaGlsZCl9fSk7XG5mdW5jdGlvbiBwYihhLGIpe2lmKGIpe3ZhciBjPWEuZmlyc3RDaGlsZDtpZihjJiZjPT09YS5sYXN0Q2hpbGQmJjM9PT1jLm5vZGVUeXBlKXtjLm5vZGVWYWx1ZT1iO3JldHVybn19YS50ZXh0Q29udGVudD1ifVxudmFyIHFiPXthbmltYXRpb25JdGVyYXRpb25Db3VudDohMCxib3JkZXJJbWFnZU91dHNldDohMCxib3JkZXJJbWFnZVNsaWNlOiEwLGJvcmRlckltYWdlV2lkdGg6ITAsYm94RmxleDohMCxib3hGbGV4R3JvdXA6ITAsYm94T3JkaW5hbEdyb3VwOiEwLGNvbHVtbkNvdW50OiEwLGNvbHVtbnM6ITAsZmxleDohMCxmbGV4R3JvdzohMCxmbGV4UG9zaXRpdmU6ITAsZmxleFNocmluazohMCxmbGV4TmVnYXRpdmU6ITAsZmxleE9yZGVyOiEwLGdyaWRBcmVhOiEwLGdyaWRSb3c6ITAsZ3JpZFJvd0VuZDohMCxncmlkUm93U3BhbjohMCxncmlkUm93U3RhcnQ6ITAsZ3JpZENvbHVtbjohMCxncmlkQ29sdW1uRW5kOiEwLGdyaWRDb2x1bW5TcGFuOiEwLGdyaWRDb2x1bW5TdGFydDohMCxmb250V2VpZ2h0OiEwLGxpbmVDbGFtcDohMCxsaW5lSGVpZ2h0OiEwLG9wYWNpdHk6ITAsb3JkZXI6ITAsb3JwaGFuczohMCx0YWJTaXplOiEwLHdpZG93czohMCx6SW5kZXg6ITAsem9vbTohMCxmaWxsT3BhY2l0eTohMCxcbmZsb29kT3BhY2l0eTohMCxzdG9wT3BhY2l0eTohMCxzdHJva2VEYXNoYXJyYXk6ITAsc3Ryb2tlRGFzaG9mZnNldDohMCxzdHJva2VNaXRlcmxpbWl0OiEwLHN0cm9rZU9wYWNpdHk6ITAsc3Ryb2tlV2lkdGg6ITB9LHJiPVtcIldlYmtpdFwiLFwibXNcIixcIk1velwiLFwiT1wiXTtPYmplY3Qua2V5cyhxYikuZm9yRWFjaChmdW5jdGlvbihhKXtyYi5mb3JFYWNoKGZ1bmN0aW9uKGIpe2I9YithLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Euc3Vic3RyaW5nKDEpO3FiW2JdPXFiW2FdfSl9KTtmdW5jdGlvbiBzYihhLGIsYyl7cmV0dXJuIG51bGw9PWJ8fFwiYm9vbGVhblwiPT09dHlwZW9mIGJ8fFwiXCI9PT1iP1wiXCI6Y3x8XCJudW1iZXJcIiE9PXR5cGVvZiBifHwwPT09Ynx8cWIuaGFzT3duUHJvcGVydHkoYSkmJnFiW2FdPyhcIlwiK2IpLnRyaW0oKTpiK1wicHhcIn1cbmZ1bmN0aW9uIHRiKGEsYil7YT1hLnN0eWxlO2Zvcih2YXIgYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPTA9PT1jLmluZGV4T2YoXCItLVwiKSxlPXNiKGMsYltjXSxkKTtcImZsb2F0XCI9PT1jJiYoYz1cImNzc0Zsb2F0XCIpO2Q/YS5zZXRQcm9wZXJ0eShjLGUpOmFbY109ZX19dmFyIHViPW0oe21lbnVpdGVtOiEwfSx7YXJlYTohMCxiYXNlOiEwLGJyOiEwLGNvbDohMCxlbWJlZDohMCxocjohMCxpbWc6ITAsaW5wdXQ6ITAsa2V5Z2VuOiEwLGxpbms6ITAsbWV0YTohMCxwYXJhbTohMCxzb3VyY2U6ITAsdHJhY2s6ITAsd2JyOiEwfSk7XG5mdW5jdGlvbiB2YihhLGIpe2lmKGIpe2lmKHViW2FdJiYobnVsbCE9Yi5jaGlsZHJlbnx8bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCkpdGhyb3cgRXJyb3IoeSgxMzcsYSkpO2lmKG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpe2lmKG51bGwhPWIuY2hpbGRyZW4pdGhyb3cgRXJyb3IoeSg2MCkpO2lmKCEoXCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZcIl9faHRtbFwiaW4gYi5kYW5nZXJvdXNseVNldElubmVySFRNTCkpdGhyb3cgRXJyb3IoeSg2MSkpO31pZihudWxsIT1iLnN0eWxlJiZcIm9iamVjdFwiIT09dHlwZW9mIGIuc3R5bGUpdGhyb3cgRXJyb3IoeSg2MikpO319XG5mdW5jdGlvbiB3YihhLGIpe2lmKC0xPT09YS5pbmRleE9mKFwiLVwiKSlyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGIuaXM7c3dpdGNoKGEpe2Nhc2UgXCJhbm5vdGF0aW9uLXhtbFwiOmNhc2UgXCJjb2xvci1wcm9maWxlXCI6Y2FzZSBcImZvbnQtZmFjZVwiOmNhc2UgXCJmb250LWZhY2Utc3JjXCI6Y2FzZSBcImZvbnQtZmFjZS11cmlcIjpjYXNlIFwiZm9udC1mYWNlLWZvcm1hdFwiOmNhc2UgXCJmb250LWZhY2UtbmFtZVwiOmNhc2UgXCJtaXNzaW5nLWdseXBoXCI6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMH19ZnVuY3Rpb24geGIoYSl7YT1hLnRhcmdldHx8YS5zcmNFbGVtZW50fHx3aW5kb3c7YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCYmKGE9YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCk7cmV0dXJuIDM9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphfXZhciB5Yj1udWxsLHpiPW51bGwsQWI9bnVsbDtcbmZ1bmN0aW9uIEJiKGEpe2lmKGE9Q2IoYSkpe2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiB5Yil0aHJvdyBFcnJvcih5KDI4MCkpO3ZhciBiPWEuc3RhdGVOb2RlO2ImJihiPURiKGIpLHliKGEuc3RhdGVOb2RlLGEudHlwZSxiKSl9fWZ1bmN0aW9uIEViKGEpe3piP0FiP0FiLnB1c2goYSk6QWI9W2FdOnpiPWF9ZnVuY3Rpb24gRmIoKXtpZih6Yil7dmFyIGE9emIsYj1BYjtBYj16Yj1udWxsO0JiKGEpO2lmKGIpZm9yKGE9MDthPGIubGVuZ3RoO2ErKylCYihiW2FdKX19ZnVuY3Rpb24gR2IoYSxiKXtyZXR1cm4gYShiKX1mdW5jdGlvbiBIYihhLGIsYyxkLGUpe3JldHVybiBhKGIsYyxkLGUpfWZ1bmN0aW9uIEliKCl7fXZhciBKYj1HYixLYj0hMSxMYj0hMTtmdW5jdGlvbiBNYigpe2lmKG51bGwhPT16Ynx8bnVsbCE9PUFiKUliKCksRmIoKX1cbmZ1bmN0aW9uIE5iKGEsYixjKXtpZihMYilyZXR1cm4gYShiLGMpO0xiPSEwO3RyeXtyZXR1cm4gSmIoYSxiLGMpfWZpbmFsbHl7TGI9ITEsTWIoKX19XG5mdW5jdGlvbiBPYihhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2lmKG51bGw9PT1jKXJldHVybiBudWxsO3ZhciBkPURiKGMpO2lmKG51bGw9PT1kKXJldHVybiBudWxsO2M9ZFtiXTthOnN3aXRjaChiKXtjYXNlIFwib25DbGlja1wiOmNhc2UgXCJvbkNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbkRvdWJsZUNsaWNrXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VEb3duXCI6Y2FzZSBcIm9uTW91c2VEb3duQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlTW92ZVwiOmNhc2UgXCJvbk1vdXNlTW92ZUNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZVVwXCI6Y2FzZSBcIm9uTW91c2VVcENhcHR1cmVcIjpjYXNlIFwib25Nb3VzZUVudGVyXCI6KGQ9IWQuZGlzYWJsZWQpfHwoYT1hLnR5cGUsZD0hKFwiYnV0dG9uXCI9PT1hfHxcImlucHV0XCI9PT1hfHxcInNlbGVjdFwiPT09YXx8XCJ0ZXh0YXJlYVwiPT09YSkpO2E9IWQ7YnJlYWsgYTtkZWZhdWx0OmE9ITF9aWYoYSlyZXR1cm4gbnVsbDtpZihjJiZcImZ1bmN0aW9uXCIhPT1cbnR5cGVvZiBjKXRocm93IEVycm9yKHkoMjMxLGIsdHlwZW9mIGMpKTtyZXR1cm4gY312YXIgUGI9ITE7aWYoZmEpdHJ5e3ZhciBRYj17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkoUWIsXCJwYXNzaXZlXCIse2dldDpmdW5jdGlvbigpe1BiPSEwfX0pO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwidGVzdFwiLFFiLFFiKTt3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRlc3RcIixRYixRYil9Y2F0Y2goYSl7UGI9ITF9ZnVuY3Rpb24gUmIoYSxiLGMsZCxlLGYsZyxoLGspe3ZhciBsPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywzKTt0cnl7Yi5hcHBseShjLGwpfWNhdGNoKG4pe3RoaXMub25FcnJvcihuKX19dmFyIFNiPSExLFRiPW51bGwsVWI9ITEsVmI9bnVsbCxXYj17b25FcnJvcjpmdW5jdGlvbihhKXtTYj0hMDtUYj1hfX07ZnVuY3Rpb24gWGIoYSxiLGMsZCxlLGYsZyxoLGspe1NiPSExO1RiPW51bGw7UmIuYXBwbHkoV2IsYXJndW1lbnRzKX1cbmZ1bmN0aW9uIFliKGEsYixjLGQsZSxmLGcsaCxrKXtYYi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7aWYoU2Ipe2lmKFNiKXt2YXIgbD1UYjtTYj0hMTtUYj1udWxsfWVsc2UgdGhyb3cgRXJyb3IoeSgxOTgpKTtVYnx8KFViPSEwLFZiPWwpfX1mdW5jdGlvbiBaYihhKXt2YXIgYj1hLGM9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2IucmV0dXJuOyliPWIucmV0dXJuO2Vsc2V7YT1iO2RvIGI9YSwwIT09KGIuZmxhZ3MmMTAyNikmJihjPWIucmV0dXJuKSxhPWIucmV0dXJuO3doaWxlKGEpfXJldHVybiAzPT09Yi50YWc/YzpudWxsfWZ1bmN0aW9uICRiKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPWEubWVtb2l6ZWRTdGF0ZTtudWxsPT09YiYmKGE9YS5hbHRlcm5hdGUsbnVsbCE9PWEmJihiPWEubWVtb2l6ZWRTdGF0ZSkpO2lmKG51bGwhPT1iKXJldHVybiBiLmRlaHlkcmF0ZWR9cmV0dXJuIG51bGx9ZnVuY3Rpb24gYWMoYSl7aWYoWmIoYSkhPT1hKXRocm93IEVycm9yKHkoMTg4KSk7fVxuZnVuY3Rpb24gYmMoYSl7dmFyIGI9YS5hbHRlcm5hdGU7aWYoIWIpe2I9WmIoYSk7aWYobnVsbD09PWIpdGhyb3cgRXJyb3IoeSgxODgpKTtyZXR1cm4gYiE9PWE/bnVsbDphfWZvcih2YXIgYz1hLGQ9Yjs7KXt2YXIgZT1jLnJldHVybjtpZihudWxsPT09ZSlicmVhazt2YXIgZj1lLmFsdGVybmF0ZTtpZihudWxsPT09Zil7ZD1lLnJldHVybjtpZihudWxsIT09ZCl7Yz1kO2NvbnRpbnVlfWJyZWFrfWlmKGUuY2hpbGQ9PT1mLmNoaWxkKXtmb3IoZj1lLmNoaWxkO2Y7KXtpZihmPT09YylyZXR1cm4gYWMoZSksYTtpZihmPT09ZClyZXR1cm4gYWMoZSksYjtmPWYuc2libGluZ310aHJvdyBFcnJvcih5KDE4OCkpO31pZihjLnJldHVybiE9PWQucmV0dXJuKWM9ZSxkPWY7ZWxzZXtmb3IodmFyIGc9ITEsaD1lLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWU7ZD1mO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZTtjPWY7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpe2ZvcihoPWYuY2hpbGQ7aDspe2lmKGg9PT1cbmMpe2c9ITA7Yz1mO2Q9ZTticmVha31pZihoPT09ZCl7Zz0hMDtkPWY7Yz1lO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXRocm93IEVycm9yKHkoMTg5KSk7fX1pZihjLmFsdGVybmF0ZSE9PWQpdGhyb3cgRXJyb3IoeSgxOTApKTt9aWYoMyE9PWMudGFnKXRocm93IEVycm9yKHkoMTg4KSk7cmV0dXJuIGMuc3RhdGVOb2RlLmN1cnJlbnQ9PT1jP2E6Yn1mdW5jdGlvbiBjYyhhKXthPWJjKGEpO2lmKCFhKXJldHVybiBudWxsO2Zvcih2YXIgYj1hOzspe2lmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXJldHVybiBiO2lmKGIuY2hpbGQpYi5jaGlsZC5yZXR1cm49YixiPWIuY2hpbGQ7ZWxzZXtpZihiPT09YSlicmVhaztmb3IoOyFiLnNpYmxpbmc7KXtpZighYi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fXJldHVybiBudWxsfVxuZnVuY3Rpb24gZGMoYSxiKXtmb3IodmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWI7KXtpZihiPT09YXx8Yj09PWMpcmV0dXJuITA7Yj1iLnJldHVybn1yZXR1cm4hMX12YXIgZWMsZmMsZ2MsaGMsaWM9ITEsamM9W10sa2M9bnVsbCxsYz1udWxsLG1jPW51bGwsbmM9bmV3IE1hcCxvYz1uZXcgTWFwLHBjPVtdLHFjPVwibW91c2Vkb3duIG1vdXNldXAgdG91Y2hjYW5jZWwgdG91Y2hlbmQgdG91Y2hzdGFydCBhdXhjbGljayBkYmxjbGljayBwb2ludGVyY2FuY2VsIHBvaW50ZXJkb3duIHBvaW50ZXJ1cCBkcmFnZW5kIGRyYWdzdGFydCBkcm9wIGNvbXBvc2l0aW9uZW5kIGNvbXBvc2l0aW9uc3RhcnQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBpbnB1dCB0ZXh0SW5wdXQgY29weSBjdXQgcGFzdGUgY2xpY2sgY2hhbmdlIGNvbnRleHRtZW51IHJlc2V0IHN1Ym1pdFwiLnNwbGl0KFwiIFwiKTtcbmZ1bmN0aW9uIHJjKGEsYixjLGQsZSl7cmV0dXJue2Jsb2NrZWRPbjphLGRvbUV2ZW50TmFtZTpiLGV2ZW50U3lzdGVtRmxhZ3M6Y3wxNixuYXRpdmVFdmVudDplLHRhcmdldENvbnRhaW5lcnM6W2RdfX1mdW5jdGlvbiBzYyhhLGIpe3N3aXRjaChhKXtjYXNlIFwiZm9jdXNpblwiOmNhc2UgXCJmb2N1c291dFwiOmtjPW51bGw7YnJlYWs7Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnbGVhdmVcIjpsYz1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwibW91c2VvdXRcIjptYz1udWxsO2JyZWFrO2Nhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVyb3V0XCI6bmMuZGVsZXRlKGIucG9pbnRlcklkKTticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6b2MuZGVsZXRlKGIucG9pbnRlcklkKX19XG5mdW5jdGlvbiB0YyhhLGIsYyxkLGUsZil7aWYobnVsbD09PWF8fGEubmF0aXZlRXZlbnQhPT1mKXJldHVybiBhPXJjKGIsYyxkLGUsZiksbnVsbCE9PWImJihiPUNiKGIpLG51bGwhPT1iJiZmYyhiKSksYTthLmV2ZW50U3lzdGVtRmxhZ3N8PWQ7Yj1hLnRhcmdldENvbnRhaW5lcnM7bnVsbCE9PWUmJi0xPT09Yi5pbmRleE9mKGUpJiZiLnB1c2goZSk7cmV0dXJuIGF9XG5mdW5jdGlvbiB1YyhhLGIsYyxkLGUpe3N3aXRjaChiKXtjYXNlIFwiZm9jdXNpblwiOnJldHVybiBrYz10YyhrYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJkcmFnZW50ZXJcIjpyZXR1cm4gbGM9dGMobGMsYSxiLGMsZCxlKSwhMDtjYXNlIFwibW91c2VvdmVyXCI6cmV0dXJuIG1jPXRjKG1jLGEsYixjLGQsZSksITA7Y2FzZSBcInBvaW50ZXJvdmVyXCI6dmFyIGY9ZS5wb2ludGVySWQ7bmMuc2V0KGYsdGMobmMuZ2V0KGYpfHxudWxsLGEsYixjLGQsZSkpO3JldHVybiEwO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOnJldHVybiBmPWUucG9pbnRlcklkLG9jLnNldChmLHRjKG9jLmdldChmKXx8bnVsbCxhLGIsYyxkLGUpKSwhMH1yZXR1cm4hMX1cbmZ1bmN0aW9uIHZjKGEpe3ZhciBiPXdjKGEudGFyZ2V0KTtpZihudWxsIT09Yil7dmFyIGM9WmIoYik7aWYobnVsbCE9PWMpaWYoYj1jLnRhZywxMz09PWIpe2lmKGI9JGIoYyksbnVsbCE9PWIpe2EuYmxvY2tlZE9uPWI7aGMoYS5sYW5lUHJpb3JpdHksZnVuY3Rpb24oKXtyLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eShhLnByaW9yaXR5LGZ1bmN0aW9uKCl7Z2MoYyl9KX0pO3JldHVybn19ZWxzZSBpZigzPT09YiYmYy5zdGF0ZU5vZGUuaHlkcmF0ZSl7YS5ibG9ja2VkT249Mz09PWMudGFnP2Muc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDtyZXR1cm59fWEuYmxvY2tlZE9uPW51bGx9XG5mdW5jdGlvbiB4YyhhKXtpZihudWxsIT09YS5ibG9ja2VkT24pcmV0dXJuITE7Zm9yKHZhciBiPWEudGFyZ2V0Q29udGFpbmVyczswPGIubGVuZ3RoOyl7dmFyIGM9eWMoYS5kb21FdmVudE5hbWUsYS5ldmVudFN5c3RlbUZsYWdzLGJbMF0sYS5uYXRpdmVFdmVudCk7aWYobnVsbCE9PWMpcmV0dXJuIGI9Q2IoYyksbnVsbCE9PWImJmZjKGIpLGEuYmxvY2tlZE9uPWMsITE7Yi5zaGlmdCgpfXJldHVybiEwfWZ1bmN0aW9uIHpjKGEsYixjKXt4YyhhKSYmYy5kZWxldGUoYil9XG5mdW5jdGlvbiBBYygpe2ZvcihpYz0hMTswPGpjLmxlbmd0aDspe3ZhciBhPWpjWzBdO2lmKG51bGwhPT1hLmJsb2NrZWRPbil7YT1DYihhLmJsb2NrZWRPbik7bnVsbCE9PWEmJmVjKGEpO2JyZWFrfWZvcih2YXIgYj1hLnRhcmdldENvbnRhaW5lcnM7MDxiLmxlbmd0aDspe3ZhciBjPXljKGEuZG9tRXZlbnROYW1lLGEuZXZlbnRTeXN0ZW1GbGFncyxiWzBdLGEubmF0aXZlRXZlbnQpO2lmKG51bGwhPT1jKXthLmJsb2NrZWRPbj1jO2JyZWFrfWIuc2hpZnQoKX1udWxsPT09YS5ibG9ja2VkT24mJmpjLnNoaWZ0KCl9bnVsbCE9PWtjJiZ4YyhrYykmJihrYz1udWxsKTtudWxsIT09bGMmJnhjKGxjKSYmKGxjPW51bGwpO251bGwhPT1tYyYmeGMobWMpJiYobWM9bnVsbCk7bmMuZm9yRWFjaCh6Yyk7b2MuZm9yRWFjaCh6Yyl9XG5mdW5jdGlvbiBCYyhhLGIpe2EuYmxvY2tlZE9uPT09YiYmKGEuYmxvY2tlZE9uPW51bGwsaWN8fChpYz0hMCxyLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2soci51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxBYykpKX1cbmZ1bmN0aW9uIENjKGEpe2Z1bmN0aW9uIGIoYil7cmV0dXJuIEJjKGIsYSl9aWYoMDxqYy5sZW5ndGgpe0JjKGpjWzBdLGEpO2Zvcih2YXIgYz0xO2M8amMubGVuZ3RoO2MrKyl7dmFyIGQ9amNbY107ZC5ibG9ja2VkT249PT1hJiYoZC5ibG9ja2VkT249bnVsbCl9fW51bGwhPT1rYyYmQmMoa2MsYSk7bnVsbCE9PWxjJiZCYyhsYyxhKTtudWxsIT09bWMmJkJjKG1jLGEpO25jLmZvckVhY2goYik7b2MuZm9yRWFjaChiKTtmb3IoYz0wO2M8cGMubGVuZ3RoO2MrKylkPXBjW2NdLGQuYmxvY2tlZE9uPT09YSYmKGQuYmxvY2tlZE9uPW51bGwpO2Zvcig7MDxwYy5sZW5ndGgmJihjPXBjWzBdLG51bGw9PT1jLmJsb2NrZWRPbik7KXZjKGMpLG51bGw9PT1jLmJsb2NrZWRPbiYmcGMuc2hpZnQoKX1cbmZ1bmN0aW9uIERjKGEsYil7dmFyIGM9e307Y1thLnRvTG93ZXJDYXNlKCldPWIudG9Mb3dlckNhc2UoKTtjW1wiV2Via2l0XCIrYV09XCJ3ZWJraXRcIitiO2NbXCJNb3pcIithXT1cIm1velwiK2I7cmV0dXJuIGN9dmFyIEVjPXthbmltYXRpb25lbmQ6RGMoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkVuZFwiKSxhbmltYXRpb25pdGVyYXRpb246RGMoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkl0ZXJhdGlvblwiKSxhbmltYXRpb25zdGFydDpEYyhcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uU3RhcnRcIiksdHJhbnNpdGlvbmVuZDpEYyhcIlRyYW5zaXRpb25cIixcIlRyYW5zaXRpb25FbmRcIil9LEZjPXt9LEdjPXt9O1xuZmEmJihHYz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLnN0eWxlLFwiQW5pbWF0aW9uRXZlbnRcImluIHdpbmRvd3x8KGRlbGV0ZSBFYy5hbmltYXRpb25lbmQuYW5pbWF0aW9uLGRlbGV0ZSBFYy5hbmltYXRpb25pdGVyYXRpb24uYW5pbWF0aW9uLGRlbGV0ZSBFYy5hbmltYXRpb25zdGFydC5hbmltYXRpb24pLFwiVHJhbnNpdGlvbkV2ZW50XCJpbiB3aW5kb3d8fGRlbGV0ZSBFYy50cmFuc2l0aW9uZW5kLnRyYW5zaXRpb24pO2Z1bmN0aW9uIEhjKGEpe2lmKEZjW2FdKXJldHVybiBGY1thXTtpZighRWNbYV0pcmV0dXJuIGE7dmFyIGI9RWNbYV0sYztmb3IoYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykmJmMgaW4gR2MpcmV0dXJuIEZjW2FdPWJbY107cmV0dXJuIGF9XG52YXIgSWM9SGMoXCJhbmltYXRpb25lbmRcIiksSmM9SGMoXCJhbmltYXRpb25pdGVyYXRpb25cIiksS2M9SGMoXCJhbmltYXRpb25zdGFydFwiKSxMYz1IYyhcInRyYW5zaXRpb25lbmRcIiksTWM9bmV3IE1hcCxOYz1uZXcgTWFwLE9jPVtcImFib3J0XCIsXCJhYm9ydFwiLEljLFwiYW5pbWF0aW9uRW5kXCIsSmMsXCJhbmltYXRpb25JdGVyYXRpb25cIixLYyxcImFuaW1hdGlvblN0YXJ0XCIsXCJjYW5wbGF5XCIsXCJjYW5QbGF5XCIsXCJjYW5wbGF5dGhyb3VnaFwiLFwiY2FuUGxheVRocm91Z2hcIixcImR1cmF0aW9uY2hhbmdlXCIsXCJkdXJhdGlvbkNoYW5nZVwiLFwiZW1wdGllZFwiLFwiZW1wdGllZFwiLFwiZW5jcnlwdGVkXCIsXCJlbmNyeXB0ZWRcIixcImVuZGVkXCIsXCJlbmRlZFwiLFwiZXJyb3JcIixcImVycm9yXCIsXCJnb3Rwb2ludGVyY2FwdHVyZVwiLFwiZ290UG9pbnRlckNhcHR1cmVcIixcImxvYWRcIixcImxvYWRcIixcImxvYWRlZGRhdGFcIixcImxvYWRlZERhdGFcIixcImxvYWRlZG1ldGFkYXRhXCIsXCJsb2FkZWRNZXRhZGF0YVwiLFwibG9hZHN0YXJ0XCIsXCJsb2FkU3RhcnRcIixcblwibG9zdHBvaW50ZXJjYXB0dXJlXCIsXCJsb3N0UG9pbnRlckNhcHR1cmVcIixcInBsYXlpbmdcIixcInBsYXlpbmdcIixcInByb2dyZXNzXCIsXCJwcm9ncmVzc1wiLFwic2Vla2luZ1wiLFwic2Vla2luZ1wiLFwic3RhbGxlZFwiLFwic3RhbGxlZFwiLFwic3VzcGVuZFwiLFwic3VzcGVuZFwiLFwidGltZXVwZGF0ZVwiLFwidGltZVVwZGF0ZVwiLExjLFwidHJhbnNpdGlvbkVuZFwiLFwid2FpdGluZ1wiLFwid2FpdGluZ1wiXTtmdW5jdGlvbiBQYyhhLGIpe2Zvcih2YXIgYz0wO2M8YS5sZW5ndGg7Yys9Mil7dmFyIGQ9YVtjXSxlPWFbYysxXTtlPVwib25cIisoZVswXS50b1VwcGVyQ2FzZSgpK2Uuc2xpY2UoMSkpO05jLnNldChkLGIpO01jLnNldChkLGUpO2RhKGUsW2RdKX19dmFyIFFjPXIudW5zdGFibGVfbm93O1FjKCk7dmFyIEY9ODtcbmZ1bmN0aW9uIFJjKGEpe2lmKDAhPT0oMSZhKSlyZXR1cm4gRj0xNSwxO2lmKDAhPT0oMiZhKSlyZXR1cm4gRj0xNCwyO2lmKDAhPT0oNCZhKSlyZXR1cm4gRj0xMyw0O3ZhciBiPTI0JmE7aWYoMCE9PWIpcmV0dXJuIEY9MTIsYjtpZigwIT09KGEmMzIpKXJldHVybiBGPTExLDMyO2I9MTkyJmE7aWYoMCE9PWIpcmV0dXJuIEY9MTAsYjtpZigwIT09KGEmMjU2KSlyZXR1cm4gRj05LDI1NjtiPTM1ODQmYTtpZigwIT09YilyZXR1cm4gRj04LGI7aWYoMCE9PShhJjQwOTYpKXJldHVybiBGPTcsNDA5NjtiPTQxODYxMTImYTtpZigwIT09YilyZXR1cm4gRj02LGI7Yj02MjkxNDU2MCZhO2lmKDAhPT1iKXJldHVybiBGPTUsYjtpZihhJjY3MTA4ODY0KXJldHVybiBGPTQsNjcxMDg4NjQ7aWYoMCE9PShhJjEzNDIxNzcyOCkpcmV0dXJuIEY9MywxMzQyMTc3Mjg7Yj04MDUzMDYzNjgmYTtpZigwIT09YilyZXR1cm4gRj0yLGI7aWYoMCE9PSgxMDczNzQxODI0JmEpKXJldHVybiBGPTEsMTA3Mzc0MTgyNDtcbkY9ODtyZXR1cm4gYX1mdW5jdGlvbiBTYyhhKXtzd2l0Y2goYSl7Y2FzZSA5OTpyZXR1cm4gMTU7Y2FzZSA5ODpyZXR1cm4gMTA7Y2FzZSA5NzpjYXNlIDk2OnJldHVybiA4O2Nhc2UgOTU6cmV0dXJuIDI7ZGVmYXVsdDpyZXR1cm4gMH19ZnVuY3Rpb24gVGMoYSl7c3dpdGNoKGEpe2Nhc2UgMTU6Y2FzZSAxNDpyZXR1cm4gOTk7Y2FzZSAxMzpjYXNlIDEyOmNhc2UgMTE6Y2FzZSAxMDpyZXR1cm4gOTg7Y2FzZSA5OmNhc2UgODpjYXNlIDc6Y2FzZSA2OmNhc2UgNDpjYXNlIDU6cmV0dXJuIDk3O2Nhc2UgMzpjYXNlIDI6Y2FzZSAxOnJldHVybiA5NTtjYXNlIDA6cmV0dXJuIDkwO2RlZmF1bHQ6dGhyb3cgRXJyb3IoeSgzNTgsYSkpO319XG5mdW5jdGlvbiBVYyhhLGIpe3ZhciBjPWEucGVuZGluZ0xhbmVzO2lmKDA9PT1jKXJldHVybiBGPTA7dmFyIGQ9MCxlPTAsZj1hLmV4cGlyZWRMYW5lcyxnPWEuc3VzcGVuZGVkTGFuZXMsaD1hLnBpbmdlZExhbmVzO2lmKDAhPT1mKWQ9ZixlPUY9MTU7ZWxzZSBpZihmPWMmMTM0MjE3NzI3LDAhPT1mKXt2YXIgaz1mJn5nOzAhPT1rPyhkPVJjKGspLGU9Rik6KGgmPWYsMCE9PWgmJihkPVJjKGgpLGU9RikpfWVsc2UgZj1jJn5nLDAhPT1mPyhkPVJjKGYpLGU9Rik6MCE9PWgmJihkPVJjKGgpLGU9Rik7aWYoMD09PWQpcmV0dXJuIDA7ZD0zMS1WYyhkKTtkPWMmKCgwPmQ/MDoxPDxkKTw8MSktMTtpZigwIT09YiYmYiE9PWQmJjA9PT0oYiZnKSl7UmMoYik7aWYoZTw9RilyZXR1cm4gYjtGPWV9Yj1hLmVudGFuZ2xlZExhbmVzO2lmKDAhPT1iKWZvcihhPWEuZW50YW5nbGVtZW50cyxiJj1kOzA8YjspYz0zMS1WYyhiKSxlPTE8PGMsZHw9YVtjXSxiJj1+ZTtyZXR1cm4gZH1cbmZ1bmN0aW9uIFdjKGEpe2E9YS5wZW5kaW5nTGFuZXMmLTEwNzM3NDE4MjU7cmV0dXJuIDAhPT1hP2E6YSYxMDczNzQxODI0PzEwNzM3NDE4MjQ6MH1mdW5jdGlvbiBYYyhhLGIpe3N3aXRjaChhKXtjYXNlIDE1OnJldHVybiAxO2Nhc2UgMTQ6cmV0dXJuIDI7Y2FzZSAxMjpyZXR1cm4gYT1ZYygyNCZ+YiksMD09PWE/WGMoMTAsYik6YTtjYXNlIDEwOnJldHVybiBhPVljKDE5MiZ+YiksMD09PWE/WGMoOCxiKTphO2Nhc2UgODpyZXR1cm4gYT1ZYygzNTg0Jn5iKSwwPT09YSYmKGE9WWMoNDE4NjExMiZ+YiksMD09PWEmJihhPTUxMikpLGE7Y2FzZSAyOnJldHVybiBiPVljKDgwNTMwNjM2OCZ+YiksMD09PWImJihiPTI2ODQzNTQ1NiksYn10aHJvdyBFcnJvcih5KDM1OCxhKSk7fWZ1bmN0aW9uIFljKGEpe3JldHVybiBhJi1hfWZ1bmN0aW9uIFpjKGEpe2Zvcih2YXIgYj1bXSxjPTA7MzE+YztjKyspYi5wdXNoKGEpO3JldHVybiBifVxuZnVuY3Rpb24gJGMoYSxiLGMpe2EucGVuZGluZ0xhbmVzfD1iO3ZhciBkPWItMTthLnN1c3BlbmRlZExhbmVzJj1kO2EucGluZ2VkTGFuZXMmPWQ7YT1hLmV2ZW50VGltZXM7Yj0zMS1WYyhiKTthW2JdPWN9dmFyIFZjPU1hdGguY2x6MzI/TWF0aC5jbHozMjphZCxiZD1NYXRoLmxvZyxjZD1NYXRoLkxOMjtmdW5jdGlvbiBhZChhKXtyZXR1cm4gMD09PWE/MzI6MzEtKGJkKGEpL2NkfDApfDB9dmFyIGRkPXIudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHksZWQ9ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHksZmQ9ITA7ZnVuY3Rpb24gZ2QoYSxiLGMsZCl7S2J8fEliKCk7dmFyIGU9aGQsZj1LYjtLYj0hMDt0cnl7SGIoZSxhLGIsYyxkKX1maW5hbGx5eyhLYj1mKXx8TWIoKX19ZnVuY3Rpb24gaWQoYSxiLGMsZCl7ZWQoZGQsaGQuYmluZChudWxsLGEsYixjLGQpKX1cbmZ1bmN0aW9uIGhkKGEsYixjLGQpe2lmKGZkKXt2YXIgZTtpZigoZT0wPT09KGImNCkpJiYwPGpjLmxlbmd0aCYmLTE8cWMuaW5kZXhPZihhKSlhPXJjKG51bGwsYSxiLGMsZCksamMucHVzaChhKTtlbHNle3ZhciBmPXljKGEsYixjLGQpO2lmKG51bGw9PT1mKWUmJnNjKGEsZCk7ZWxzZXtpZihlKXtpZigtMTxxYy5pbmRleE9mKGEpKXthPXJjKGYsYSxiLGMsZCk7amMucHVzaChhKTtyZXR1cm59aWYodWMoZixhLGIsYyxkKSlyZXR1cm47c2MoYSxkKX1qZChhLGIsZCxudWxsLGMpfX19fVxuZnVuY3Rpb24geWMoYSxiLGMsZCl7dmFyIGU9eGIoZCk7ZT13YyhlKTtpZihudWxsIT09ZSl7dmFyIGY9WmIoZSk7aWYobnVsbD09PWYpZT1udWxsO2Vsc2V7dmFyIGc9Zi50YWc7aWYoMTM9PT1nKXtlPSRiKGYpO2lmKG51bGwhPT1lKXJldHVybiBlO2U9bnVsbH1lbHNlIGlmKDM9PT1nKXtpZihmLnN0YXRlTm9kZS5oeWRyYXRlKXJldHVybiAzPT09Zi50YWc/Zi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbzpudWxsO2U9bnVsbH1lbHNlIGYhPT1lJiYoZT1udWxsKX19amQoYSxiLGQsZSxjKTtyZXR1cm4gbnVsbH12YXIga2Q9bnVsbCxsZD1udWxsLG1kPW51bGw7XG5mdW5jdGlvbiBuZCgpe2lmKG1kKXJldHVybiBtZDt2YXIgYSxiPWxkLGM9Yi5sZW5ndGgsZCxlPVwidmFsdWVcImluIGtkP2tkLnZhbHVlOmtkLnRleHRDb250ZW50LGY9ZS5sZW5ndGg7Zm9yKGE9MDthPGMmJmJbYV09PT1lW2FdO2ErKyk7dmFyIGc9Yy1hO2ZvcihkPTE7ZDw9ZyYmYltjLWRdPT09ZVtmLWRdO2QrKyk7cmV0dXJuIG1kPWUuc2xpY2UoYSwxPGQ/MS1kOnZvaWQgMCl9ZnVuY3Rpb24gb2QoYSl7dmFyIGI9YS5rZXlDb2RlO1wiY2hhckNvZGVcImluIGE/KGE9YS5jaGFyQ29kZSwwPT09YSYmMTM9PT1iJiYoYT0xMykpOmE9YjsxMD09PWEmJihhPTEzKTtyZXR1cm4gMzI8PWF8fDEzPT09YT9hOjB9ZnVuY3Rpb24gcGQoKXtyZXR1cm4hMH1mdW5jdGlvbiBxZCgpe3JldHVybiExfVxuZnVuY3Rpb24gcmQoYSl7ZnVuY3Rpb24gYihiLGQsZSxmLGcpe3RoaXMuX3JlYWN0TmFtZT1iO3RoaXMuX3RhcmdldEluc3Q9ZTt0aGlzLnR5cGU9ZDt0aGlzLm5hdGl2ZUV2ZW50PWY7dGhpcy50YXJnZXQ9Zzt0aGlzLmN1cnJlbnRUYXJnZXQ9bnVsbDtmb3IodmFyIGMgaW4gYSlhLmhhc093blByb3BlcnR5KGMpJiYoYj1hW2NdLHRoaXNbY109Yj9iKGYpOmZbY10pO3RoaXMuaXNEZWZhdWx0UHJldmVudGVkPShudWxsIT1mLmRlZmF1bHRQcmV2ZW50ZWQ/Zi5kZWZhdWx0UHJldmVudGVkOiExPT09Zi5yZXR1cm5WYWx1ZSk/cGQ6cWQ7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1xZDtyZXR1cm4gdGhpc31tKGIucHJvdG90eXBlLHtwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe3RoaXMuZGVmYXVsdFByZXZlbnRlZD0hMDt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnByZXZlbnREZWZhdWx0P2EucHJldmVudERlZmF1bHQoKTpcInVua25vd25cIiE9PXR5cGVvZiBhLnJldHVyblZhbHVlJiZcbihhLnJldHVyblZhbHVlPSExKSx0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1wZCl9LHN0b3BQcm9wYWdhdGlvbjpmdW5jdGlvbigpe3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEuc3RvcFByb3BhZ2F0aW9uP2Euc3RvcFByb3BhZ2F0aW9uKCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5jYW5jZWxCdWJibGUmJihhLmNhbmNlbEJ1YmJsZT0hMCksdGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1wZCl9LHBlcnNpc3Q6ZnVuY3Rpb24oKXt9LGlzUGVyc2lzdGVudDpwZH0pO3JldHVybiBifVxudmFyIHNkPXtldmVudFBoYXNlOjAsYnViYmxlczowLGNhbmNlbGFibGU6MCx0aW1lU3RhbXA6ZnVuY3Rpb24oYSl7cmV0dXJuIGEudGltZVN0YW1wfHxEYXRlLm5vdygpfSxkZWZhdWx0UHJldmVudGVkOjAsaXNUcnVzdGVkOjB9LHRkPXJkKHNkKSx1ZD1tKHt9LHNkLHt2aWV3OjAsZGV0YWlsOjB9KSx2ZD1yZCh1ZCksd2QseGQseWQsQWQ9bSh7fSx1ZCx7c2NyZWVuWDowLHNjcmVlblk6MCxjbGllbnRYOjAsY2xpZW50WTowLHBhZ2VYOjAscGFnZVk6MCxjdHJsS2V5OjAsc2hpZnRLZXk6MCxhbHRLZXk6MCxtZXRhS2V5OjAsZ2V0TW9kaWZpZXJTdGF0ZTp6ZCxidXR0b246MCxidXR0b25zOjAscmVsYXRlZFRhcmdldDpmdW5jdGlvbihhKXtyZXR1cm4gdm9pZCAwPT09YS5yZWxhdGVkVGFyZ2V0P2EuZnJvbUVsZW1lbnQ9PT1hLnNyY0VsZW1lbnQ/YS50b0VsZW1lbnQ6YS5mcm9tRWxlbWVudDphLnJlbGF0ZWRUYXJnZXR9LG1vdmVtZW50WDpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WFwiaW5cbmEpcmV0dXJuIGEubW92ZW1lbnRYO2EhPT15ZCYmKHlkJiZcIm1vdXNlbW92ZVwiPT09YS50eXBlPyh3ZD1hLnNjcmVlblgteWQuc2NyZWVuWCx4ZD1hLnNjcmVlblkteWQuc2NyZWVuWSk6eGQ9d2Q9MCx5ZD1hKTtyZXR1cm4gd2R9LG1vdmVtZW50WTpmdW5jdGlvbihhKXtyZXR1cm5cIm1vdmVtZW50WVwiaW4gYT9hLm1vdmVtZW50WTp4ZH19KSxCZD1yZChBZCksQ2Q9bSh7fSxBZCx7ZGF0YVRyYW5zZmVyOjB9KSxEZD1yZChDZCksRWQ9bSh7fSx1ZCx7cmVsYXRlZFRhcmdldDowfSksRmQ9cmQoRWQpLEdkPW0oe30sc2Qse2FuaW1hdGlvbk5hbWU6MCxlbGFwc2VkVGltZTowLHBzZXVkb0VsZW1lbnQ6MH0pLEhkPXJkKEdkKSxJZD1tKHt9LHNkLHtjbGlwYm9hcmREYXRhOmZ1bmN0aW9uKGEpe3JldHVyblwiY2xpcGJvYXJkRGF0YVwiaW4gYT9hLmNsaXBib2FyZERhdGE6d2luZG93LmNsaXBib2FyZERhdGF9fSksSmQ9cmQoSWQpLEtkPW0oe30sc2Qse2RhdGE6MH0pLExkPXJkKEtkKSxNZD17RXNjOlwiRXNjYXBlXCIsXG5TcGFjZWJhcjpcIiBcIixMZWZ0OlwiQXJyb3dMZWZ0XCIsVXA6XCJBcnJvd1VwXCIsUmlnaHQ6XCJBcnJvd1JpZ2h0XCIsRG93bjpcIkFycm93RG93blwiLERlbDpcIkRlbGV0ZVwiLFdpbjpcIk9TXCIsTWVudTpcIkNvbnRleHRNZW51XCIsQXBwczpcIkNvbnRleHRNZW51XCIsU2Nyb2xsOlwiU2Nyb2xsTG9ja1wiLE1velByaW50YWJsZUtleTpcIlVuaWRlbnRpZmllZFwifSxOZD17ODpcIkJhY2tzcGFjZVwiLDk6XCJUYWJcIiwxMjpcIkNsZWFyXCIsMTM6XCJFbnRlclwiLDE2OlwiU2hpZnRcIiwxNzpcIkNvbnRyb2xcIiwxODpcIkFsdFwiLDE5OlwiUGF1c2VcIiwyMDpcIkNhcHNMb2NrXCIsMjc6XCJFc2NhcGVcIiwzMjpcIiBcIiwzMzpcIlBhZ2VVcFwiLDM0OlwiUGFnZURvd25cIiwzNTpcIkVuZFwiLDM2OlwiSG9tZVwiLDM3OlwiQXJyb3dMZWZ0XCIsMzg6XCJBcnJvd1VwXCIsMzk6XCJBcnJvd1JpZ2h0XCIsNDA6XCJBcnJvd0Rvd25cIiw0NTpcIkluc2VydFwiLDQ2OlwiRGVsZXRlXCIsMTEyOlwiRjFcIiwxMTM6XCJGMlwiLDExNDpcIkYzXCIsMTE1OlwiRjRcIiwxMTY6XCJGNVwiLDExNzpcIkY2XCIsMTE4OlwiRjdcIixcbjExOTpcIkY4XCIsMTIwOlwiRjlcIiwxMjE6XCJGMTBcIiwxMjI6XCJGMTFcIiwxMjM6XCJGMTJcIiwxNDQ6XCJOdW1Mb2NrXCIsMTQ1OlwiU2Nyb2xsTG9ja1wiLDIyNDpcIk1ldGFcIn0sT2Q9e0FsdDpcImFsdEtleVwiLENvbnRyb2w6XCJjdHJsS2V5XCIsTWV0YTpcIm1ldGFLZXlcIixTaGlmdDpcInNoaWZ0S2V5XCJ9O2Z1bmN0aW9uIFBkKGEpe3ZhciBiPXRoaXMubmF0aXZlRXZlbnQ7cmV0dXJuIGIuZ2V0TW9kaWZpZXJTdGF0ZT9iLmdldE1vZGlmaWVyU3RhdGUoYSk6KGE9T2RbYV0pPyEhYlthXTohMX1mdW5jdGlvbiB6ZCgpe3JldHVybiBQZH1cbnZhciBRZD1tKHt9LHVkLHtrZXk6ZnVuY3Rpb24oYSl7aWYoYS5rZXkpe3ZhciBiPU1kW2Eua2V5XXx8YS5rZXk7aWYoXCJVbmlkZW50aWZpZWRcIiE9PWIpcmV0dXJuIGJ9cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlPyhhPW9kKGEpLDEzPT09YT9cIkVudGVyXCI6U3RyaW5nLmZyb21DaGFyQ29kZShhKSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9OZFthLmtleUNvZGVdfHxcIlVuaWRlbnRpZmllZFwiOlwiXCJ9LGNvZGU6MCxsb2NhdGlvbjowLGN0cmxLZXk6MCxzaGlmdEtleTowLGFsdEtleTowLG1ldGFLZXk6MCxyZXBlYXQ6MCxsb2NhbGU6MCxnZXRNb2RpZmllclN0YXRlOnpkLGNoYXJDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT9vZChhKTowfSxrZXlDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9LHdoaWNoOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PVxuYS50eXBlP29kKGEpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9fSksUmQ9cmQoUWQpLFNkPW0oe30sQWQse3BvaW50ZXJJZDowLHdpZHRoOjAsaGVpZ2h0OjAscHJlc3N1cmU6MCx0YW5nZW50aWFsUHJlc3N1cmU6MCx0aWx0WDowLHRpbHRZOjAsdHdpc3Q6MCxwb2ludGVyVHlwZTowLGlzUHJpbWFyeTowfSksVGQ9cmQoU2QpLFVkPW0oe30sdWQse3RvdWNoZXM6MCx0YXJnZXRUb3VjaGVzOjAsY2hhbmdlZFRvdWNoZXM6MCxhbHRLZXk6MCxtZXRhS2V5OjAsY3RybEtleTowLHNoaWZ0S2V5OjAsZ2V0TW9kaWZpZXJTdGF0ZTp6ZH0pLFZkPXJkKFVkKSxXZD1tKHt9LHNkLHtwcm9wZXJ0eU5hbWU6MCxlbGFwc2VkVGltZTowLHBzZXVkb0VsZW1lbnQ6MH0pLFhkPXJkKFdkKSxZZD1tKHt9LEFkLHtkZWx0YVg6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVhcImluIGE/YS5kZWx0YVg6XCJ3aGVlbERlbHRhWFwiaW4gYT8tYS53aGVlbERlbHRhWDowfSxcbmRlbHRhWTpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWVwiaW4gYT9hLmRlbHRhWTpcIndoZWVsRGVsdGFZXCJpbiBhPy1hLndoZWVsRGVsdGFZOlwid2hlZWxEZWx0YVwiaW4gYT8tYS53aGVlbERlbHRhOjB9LGRlbHRhWjowLGRlbHRhTW9kZTowfSksWmQ9cmQoWWQpLCRkPVs5LDEzLDI3LDMyXSxhZT1mYSYmXCJDb21wb3NpdGlvbkV2ZW50XCJpbiB3aW5kb3csYmU9bnVsbDtmYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYoYmU9ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKTt2YXIgY2U9ZmEmJlwiVGV4dEV2ZW50XCJpbiB3aW5kb3cmJiFiZSxkZT1mYSYmKCFhZXx8YmUmJjg8YmUmJjExPj1iZSksZWU9U3RyaW5nLmZyb21DaGFyQ29kZSgzMiksZmU9ITE7XG5mdW5jdGlvbiBnZShhLGIpe3N3aXRjaChhKXtjYXNlIFwia2V5dXBcIjpyZXR1cm4tMSE9PSRkLmluZGV4T2YoYi5rZXlDb2RlKTtjYXNlIFwia2V5ZG93blwiOnJldHVybiAyMjkhPT1iLmtleUNvZGU7Y2FzZSBcImtleXByZXNzXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJmb2N1c291dFwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIGhlKGEpe2E9YS5kZXRhaWw7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZcImRhdGFcImluIGE/YS5kYXRhOm51bGx9dmFyIGllPSExO2Z1bmN0aW9uIGplKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBoZShiKTtjYXNlIFwia2V5cHJlc3NcIjppZigzMiE9PWIud2hpY2gpcmV0dXJuIG51bGw7ZmU9ITA7cmV0dXJuIGVlO2Nhc2UgXCJ0ZXh0SW5wdXRcIjpyZXR1cm4gYT1iLmRhdGEsYT09PWVlJiZmZT9udWxsOmE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG5mdW5jdGlvbiBrZShhLGIpe2lmKGllKXJldHVyblwiY29tcG9zaXRpb25lbmRcIj09PWF8fCFhZSYmZ2UoYSxiKT8oYT1uZCgpLG1kPWxkPWtkPW51bGwsaWU9ITEsYSk6bnVsbDtzd2l0Y2goYSl7Y2FzZSBcInBhc3RlXCI6cmV0dXJuIG51bGw7Y2FzZSBcImtleXByZXNzXCI6aWYoIShiLmN0cmxLZXl8fGIuYWx0S2V5fHxiLm1ldGFLZXkpfHxiLmN0cmxLZXkmJmIuYWx0S2V5KXtpZihiLmNoYXImJjE8Yi5jaGFyLmxlbmd0aClyZXR1cm4gYi5jaGFyO2lmKGIud2hpY2gpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoYi53aGljaCl9cmV0dXJuIG51bGw7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIGRlJiZcImtvXCIhPT1iLmxvY2FsZT9udWxsOmIuZGF0YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciBsZT17Y29sb3I6ITAsZGF0ZTohMCxkYXRldGltZTohMCxcImRhdGV0aW1lLWxvY2FsXCI6ITAsZW1haWw6ITAsbW9udGg6ITAsbnVtYmVyOiEwLHBhc3N3b3JkOiEwLHJhbmdlOiEwLHNlYXJjaDohMCx0ZWw6ITAsdGV4dDohMCx0aW1lOiEwLHVybDohMCx3ZWVrOiEwfTtmdW5jdGlvbiBtZShhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJpbnB1dFwiPT09Yj8hIWxlW2EudHlwZV06XCJ0ZXh0YXJlYVwiPT09Yj8hMDohMX1mdW5jdGlvbiBuZShhLGIsYyxkKXtFYihkKTtiPW9lKGIsXCJvbkNoYW5nZVwiKTswPGIubGVuZ3RoJiYoYz1uZXcgdGQoXCJvbkNoYW5nZVwiLFwiY2hhbmdlXCIsbnVsbCxjLGQpLGEucHVzaCh7ZXZlbnQ6YyxsaXN0ZW5lcnM6Yn0pKX12YXIgcGU9bnVsbCxxZT1udWxsO2Z1bmN0aW9uIHJlKGEpe3NlKGEsMCl9ZnVuY3Rpb24gdGUoYSl7dmFyIGI9dWUoYSk7aWYoV2EoYikpcmV0dXJuIGF9XG5mdW5jdGlvbiB2ZShhLGIpe2lmKFwiY2hhbmdlXCI9PT1hKXJldHVybiBifXZhciB3ZT0hMTtpZihmYSl7dmFyIHhlO2lmKGZhKXt2YXIgeWU9XCJvbmlucHV0XCJpbiBkb2N1bWVudDtpZigheWUpe3ZhciB6ZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO3plLnNldEF0dHJpYnV0ZShcIm9uaW5wdXRcIixcInJldHVybjtcIik7eWU9XCJmdW5jdGlvblwiPT09dHlwZW9mIHplLm9uaW5wdXR9eGU9eWV9ZWxzZSB4ZT0hMTt3ZT14ZSYmKCFkb2N1bWVudC5kb2N1bWVudE1vZGV8fDk8ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKX1mdW5jdGlvbiBBZSgpe3BlJiYocGUuZGV0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsQmUpLHFlPXBlPW51bGwpfWZ1bmN0aW9uIEJlKGEpe2lmKFwidmFsdWVcIj09PWEucHJvcGVydHlOYW1lJiZ0ZShxZSkpe3ZhciBiPVtdO25lKGIscWUsYSx4YihhKSk7YT1yZTtpZihLYilhKGIpO2Vsc2V7S2I9ITA7dHJ5e0diKGEsYil9ZmluYWxseXtLYj0hMSxNYigpfX19fVxuZnVuY3Rpb24gQ2UoYSxiLGMpe1wiZm9jdXNpblwiPT09YT8oQWUoKSxwZT1iLHFlPWMscGUuYXR0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsQmUpKTpcImZvY3Vzb3V0XCI9PT1hJiZBZSgpfWZ1bmN0aW9uIERlKGEpe2lmKFwic2VsZWN0aW9uY2hhbmdlXCI9PT1hfHxcImtleXVwXCI9PT1hfHxcImtleWRvd25cIj09PWEpcmV0dXJuIHRlKHFlKX1mdW5jdGlvbiBFZShhLGIpe2lmKFwiY2xpY2tcIj09PWEpcmV0dXJuIHRlKGIpfWZ1bmN0aW9uIEZlKGEsYil7aWYoXCJpbnB1dFwiPT09YXx8XCJjaGFuZ2VcIj09PWEpcmV0dXJuIHRlKGIpfWZ1bmN0aW9uIEdlKGEsYil7cmV0dXJuIGE9PT1iJiYoMCE9PWF8fDEvYT09PTEvYil8fGEhPT1hJiZiIT09Yn12YXIgSGU9XCJmdW5jdGlvblwiPT09dHlwZW9mIE9iamVjdC5pcz9PYmplY3QuaXM6R2UsSWU9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbmZ1bmN0aW9uIEplKGEsYil7aWYoSGUoYSxiKSlyZXR1cm4hMDtpZihcIm9iamVjdFwiIT09dHlwZW9mIGF8fG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGJ8fG51bGw9PT1iKXJldHVybiExO3ZhciBjPU9iamVjdC5rZXlzKGEpLGQ9T2JqZWN0LmtleXMoYik7aWYoYy5sZW5ndGghPT1kLmxlbmd0aClyZXR1cm4hMTtmb3IoZD0wO2Q8Yy5sZW5ndGg7ZCsrKWlmKCFJZS5jYWxsKGIsY1tkXSl8fCFIZShhW2NbZF1dLGJbY1tkXV0pKXJldHVybiExO3JldHVybiEwfWZ1bmN0aW9uIEtlKGEpe2Zvcig7YSYmYS5maXJzdENoaWxkOylhPWEuZmlyc3RDaGlsZDtyZXR1cm4gYX1cbmZ1bmN0aW9uIExlKGEsYil7dmFyIGM9S2UoYSk7YT0wO2Zvcih2YXIgZDtjOyl7aWYoMz09PWMubm9kZVR5cGUpe2Q9YStjLnRleHRDb250ZW50Lmxlbmd0aDtpZihhPD1iJiZkPj1iKXJldHVybntub2RlOmMsb2Zmc2V0OmItYX07YT1kfWE6e2Zvcig7Yzspe2lmKGMubmV4dFNpYmxpbmcpe2M9Yy5uZXh0U2libGluZzticmVhayBhfWM9Yy5wYXJlbnROb2RlfWM9dm9pZCAwfWM9S2UoYyl9fWZ1bmN0aW9uIE1lKGEsYil7cmV0dXJuIGEmJmI/YT09PWI/ITA6YSYmMz09PWEubm9kZVR5cGU/ITE6YiYmMz09PWIubm9kZVR5cGU/TWUoYSxiLnBhcmVudE5vZGUpOlwiY29udGFpbnNcImluIGE/YS5jb250YWlucyhiKTphLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uPyEhKGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYikmMTYpOiExOiExfVxuZnVuY3Rpb24gTmUoKXtmb3IodmFyIGE9d2luZG93LGI9WGEoKTtiIGluc3RhbmNlb2YgYS5IVE1MSUZyYW1lRWxlbWVudDspe3RyeXt2YXIgYz1cInN0cmluZ1wiPT09dHlwZW9mIGIuY29udGVudFdpbmRvdy5sb2NhdGlvbi5ocmVmfWNhdGNoKGQpe2M9ITF9aWYoYylhPWIuY29udGVudFdpbmRvdztlbHNlIGJyZWFrO2I9WGEoYS5kb2N1bWVudCl9cmV0dXJuIGJ9ZnVuY3Rpb24gT2UoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybiBiJiYoXCJpbnB1dFwiPT09YiYmKFwidGV4dFwiPT09YS50eXBlfHxcInNlYXJjaFwiPT09YS50eXBlfHxcInRlbFwiPT09YS50eXBlfHxcInVybFwiPT09YS50eXBlfHxcInBhc3N3b3JkXCI9PT1hLnR5cGUpfHxcInRleHRhcmVhXCI9PT1ifHxcInRydWVcIj09PWEuY29udGVudEVkaXRhYmxlKX1cbnZhciBQZT1mYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYxMT49ZG9jdW1lbnQuZG9jdW1lbnRNb2RlLFFlPW51bGwsUmU9bnVsbCxTZT1udWxsLFRlPSExO1xuZnVuY3Rpb24gVWUoYSxiLGMpe3ZhciBkPWMud2luZG93PT09Yz9jLmRvY3VtZW50Ojk9PT1jLm5vZGVUeXBlP2M6Yy5vd25lckRvY3VtZW50O1RlfHxudWxsPT1RZXx8UWUhPT1YYShkKXx8KGQ9UWUsXCJzZWxlY3Rpb25TdGFydFwiaW4gZCYmT2UoZCk/ZD17c3RhcnQ6ZC5zZWxlY3Rpb25TdGFydCxlbmQ6ZC5zZWxlY3Rpb25FbmR9OihkPShkLm93bmVyRG9jdW1lbnQmJmQub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlld3x8d2luZG93KS5nZXRTZWxlY3Rpb24oKSxkPXthbmNob3JOb2RlOmQuYW5jaG9yTm9kZSxhbmNob3JPZmZzZXQ6ZC5hbmNob3JPZmZzZXQsZm9jdXNOb2RlOmQuZm9jdXNOb2RlLGZvY3VzT2Zmc2V0OmQuZm9jdXNPZmZzZXR9KSxTZSYmSmUoU2UsZCl8fChTZT1kLGQ9b2UoUmUsXCJvblNlbGVjdFwiKSwwPGQubGVuZ3RoJiYoYj1uZXcgdGQoXCJvblNlbGVjdFwiLFwic2VsZWN0XCIsbnVsbCxiLGMpLGEucHVzaCh7ZXZlbnQ6YixsaXN0ZW5lcnM6ZH0pLGIudGFyZ2V0PVFlKSkpfVxuUGMoXCJjYW5jZWwgY2FuY2VsIGNsaWNrIGNsaWNrIGNsb3NlIGNsb3NlIGNvbnRleHRtZW51IGNvbnRleHRNZW51IGNvcHkgY29weSBjdXQgY3V0IGF1eGNsaWNrIGF1eENsaWNrIGRibGNsaWNrIGRvdWJsZUNsaWNrIGRyYWdlbmQgZHJhZ0VuZCBkcmFnc3RhcnQgZHJhZ1N0YXJ0IGRyb3AgZHJvcCBmb2N1c2luIGZvY3VzIGZvY3Vzb3V0IGJsdXIgaW5wdXQgaW5wdXQgaW52YWxpZCBpbnZhbGlkIGtleWRvd24ga2V5RG93biBrZXlwcmVzcyBrZXlQcmVzcyBrZXl1cCBrZXlVcCBtb3VzZWRvd24gbW91c2VEb3duIG1vdXNldXAgbW91c2VVcCBwYXN0ZSBwYXN0ZSBwYXVzZSBwYXVzZSBwbGF5IHBsYXkgcG9pbnRlcmNhbmNlbCBwb2ludGVyQ2FuY2VsIHBvaW50ZXJkb3duIHBvaW50ZXJEb3duIHBvaW50ZXJ1cCBwb2ludGVyVXAgcmF0ZWNoYW5nZSByYXRlQ2hhbmdlIHJlc2V0IHJlc2V0IHNlZWtlZCBzZWVrZWQgc3VibWl0IHN1Ym1pdCB0b3VjaGNhbmNlbCB0b3VjaENhbmNlbCB0b3VjaGVuZCB0b3VjaEVuZCB0b3VjaHN0YXJ0IHRvdWNoU3RhcnQgdm9sdW1lY2hhbmdlIHZvbHVtZUNoYW5nZVwiLnNwbGl0KFwiIFwiKSxcbjApO1BjKFwiZHJhZyBkcmFnIGRyYWdlbnRlciBkcmFnRW50ZXIgZHJhZ2V4aXQgZHJhZ0V4aXQgZHJhZ2xlYXZlIGRyYWdMZWF2ZSBkcmFnb3ZlciBkcmFnT3ZlciBtb3VzZW1vdmUgbW91c2VNb3ZlIG1vdXNlb3V0IG1vdXNlT3V0IG1vdXNlb3ZlciBtb3VzZU92ZXIgcG9pbnRlcm1vdmUgcG9pbnRlck1vdmUgcG9pbnRlcm91dCBwb2ludGVyT3V0IHBvaW50ZXJvdmVyIHBvaW50ZXJPdmVyIHNjcm9sbCBzY3JvbGwgdG9nZ2xlIHRvZ2dsZSB0b3VjaG1vdmUgdG91Y2hNb3ZlIHdoZWVsIHdoZWVsXCIuc3BsaXQoXCIgXCIpLDEpO1BjKE9jLDIpO2Zvcih2YXIgVmU9XCJjaGFuZ2Ugc2VsZWN0aW9uY2hhbmdlIHRleHRJbnB1dCBjb21wb3NpdGlvbnN0YXJ0IGNvbXBvc2l0aW9uZW5kIGNvbXBvc2l0aW9udXBkYXRlXCIuc3BsaXQoXCIgXCIpLFdlPTA7V2U8VmUubGVuZ3RoO1dlKyspTmMuc2V0KFZlW1dlXSwwKTtlYShcIm9uTW91c2VFbnRlclwiLFtcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl0pO1xuZWEoXCJvbk1vdXNlTGVhdmVcIixbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdKTtlYShcIm9uUG9pbnRlckVudGVyXCIsW1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl0pO2VhKFwib25Qb2ludGVyTGVhdmVcIixbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXSk7ZGEoXCJvbkNoYW5nZVwiLFwiY2hhbmdlIGNsaWNrIGZvY3VzaW4gZm9jdXNvdXQgaW5wdXQga2V5ZG93biBrZXl1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIikpO2RhKFwib25TZWxlY3RcIixcImZvY3Vzb3V0IGNvbnRleHRtZW51IGRyYWdlbmQgZm9jdXNpbiBrZXlkb3duIGtleXVwIG1vdXNlZG93biBtb3VzZXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKSk7ZGEoXCJvbkJlZm9yZUlucHV0XCIsW1wiY29tcG9zaXRpb25lbmRcIixcImtleXByZXNzXCIsXCJ0ZXh0SW5wdXRcIixcInBhc3RlXCJdKTtkYShcIm9uQ29tcG9zaXRpb25FbmRcIixcImNvbXBvc2l0aW9uZW5kIGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpKTtcbmRhKFwib25Db21wb3NpdGlvblN0YXJ0XCIsXCJjb21wb3NpdGlvbnN0YXJ0IGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpKTtkYShcIm9uQ29tcG9zaXRpb25VcGRhdGVcIixcImNvbXBvc2l0aW9udXBkYXRlIGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpKTt2YXIgWGU9XCJhYm9ydCBjYW5wbGF5IGNhbnBsYXl0aHJvdWdoIGR1cmF0aW9uY2hhbmdlIGVtcHRpZWQgZW5jcnlwdGVkIGVuZGVkIGVycm9yIGxvYWRlZGRhdGEgbG9hZGVkbWV0YWRhdGEgbG9hZHN0YXJ0IHBhdXNlIHBsYXkgcGxheWluZyBwcm9ncmVzcyByYXRlY2hhbmdlIHNlZWtlZCBzZWVraW5nIHN0YWxsZWQgc3VzcGVuZCB0aW1ldXBkYXRlIHZvbHVtZWNoYW5nZSB3YWl0aW5nXCIuc3BsaXQoXCIgXCIpLFllPW5ldyBTZXQoXCJjYW5jZWwgY2xvc2UgaW52YWxpZCBsb2FkIHNjcm9sbCB0b2dnbGVcIi5zcGxpdChcIiBcIikuY29uY2F0KFhlKSk7XG5mdW5jdGlvbiBaZShhLGIsYyl7dmFyIGQ9YS50eXBlfHxcInVua25vd24tZXZlbnRcIjthLmN1cnJlbnRUYXJnZXQ9YztZYihkLGIsdm9pZCAwLGEpO2EuY3VycmVudFRhcmdldD1udWxsfVxuZnVuY3Rpb24gc2UoYSxiKXtiPTAhPT0oYiY0KTtmb3IodmFyIGM9MDtjPGEubGVuZ3RoO2MrKyl7dmFyIGQ9YVtjXSxlPWQuZXZlbnQ7ZD1kLmxpc3RlbmVyczthOnt2YXIgZj12b2lkIDA7aWYoYilmb3IodmFyIGc9ZC5sZW5ndGgtMTswPD1nO2ctLSl7dmFyIGg9ZFtnXSxrPWguaW5zdGFuY2UsbD1oLmN1cnJlbnRUYXJnZXQ7aD1oLmxpc3RlbmVyO2lmKGshPT1mJiZlLmlzUHJvcGFnYXRpb25TdG9wcGVkKCkpYnJlYWsgYTtaZShlLGgsbCk7Zj1rfWVsc2UgZm9yKGc9MDtnPGQubGVuZ3RoO2crKyl7aD1kW2ddO2s9aC5pbnN0YW5jZTtsPWguY3VycmVudFRhcmdldDtoPWgubGlzdGVuZXI7aWYoayE9PWYmJmUuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSlicmVhayBhO1plKGUsaCxsKTtmPWt9fX1pZihVYil0aHJvdyBhPVZiLFViPSExLFZiPW51bGwsYTt9XG5mdW5jdGlvbiBHKGEsYil7dmFyIGM9JGUoYiksZD1hK1wiX19idWJibGVcIjtjLmhhcyhkKXx8KGFmKGIsYSwyLCExKSxjLmFkZChkKSl9dmFyIGJmPVwiX3JlYWN0TGlzdGVuaW5nXCIrTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMik7ZnVuY3Rpb24gY2YoYSl7YVtiZl18fChhW2JmXT0hMCxiYS5mb3JFYWNoKGZ1bmN0aW9uKGIpe1llLmhhcyhiKXx8ZGYoYiwhMSxhLG51bGwpO2RmKGIsITAsYSxudWxsKX0pKX1cbmZ1bmN0aW9uIGRmKGEsYixjLGQpe3ZhciBlPTQ8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzRdP2FyZ3VtZW50c1s0XTowLGY9YztcInNlbGVjdGlvbmNoYW5nZVwiPT09YSYmOSE9PWMubm9kZVR5cGUmJihmPWMub3duZXJEb2N1bWVudCk7aWYobnVsbCE9PWQmJiFiJiZZZS5oYXMoYSkpe2lmKFwic2Nyb2xsXCIhPT1hKXJldHVybjtlfD0yO2Y9ZH12YXIgZz0kZShmKSxoPWErXCJfX1wiKyhiP1wiY2FwdHVyZVwiOlwiYnViYmxlXCIpO2cuaGFzKGgpfHwoYiYmKGV8PTQpLGFmKGYsYSxlLGIpLGcuYWRkKGgpKX1cbmZ1bmN0aW9uIGFmKGEsYixjLGQpe3ZhciBlPU5jLmdldChiKTtzd2l0Y2godm9pZCAwPT09ZT8yOmUpe2Nhc2UgMDplPWdkO2JyZWFrO2Nhc2UgMTplPWlkO2JyZWFrO2RlZmF1bHQ6ZT1oZH1jPWUuYmluZChudWxsLGIsYyxhKTtlPXZvaWQgMDshUGJ8fFwidG91Y2hzdGFydFwiIT09YiYmXCJ0b3VjaG1vdmVcIiE9PWImJlwid2hlZWxcIiE9PWJ8fChlPSEwKTtkP3ZvaWQgMCE9PWU/YS5hZGRFdmVudExpc3RlbmVyKGIsYyx7Y2FwdHVyZTohMCxwYXNzaXZlOmV9KTphLmFkZEV2ZW50TGlzdGVuZXIoYixjLCEwKTp2b2lkIDAhPT1lP2EuYWRkRXZlbnRMaXN0ZW5lcihiLGMse3Bhc3NpdmU6ZX0pOmEuYWRkRXZlbnRMaXN0ZW5lcihiLGMsITEpfVxuZnVuY3Rpb24gamQoYSxiLGMsZCxlKXt2YXIgZj1kO2lmKDA9PT0oYiYxKSYmMD09PShiJjIpJiZudWxsIT09ZClhOmZvcig7Oyl7aWYobnVsbD09PWQpcmV0dXJuO3ZhciBnPWQudGFnO2lmKDM9PT1nfHw0PT09Zyl7dmFyIGg9ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztpZihoPT09ZXx8OD09PWgubm9kZVR5cGUmJmgucGFyZW50Tm9kZT09PWUpYnJlYWs7aWYoND09PWcpZm9yKGc9ZC5yZXR1cm47bnVsbCE9PWc7KXt2YXIgaz1nLnRhZztpZigzPT09a3x8ND09PWspaWYoaz1nLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLGs9PT1lfHw4PT09ay5ub2RlVHlwZSYmay5wYXJlbnROb2RlPT09ZSlyZXR1cm47Zz1nLnJldHVybn1mb3IoO251bGwhPT1oOyl7Zz13YyhoKTtpZihudWxsPT09ZylyZXR1cm47az1nLnRhZztpZig1PT09a3x8Nj09PWspe2Q9Zj1nO2NvbnRpbnVlIGF9aD1oLnBhcmVudE5vZGV9fWQ9ZC5yZXR1cm59TmIoZnVuY3Rpb24oKXt2YXIgZD1mLGU9eGIoYyksZz1bXTtcbmE6e3ZhciBoPU1jLmdldChhKTtpZih2b2lkIDAhPT1oKXt2YXIgaz10ZCx4PWE7c3dpdGNoKGEpe2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDA9PT1vZChjKSlicmVhayBhO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6az1SZDticmVhaztjYXNlIFwiZm9jdXNpblwiOng9XCJmb2N1c1wiO2s9RmQ7YnJlYWs7Y2FzZSBcImZvY3Vzb3V0XCI6eD1cImJsdXJcIjtrPUZkO2JyZWFrO2Nhc2UgXCJiZWZvcmVibHVyXCI6Y2FzZSBcImFmdGVyYmx1clwiOms9RmQ7YnJlYWs7Y2FzZSBcImNsaWNrXCI6aWYoMj09PWMuYnV0dG9uKWJyZWFrIGE7Y2FzZSBcImF1eGNsaWNrXCI6Y2FzZSBcImRibGNsaWNrXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJtb3VzZW1vdmVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJtb3VzZW91dFwiOmNhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwiY29udGV4dG1lbnVcIjprPUJkO2JyZWFrO2Nhc2UgXCJkcmFnXCI6Y2FzZSBcImRyYWdlbmRcIjpjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdleGl0XCI6Y2FzZSBcImRyYWdsZWF2ZVwiOmNhc2UgXCJkcmFnb3ZlclwiOmNhc2UgXCJkcmFnc3RhcnRcIjpjYXNlIFwiZHJvcFwiOms9XG5EZDticmVhaztjYXNlIFwidG91Y2hjYW5jZWxcIjpjYXNlIFwidG91Y2hlbmRcIjpjYXNlIFwidG91Y2htb3ZlXCI6Y2FzZSBcInRvdWNoc3RhcnRcIjprPVZkO2JyZWFrO2Nhc2UgSWM6Y2FzZSBKYzpjYXNlIEtjOms9SGQ7YnJlYWs7Y2FzZSBMYzprPVhkO2JyZWFrO2Nhc2UgXCJzY3JvbGxcIjprPXZkO2JyZWFrO2Nhc2UgXCJ3aGVlbFwiOms9WmQ7YnJlYWs7Y2FzZSBcImNvcHlcIjpjYXNlIFwiY3V0XCI6Y2FzZSBcInBhc3RlXCI6az1KZDticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcInBvaW50ZXJjYW5jZWxcIjpjYXNlIFwicG9pbnRlcmRvd25cIjpjYXNlIFwicG9pbnRlcm1vdmVcIjpjYXNlIFwicG9pbnRlcm91dFwiOmNhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVydXBcIjprPVRkfXZhciB3PTAhPT0oYiY0KSx6PSF3JiZcInNjcm9sbFwiPT09YSx1PXc/bnVsbCE9PWg/aCtcIkNhcHR1cmVcIjpudWxsOmg7dz1bXTtmb3IodmFyIHQ9ZCxxO251bGwhPT1cbnQ7KXtxPXQ7dmFyIHY9cS5zdGF0ZU5vZGU7NT09PXEudGFnJiZudWxsIT09diYmKHE9dixudWxsIT09dSYmKHY9T2IodCx1KSxudWxsIT12JiZ3LnB1c2goZWYodCx2LHEpKSkpO2lmKHopYnJlYWs7dD10LnJldHVybn0wPHcubGVuZ3RoJiYoaD1uZXcgayhoLHgsbnVsbCxjLGUpLGcucHVzaCh7ZXZlbnQ6aCxsaXN0ZW5lcnM6d30pKX19aWYoMD09PShiJjcpKXthOntoPVwibW91c2VvdmVyXCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hO2s9XCJtb3VzZW91dFwiPT09YXx8XCJwb2ludGVyb3V0XCI9PT1hO2lmKGgmJjA9PT0oYiYxNikmJih4PWMucmVsYXRlZFRhcmdldHx8Yy5mcm9tRWxlbWVudCkmJih3Yyh4KXx8eFtmZl0pKWJyZWFrIGE7aWYoa3x8aCl7aD1lLndpbmRvdz09PWU/ZTooaD1lLm93bmVyRG9jdW1lbnQpP2guZGVmYXVsdFZpZXd8fGgucGFyZW50V2luZG93OndpbmRvdztpZihrKXtpZih4PWMucmVsYXRlZFRhcmdldHx8Yy50b0VsZW1lbnQsaz1kLHg9eD93Yyh4KTpudWxsLG51bGwhPT1cbngmJih6PVpiKHgpLHghPT16fHw1IT09eC50YWcmJjYhPT14LnRhZykpeD1udWxsfWVsc2Ugaz1udWxsLHg9ZDtpZihrIT09eCl7dz1CZDt2PVwib25Nb3VzZUxlYXZlXCI7dT1cIm9uTW91c2VFbnRlclwiO3Q9XCJtb3VzZVwiO2lmKFwicG9pbnRlcm91dFwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSl3PVRkLHY9XCJvblBvaW50ZXJMZWF2ZVwiLHU9XCJvblBvaW50ZXJFbnRlclwiLHQ9XCJwb2ludGVyXCI7ej1udWxsPT1rP2g6dWUoayk7cT1udWxsPT14P2g6dWUoeCk7aD1uZXcgdyh2LHQrXCJsZWF2ZVwiLGssYyxlKTtoLnRhcmdldD16O2gucmVsYXRlZFRhcmdldD1xO3Y9bnVsbDt3YyhlKT09PWQmJih3PW5ldyB3KHUsdCtcImVudGVyXCIseCxjLGUpLHcudGFyZ2V0PXEsdy5yZWxhdGVkVGFyZ2V0PXosdj13KTt6PXY7aWYoayYmeCliOnt3PWs7dT14O3Q9MDtmb3IocT13O3E7cT1nZihxKSl0Kys7cT0wO2Zvcih2PXU7djt2PWdmKHYpKXErKztmb3IoOzA8dC1xOyl3PWdmKHcpLHQtLTtmb3IoOzA8cS10Oyl1PVxuZ2YodSkscS0tO2Zvcig7dC0tOyl7aWYodz09PXV8fG51bGwhPT11JiZ3PT09dS5hbHRlcm5hdGUpYnJlYWsgYjt3PWdmKHcpO3U9Z2YodSl9dz1udWxsfWVsc2Ugdz1udWxsO251bGwhPT1rJiZoZihnLGgsayx3LCExKTtudWxsIT09eCYmbnVsbCE9PXomJmhmKGcseix4LHcsITApfX19YTp7aD1kP3VlKGQpOndpbmRvdztrPWgubm9kZU5hbWUmJmgubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtpZihcInNlbGVjdFwiPT09a3x8XCJpbnB1dFwiPT09ayYmXCJmaWxlXCI9PT1oLnR5cGUpdmFyIEo9dmU7ZWxzZSBpZihtZShoKSlpZih3ZSlKPUZlO2Vsc2V7Sj1EZTt2YXIgSz1DZX1lbHNlKGs9aC5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWsudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWgudHlwZXx8XCJyYWRpb1wiPT09aC50eXBlKSYmKEo9RWUpO2lmKEomJihKPUooYSxkKSkpe25lKGcsSixjLGUpO2JyZWFrIGF9SyYmSyhhLGgsZCk7XCJmb2N1c291dFwiPT09YSYmKEs9aC5fd3JhcHBlclN0YXRlKSYmXG5LLmNvbnRyb2xsZWQmJlwibnVtYmVyXCI9PT1oLnR5cGUmJmJiKGgsXCJudW1iZXJcIixoLnZhbHVlKX1LPWQ/dWUoZCk6d2luZG93O3N3aXRjaChhKXtjYXNlIFwiZm9jdXNpblwiOmlmKG1lKEspfHxcInRydWVcIj09PUsuY29udGVudEVkaXRhYmxlKVFlPUssUmU9ZCxTZT1udWxsO2JyZWFrO2Nhc2UgXCJmb2N1c291dFwiOlNlPVJlPVFlPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlZG93blwiOlRlPSEwO2JyZWFrO2Nhc2UgXCJjb250ZXh0bWVudVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcImRyYWdlbmRcIjpUZT0hMTtVZShnLGMsZSk7YnJlYWs7Y2FzZSBcInNlbGVjdGlvbmNoYW5nZVwiOmlmKFBlKWJyZWFrO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6VWUoZyxjLGUpfXZhciBRO2lmKGFlKWI6e3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25zdGFydFwiOnZhciBMPVwib25Db21wb3NpdGlvblN0YXJ0XCI7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpMPVwib25Db21wb3NpdGlvbkVuZFwiO2JyZWFrIGI7XG5jYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjpMPVwib25Db21wb3NpdGlvblVwZGF0ZVwiO2JyZWFrIGJ9TD12b2lkIDB9ZWxzZSBpZT9nZShhLGMpJiYoTD1cIm9uQ29tcG9zaXRpb25FbmRcIik6XCJrZXlkb3duXCI9PT1hJiYyMjk9PT1jLmtleUNvZGUmJihMPVwib25Db21wb3NpdGlvblN0YXJ0XCIpO0wmJihkZSYmXCJrb1wiIT09Yy5sb2NhbGUmJihpZXx8XCJvbkNvbXBvc2l0aW9uU3RhcnRcIiE9PUw/XCJvbkNvbXBvc2l0aW9uRW5kXCI9PT1MJiZpZSYmKFE9bmQoKSk6KGtkPWUsbGQ9XCJ2YWx1ZVwiaW4ga2Q/a2QudmFsdWU6a2QudGV4dENvbnRlbnQsaWU9ITApKSxLPW9lKGQsTCksMDxLLmxlbmd0aCYmKEw9bmV3IExkKEwsYSxudWxsLGMsZSksZy5wdXNoKHtldmVudDpMLGxpc3RlbmVyczpLfSksUT9MLmRhdGE9UTooUT1oZShjKSxudWxsIT09USYmKEwuZGF0YT1RKSkpKTtpZihRPWNlP2plKGEsYyk6a2UoYSxjKSlkPW9lKGQsXCJvbkJlZm9yZUlucHV0XCIpLDA8ZC5sZW5ndGgmJihlPW5ldyBMZChcIm9uQmVmb3JlSW5wdXRcIixcblwiYmVmb3JlaW5wdXRcIixudWxsLGMsZSksZy5wdXNoKHtldmVudDplLGxpc3RlbmVyczpkfSksZS5kYXRhPVEpfXNlKGcsYil9KX1mdW5jdGlvbiBlZihhLGIsYyl7cmV0dXJue2luc3RhbmNlOmEsbGlzdGVuZXI6YixjdXJyZW50VGFyZ2V0OmN9fWZ1bmN0aW9uIG9lKGEsYil7Zm9yKHZhciBjPWIrXCJDYXB0dXJlXCIsZD1bXTtudWxsIT09YTspe3ZhciBlPWEsZj1lLnN0YXRlTm9kZTs1PT09ZS50YWcmJm51bGwhPT1mJiYoZT1mLGY9T2IoYSxjKSxudWxsIT1mJiZkLnVuc2hpZnQoZWYoYSxmLGUpKSxmPU9iKGEsYiksbnVsbCE9ZiYmZC5wdXNoKGVmKGEsZixlKSkpO2E9YS5yZXR1cm59cmV0dXJuIGR9ZnVuY3Rpb24gZ2YoYSl7aWYobnVsbD09PWEpcmV0dXJuIG51bGw7ZG8gYT1hLnJldHVybjt3aGlsZShhJiY1IT09YS50YWcpO3JldHVybiBhP2E6bnVsbH1cbmZ1bmN0aW9uIGhmKGEsYixjLGQsZSl7Zm9yKHZhciBmPWIuX3JlYWN0TmFtZSxnPVtdO251bGwhPT1jJiZjIT09ZDspe3ZhciBoPWMsaz1oLmFsdGVybmF0ZSxsPWguc3RhdGVOb2RlO2lmKG51bGwhPT1rJiZrPT09ZClicmVhazs1PT09aC50YWcmJm51bGwhPT1sJiYoaD1sLGU/KGs9T2IoYyxmKSxudWxsIT1rJiZnLnVuc2hpZnQoZWYoYyxrLGgpKSk6ZXx8KGs9T2IoYyxmKSxudWxsIT1rJiZnLnB1c2goZWYoYyxrLGgpKSkpO2M9Yy5yZXR1cm59MCE9PWcubGVuZ3RoJiZhLnB1c2goe2V2ZW50OmIsbGlzdGVuZXJzOmd9KX1mdW5jdGlvbiBqZigpe312YXIga2Y9bnVsbCxsZj1udWxsO2Z1bmN0aW9uIG1mKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJidXR0b25cIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInRleHRhcmVhXCI6cmV0dXJuISFiLmF1dG9Gb2N1c31yZXR1cm4hMX1cbmZ1bmN0aW9uIG5mKGEsYil7cmV0dXJuXCJ0ZXh0YXJlYVwiPT09YXx8XCJvcHRpb25cIj09PWF8fFwibm9zY3JpcHRcIj09PWF8fFwic3RyaW5nXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJudW1iZXJcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MLl9faHRtbH12YXIgb2Y9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAscGY9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwO2Z1bmN0aW9uIHFmKGEpezE9PT1hLm5vZGVUeXBlP2EudGV4dENvbnRlbnQ9XCJcIjo5PT09YS5ub2RlVHlwZSYmKGE9YS5ib2R5LG51bGwhPWEmJihhLnRleHRDb250ZW50PVwiXCIpKX1cbmZ1bmN0aW9uIHJmKGEpe2Zvcig7bnVsbCE9YTthPWEubmV4dFNpYmxpbmcpe3ZhciBiPWEubm9kZVR5cGU7aWYoMT09PWJ8fDM9PT1iKWJyZWFrfXJldHVybiBhfWZ1bmN0aW9uIHNmKGEpe2E9YS5wcmV2aW91c1NpYmxpbmc7Zm9yKHZhciBiPTA7YTspe2lmKDg9PT1hLm5vZGVUeXBlKXt2YXIgYz1hLmRhdGE7aWYoXCIkXCI9PT1jfHxcIiQhXCI9PT1jfHxcIiQ/XCI9PT1jKXtpZigwPT09YilyZXR1cm4gYTtiLS19ZWxzZVwiLyRcIj09PWMmJmIrK31hPWEucHJldmlvdXNTaWJsaW5nfXJldHVybiBudWxsfXZhciB0Zj0wO2Z1bmN0aW9uIHVmKGEpe3JldHVybnskJHR5cGVvZjpHYSx0b1N0cmluZzphLHZhbHVlT2Y6YX19dmFyIHZmPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpLHdmPVwiX19yZWFjdEZpYmVyJFwiK3ZmLHhmPVwiX19yZWFjdFByb3BzJFwiK3ZmLGZmPVwiX19yZWFjdENvbnRhaW5lciRcIit2Zix5Zj1cIl9fcmVhY3RFdmVudHMkXCIrdmY7XG5mdW5jdGlvbiB3YyhhKXt2YXIgYj1hW3dmXTtpZihiKXJldHVybiBiO2Zvcih2YXIgYz1hLnBhcmVudE5vZGU7Yzspe2lmKGI9Y1tmZl18fGNbd2ZdKXtjPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1iLmNoaWxkfHxudWxsIT09YyYmbnVsbCE9PWMuY2hpbGQpZm9yKGE9c2YoYSk7bnVsbCE9PWE7KXtpZihjPWFbd2ZdKXJldHVybiBjO2E9c2YoYSl9cmV0dXJuIGJ9YT1jO2M9YS5wYXJlbnROb2RlfXJldHVybiBudWxsfWZ1bmN0aW9uIENiKGEpe2E9YVt3Zl18fGFbZmZdO3JldHVybiFhfHw1IT09YS50YWcmJjYhPT1hLnRhZyYmMTMhPT1hLnRhZyYmMyE9PWEudGFnP251bGw6YX1mdW5jdGlvbiB1ZShhKXtpZig1PT09YS50YWd8fDY9PT1hLnRhZylyZXR1cm4gYS5zdGF0ZU5vZGU7dGhyb3cgRXJyb3IoeSgzMykpO31mdW5jdGlvbiBEYihhKXtyZXR1cm4gYVt4Zl18fG51bGx9XG5mdW5jdGlvbiAkZShhKXt2YXIgYj1hW3lmXTt2b2lkIDA9PT1iJiYoYj1hW3lmXT1uZXcgU2V0KTtyZXR1cm4gYn12YXIgemY9W10sQWY9LTE7ZnVuY3Rpb24gQmYoYSl7cmV0dXJue2N1cnJlbnQ6YX19ZnVuY3Rpb24gSChhKXswPkFmfHwoYS5jdXJyZW50PXpmW0FmXSx6ZltBZl09bnVsbCxBZi0tKX1mdW5jdGlvbiBJKGEsYil7QWYrKzt6ZltBZl09YS5jdXJyZW50O2EuY3VycmVudD1ifXZhciBDZj17fSxNPUJmKENmKSxOPUJmKCExKSxEZj1DZjtcbmZ1bmN0aW9uIEVmKGEsYil7dmFyIGM9YS50eXBlLmNvbnRleHRUeXBlcztpZighYylyZXR1cm4gQ2Y7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoZCYmZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PT09YilyZXR1cm4gZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dDt2YXIgZT17fSxmO2ZvcihmIGluIGMpZVtmXT1iW2ZdO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1iLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9ZSk7cmV0dXJuIGV9ZnVuY3Rpb24gRmYoYSl7YT1hLmNoaWxkQ29udGV4dFR5cGVzO3JldHVybiBudWxsIT09YSYmdm9pZCAwIT09YX1mdW5jdGlvbiBHZigpe0goTik7SChNKX1mdW5jdGlvbiBIZihhLGIsYyl7aWYoTS5jdXJyZW50IT09Q2YpdGhyb3cgRXJyb3IoeSgxNjgpKTtJKE0sYik7SShOLGMpfVxuZnVuY3Rpb24gSWYoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2E9Yi5jaGlsZENvbnRleHRUeXBlcztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5nZXRDaGlsZENvbnRleHQpcmV0dXJuIGM7ZD1kLmdldENoaWxkQ29udGV4dCgpO2Zvcih2YXIgZSBpbiBkKWlmKCEoZSBpbiBhKSl0aHJvdyBFcnJvcih5KDEwOCxSYShiKXx8XCJVbmtub3duXCIsZSkpO3JldHVybiBtKHt9LGMsZCl9ZnVuY3Rpb24gSmYoYSl7YT0oYT1hLnN0YXRlTm9kZSkmJmEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHR8fENmO0RmPU0uY3VycmVudDtJKE0sYSk7SShOLE4uY3VycmVudCk7cmV0dXJuITB9ZnVuY3Rpb24gS2YoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2lmKCFkKXRocm93IEVycm9yKHkoMTY5KSk7Yz8oYT1JZihhLGIsRGYpLGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ9YSxIKE4pLEgoTSksSShNLGEpKTpIKE4pO0koTixjKX1cbnZhciBMZj1udWxsLE1mPW51bGwsTmY9ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHksT2Y9ci51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrLFBmPXIudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2ssUWY9ci51bnN0YWJsZV9zaG91bGRZaWVsZCxSZj1yLnVuc3RhYmxlX3JlcXVlc3RQYWludCxTZj1yLnVuc3RhYmxlX25vdyxUZj1yLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsLFVmPXIudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHksVmY9ci51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxXZj1yLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5LFhmPXIudW5zdGFibGVfTG93UHJpb3JpdHksWWY9ci51bnN0YWJsZV9JZGxlUHJpb3JpdHksWmY9e30sJGY9dm9pZCAwIT09UmY/UmY6ZnVuY3Rpb24oKXt9LGFnPW51bGwsYmc9bnVsbCxjZz0hMSxkZz1TZigpLE89MUU0PmRnP1NmOmZ1bmN0aW9uKCl7cmV0dXJuIFNmKCktZGd9O1xuZnVuY3Rpb24gZWcoKXtzd2l0Y2goVGYoKSl7Y2FzZSBVZjpyZXR1cm4gOTk7Y2FzZSBWZjpyZXR1cm4gOTg7Y2FzZSBXZjpyZXR1cm4gOTc7Y2FzZSBYZjpyZXR1cm4gOTY7Y2FzZSBZZjpyZXR1cm4gOTU7ZGVmYXVsdDp0aHJvdyBFcnJvcih5KDMzMikpO319ZnVuY3Rpb24gZmcoYSl7c3dpdGNoKGEpe2Nhc2UgOTk6cmV0dXJuIFVmO2Nhc2UgOTg6cmV0dXJuIFZmO2Nhc2UgOTc6cmV0dXJuIFdmO2Nhc2UgOTY6cmV0dXJuIFhmO2Nhc2UgOTU6cmV0dXJuIFlmO2RlZmF1bHQ6dGhyb3cgRXJyb3IoeSgzMzIpKTt9fWZ1bmN0aW9uIGdnKGEsYil7YT1mZyhhKTtyZXR1cm4gTmYoYSxiKX1mdW5jdGlvbiBoZyhhLGIsYyl7YT1mZyhhKTtyZXR1cm4gT2YoYSxiLGMpfWZ1bmN0aW9uIGlnKCl7aWYobnVsbCE9PWJnKXt2YXIgYT1iZztiZz1udWxsO1BmKGEpfWpnKCl9XG5mdW5jdGlvbiBqZygpe2lmKCFjZyYmbnVsbCE9PWFnKXtjZz0hMDt2YXIgYT0wO3RyeXt2YXIgYj1hZztnZyg5OSxmdW5jdGlvbigpe2Zvcig7YTxiLmxlbmd0aDthKyspe3ZhciBjPWJbYV07ZG8gYz1jKCEwKTt3aGlsZShudWxsIT09Yyl9fSk7YWc9bnVsbH1jYXRjaChjKXt0aHJvdyBudWxsIT09YWcmJihhZz1hZy5zbGljZShhKzEpKSxPZihVZixpZyksYzt9ZmluYWxseXtjZz0hMX19fXZhciBrZz1yYS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZztmdW5jdGlvbiBsZyhhLGIpe2lmKGEmJmEuZGVmYXVsdFByb3BzKXtiPW0oe30sYik7YT1hLmRlZmF1bHRQcm9wcztmb3IodmFyIGMgaW4gYSl2b2lkIDA9PT1iW2NdJiYoYltjXT1hW2NdKTtyZXR1cm4gYn1yZXR1cm4gYn12YXIgbWc9QmYobnVsbCksbmc9bnVsbCxvZz1udWxsLHBnPW51bGw7ZnVuY3Rpb24gcWcoKXtwZz1vZz1uZz1udWxsfVxuZnVuY3Rpb24gcmcoYSl7dmFyIGI9bWcuY3VycmVudDtIKG1nKTthLnR5cGUuX2NvbnRleHQuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIHNnKGEsYil7Zm9yKDtudWxsIT09YTspe3ZhciBjPWEuYWx0ZXJuYXRlO2lmKChhLmNoaWxkTGFuZXMmYik9PT1iKWlmKG51bGw9PT1jfHwoYy5jaGlsZExhbmVzJmIpPT09YilicmVhaztlbHNlIGMuY2hpbGRMYW5lc3w9YjtlbHNlIGEuY2hpbGRMYW5lc3w9YixudWxsIT09YyYmKGMuY2hpbGRMYW5lc3w9Yik7YT1hLnJldHVybn19ZnVuY3Rpb24gdGcoYSxiKXtuZz1hO3BnPW9nPW51bGw7YT1hLmRlcGVuZGVuY2llcztudWxsIT09YSYmbnVsbCE9PWEuZmlyc3RDb250ZXh0JiYoMCE9PShhLmxhbmVzJmIpJiYodWc9ITApLGEuZmlyc3RDb250ZXh0PW51bGwpfVxuZnVuY3Rpb24gdmcoYSxiKXtpZihwZyE9PWEmJiExIT09YiYmMCE9PWIpe2lmKFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MTA3Mzc0MTgyMz09PWIpcGc9YSxiPTEwNzM3NDE4MjM7Yj17Y29udGV4dDphLG9ic2VydmVkQml0czpiLG5leHQ6bnVsbH07aWYobnVsbD09PW9nKXtpZihudWxsPT09bmcpdGhyb3cgRXJyb3IoeSgzMDgpKTtvZz1iO25nLmRlcGVuZGVuY2llcz17bGFuZXM6MCxmaXJzdENvbnRleHQ6YixyZXNwb25kZXJzOm51bGx9fWVsc2Ugb2c9b2cubmV4dD1ifXJldHVybiBhLl9jdXJyZW50VmFsdWV9dmFyIHdnPSExO2Z1bmN0aW9uIHhnKGEpe2EudXBkYXRlUXVldWU9e2Jhc2VTdGF0ZTphLm1lbW9pemVkU3RhdGUsZmlyc3RCYXNlVXBkYXRlOm51bGwsbGFzdEJhc2VVcGRhdGU6bnVsbCxzaGFyZWQ6e3BlbmRpbmc6bnVsbH0sZWZmZWN0czpudWxsfX1cbmZ1bmN0aW9uIHlnKGEsYil7YT1hLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9PT1hJiYoYi51cGRhdGVRdWV1ZT17YmFzZVN0YXRlOmEuYmFzZVN0YXRlLGZpcnN0QmFzZVVwZGF0ZTphLmZpcnN0QmFzZVVwZGF0ZSxsYXN0QmFzZVVwZGF0ZTphLmxhc3RCYXNlVXBkYXRlLHNoYXJlZDphLnNoYXJlZCxlZmZlY3RzOmEuZWZmZWN0c30pfWZ1bmN0aW9uIHpnKGEsYil7cmV0dXJue2V2ZW50VGltZTphLGxhbmU6Yix0YWc6MCxwYXlsb2FkOm51bGwsY2FsbGJhY2s6bnVsbCxuZXh0Om51bGx9fWZ1bmN0aW9uIEFnKGEsYil7YT1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1hKXthPWEuc2hhcmVkO3ZhciBjPWEucGVuZGluZztudWxsPT09Yz9iLm5leHQ9YjooYi5uZXh0PWMubmV4dCxjLm5leHQ9Yik7YS5wZW5kaW5nPWJ9fVxuZnVuY3Rpb24gQmcoYSxiKXt2YXIgYz1hLnVwZGF0ZVF1ZXVlLGQ9YS5hbHRlcm5hdGU7aWYobnVsbCE9PWQmJihkPWQudXBkYXRlUXVldWUsYz09PWQpKXt2YXIgZT1udWxsLGY9bnVsbDtjPWMuZmlyc3RCYXNlVXBkYXRlO2lmKG51bGwhPT1jKXtkb3t2YXIgZz17ZXZlbnRUaW1lOmMuZXZlbnRUaW1lLGxhbmU6Yy5sYW5lLHRhZzpjLnRhZyxwYXlsb2FkOmMucGF5bG9hZCxjYWxsYmFjazpjLmNhbGxiYWNrLG5leHQ6bnVsbH07bnVsbD09PWY/ZT1mPWc6Zj1mLm5leHQ9ZztjPWMubmV4dH13aGlsZShudWxsIT09Yyk7bnVsbD09PWY/ZT1mPWI6Zj1mLm5leHQ9Yn1lbHNlIGU9Zj1iO2M9e2Jhc2VTdGF0ZTpkLmJhc2VTdGF0ZSxmaXJzdEJhc2VVcGRhdGU6ZSxsYXN0QmFzZVVwZGF0ZTpmLHNoYXJlZDpkLnNoYXJlZCxlZmZlY3RzOmQuZWZmZWN0c307YS51cGRhdGVRdWV1ZT1jO3JldHVybn1hPWMubGFzdEJhc2VVcGRhdGU7bnVsbD09PWE/Yy5maXJzdEJhc2VVcGRhdGU9YjphLm5leHQ9XG5iO2MubGFzdEJhc2VVcGRhdGU9Yn1cbmZ1bmN0aW9uIENnKGEsYixjLGQpe3ZhciBlPWEudXBkYXRlUXVldWU7d2c9ITE7dmFyIGY9ZS5maXJzdEJhc2VVcGRhdGUsZz1lLmxhc3RCYXNlVXBkYXRlLGg9ZS5zaGFyZWQucGVuZGluZztpZihudWxsIT09aCl7ZS5zaGFyZWQucGVuZGluZz1udWxsO3ZhciBrPWgsbD1rLm5leHQ7ay5uZXh0PW51bGw7bnVsbD09PWc/Zj1sOmcubmV4dD1sO2c9azt2YXIgbj1hLmFsdGVybmF0ZTtpZihudWxsIT09bil7bj1uLnVwZGF0ZVF1ZXVlO3ZhciBBPW4ubGFzdEJhc2VVcGRhdGU7QSE9PWcmJihudWxsPT09QT9uLmZpcnN0QmFzZVVwZGF0ZT1sOkEubmV4dD1sLG4ubGFzdEJhc2VVcGRhdGU9ayl9fWlmKG51bGwhPT1mKXtBPWUuYmFzZVN0YXRlO2c9MDtuPWw9az1udWxsO2Rve2g9Zi5sYW5lO3ZhciBwPWYuZXZlbnRUaW1lO2lmKChkJmgpPT09aCl7bnVsbCE9PW4mJihuPW4ubmV4dD17ZXZlbnRUaW1lOnAsbGFuZTowLHRhZzpmLnRhZyxwYXlsb2FkOmYucGF5bG9hZCxjYWxsYmFjazpmLmNhbGxiYWNrLFxubmV4dDpudWxsfSk7YTp7dmFyIEM9YSx4PWY7aD1iO3A9Yztzd2l0Y2goeC50YWcpe2Nhc2UgMTpDPXgucGF5bG9hZDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgQyl7QT1DLmNhbGwocCxBLGgpO2JyZWFrIGF9QT1DO2JyZWFrIGE7Y2FzZSAzOkMuZmxhZ3M9Qy5mbGFncyYtNDA5N3w2NDtjYXNlIDA6Qz14LnBheWxvYWQ7aD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgQz9DLmNhbGwocCxBLGgpOkM7aWYobnVsbD09PWh8fHZvaWQgMD09PWgpYnJlYWsgYTtBPW0oe30sQSxoKTticmVhayBhO2Nhc2UgMjp3Zz0hMH19bnVsbCE9PWYuY2FsbGJhY2smJihhLmZsYWdzfD0zMixoPWUuZWZmZWN0cyxudWxsPT09aD9lLmVmZmVjdHM9W2ZdOmgucHVzaChmKSl9ZWxzZSBwPXtldmVudFRpbWU6cCxsYW5lOmgsdGFnOmYudGFnLHBheWxvYWQ6Zi5wYXlsb2FkLGNhbGxiYWNrOmYuY2FsbGJhY2ssbmV4dDpudWxsfSxudWxsPT09bj8obD1uPXAsaz1BKTpuPW4ubmV4dD1wLGd8PWg7Zj1mLm5leHQ7aWYobnVsbD09PVxuZilpZihoPWUuc2hhcmVkLnBlbmRpbmcsbnVsbD09PWgpYnJlYWs7ZWxzZSBmPWgubmV4dCxoLm5leHQ9bnVsbCxlLmxhc3RCYXNlVXBkYXRlPWgsZS5zaGFyZWQucGVuZGluZz1udWxsfXdoaWxlKDEpO251bGw9PT1uJiYoaz1BKTtlLmJhc2VTdGF0ZT1rO2UuZmlyc3RCYXNlVXBkYXRlPWw7ZS5sYXN0QmFzZVVwZGF0ZT1uO0RnfD1nO2EubGFuZXM9ZzthLm1lbW9pemVkU3RhdGU9QX19ZnVuY3Rpb24gRWcoYSxiLGMpe2E9Yi5lZmZlY3RzO2IuZWZmZWN0cz1udWxsO2lmKG51bGwhPT1hKWZvcihiPTA7YjxhLmxlbmd0aDtiKyspe3ZhciBkPWFbYl0sZT1kLmNhbGxiYWNrO2lmKG51bGwhPT1lKXtkLmNhbGxiYWNrPW51bGw7ZD1jO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlKXRocm93IEVycm9yKHkoMTkxLGUpKTtlLmNhbGwoZCl9fX12YXIgRmc9KG5ldyBhYS5Db21wb25lbnQpLnJlZnM7XG5mdW5jdGlvbiBHZyhhLGIsYyxkKXtiPWEubWVtb2l6ZWRTdGF0ZTtjPWMoZCxiKTtjPW51bGw9PT1jfHx2b2lkIDA9PT1jP2I6bSh7fSxiLGMpO2EubWVtb2l6ZWRTdGF0ZT1jOzA9PT1hLmxhbmVzJiYoYS51cGRhdGVRdWV1ZS5iYXNlU3RhdGU9Yyl9XG52YXIgS2c9e2lzTW91bnRlZDpmdW5jdGlvbihhKXtyZXR1cm4oYT1hLl9yZWFjdEludGVybmFscyk/WmIoYSk9PT1hOiExfSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbHM7dmFyIGQ9SGcoKSxlPUlnKGEpLGY9emcoZCxlKTtmLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGYuY2FsbGJhY2s9Yyk7QWcoYSxmKTtKZyhhLGUsZCl9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbHM7dmFyIGQ9SGcoKSxlPUlnKGEpLGY9emcoZCxlKTtmLnRhZz0xO2YucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZi5jYWxsYmFjaz1jKTtBZyhhLGYpO0pnKGEsZSxkKX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKGEsYil7YT1hLl9yZWFjdEludGVybmFsczt2YXIgYz1IZygpLGQ9SWcoYSksZT16ZyhjLGQpO2UudGFnPTI7dm9pZCAwIT09YiYmbnVsbCE9PWImJihlLmNhbGxiYWNrPVxuYik7QWcoYSxlKTtKZyhhLGQsYyl9fTtmdW5jdGlvbiBMZyhhLGIsYyxkLGUsZixnKXthPWEuc3RhdGVOb2RlO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnNob3VsZENvbXBvbmVudFVwZGF0ZT9hLnNob3VsZENvbXBvbmVudFVwZGF0ZShkLGYsZyk6Yi5wcm90b3R5cGUmJmIucHJvdG90eXBlLmlzUHVyZVJlYWN0Q29tcG9uZW50PyFKZShjLGQpfHwhSmUoZSxmKTohMH1cbmZ1bmN0aW9uIE1nKGEsYixjKXt2YXIgZD0hMSxlPUNmO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9mPXZnKGYpOihlPUZmKGIpP0RmOk0uY3VycmVudCxkPWIuY29udGV4dFR5cGVzLGY9KGQ9bnVsbCE9PWQmJnZvaWQgMCE9PWQpP0VmKGEsZSk6Q2YpO2I9bmV3IGIoYyxmKTthLm1lbW9pemVkU3RhdGU9bnVsbCE9PWIuc3RhdGUmJnZvaWQgMCE9PWIuc3RhdGU/Yi5zdGF0ZTpudWxsO2IudXBkYXRlcj1LZzthLnN0YXRlTm9kZT1iO2IuX3JlYWN0SW50ZXJuYWxzPWE7ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1mKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIE5nKGEsYixjLGQpe2E9Yi5zdGF0ZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO2Iuc3RhdGUhPT1hJiZLZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGIsYi5zdGF0ZSxudWxsKX1cbmZ1bmN0aW9uIE9nKGEsYixjLGQpe3ZhciBlPWEuc3RhdGVOb2RlO2UucHJvcHM9YztlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtlLnJlZnM9Rmc7eGcoYSk7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2UuY29udGV4dD12ZyhmKTooZj1GZihiKT9EZjpNLmN1cnJlbnQsZS5jb250ZXh0PUVmKGEsZikpO0NnKGEsYyxlLGQpO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2Y9Yi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGYmJihHZyhhLGIsZixjKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50fHxcbihiPWUuc3RhdGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50JiZlLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpLGIhPT1lLnN0YXRlJiZLZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGUsZS5zdGF0ZSxudWxsKSxDZyhhLGMsZSxkKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50RGlkTW91bnQmJihhLmZsYWdzfD00KX12YXIgUGc9QXJyYXkuaXNBcnJheTtcbmZ1bmN0aW9uIFFnKGEsYixjKXthPWMucmVmO2lmKG51bGwhPT1hJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmXCJvYmplY3RcIiE9PXR5cGVvZiBhKXtpZihjLl9vd25lcil7Yz1jLl9vd25lcjtpZihjKXtpZigxIT09Yy50YWcpdGhyb3cgRXJyb3IoeSgzMDkpKTt2YXIgZD1jLnN0YXRlTm9kZX1pZighZCl0aHJvdyBFcnJvcih5KDE0NyxhKSk7dmFyIGU9XCJcIithO2lmKG51bGwhPT1iJiZudWxsIT09Yi5yZWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLnJlZiYmYi5yZWYuX3N0cmluZ1JlZj09PWUpcmV0dXJuIGIucmVmO2I9ZnVuY3Rpb24oYSl7dmFyIGI9ZC5yZWZzO2I9PT1GZyYmKGI9ZC5yZWZzPXt9KTtudWxsPT09YT9kZWxldGUgYltlXTpiW2VdPWF9O2IuX3N0cmluZ1JlZj1lO3JldHVybiBifWlmKFwic3RyaW5nXCIhPT10eXBlb2YgYSl0aHJvdyBFcnJvcih5KDI4NCkpO2lmKCFjLl9vd25lcil0aHJvdyBFcnJvcih5KDI5MCxhKSk7fXJldHVybiBhfVxuZnVuY3Rpb24gUmcoYSxiKXtpZihcInRleHRhcmVhXCIhPT1hLnR5cGUpdGhyb3cgRXJyb3IoeSgzMSxcIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGIpP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYikuam9pbihcIiwgXCIpK1wifVwiOmIpKTt9XG5mdW5jdGlvbiBTZyhhKXtmdW5jdGlvbiBiKGIsYyl7aWYoYSl7dmFyIGQ9Yi5sYXN0RWZmZWN0O251bGwhPT1kPyhkLm5leHRFZmZlY3Q9YyxiLmxhc3RFZmZlY3Q9Yyk6Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9YztjLm5leHRFZmZlY3Q9bnVsbDtjLmZsYWdzPTh9fWZ1bmN0aW9uIGMoYyxkKXtpZighYSlyZXR1cm4gbnVsbDtmb3IoO251bGwhPT1kOyliKGMsZCksZD1kLnNpYmxpbmc7cmV0dXJuIG51bGx9ZnVuY3Rpb24gZChhLGIpe2ZvcihhPW5ldyBNYXA7bnVsbCE9PWI7KW51bGwhPT1iLmtleT9hLnNldChiLmtleSxiKTphLnNldChiLmluZGV4LGIpLGI9Yi5zaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIGUoYSxiKXthPVRnKGEsYik7YS5pbmRleD0wO2Euc2libGluZz1udWxsO3JldHVybiBhfWZ1bmN0aW9uIGYoYixjLGQpe2IuaW5kZXg9ZDtpZighYSlyZXR1cm4gYztkPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1kKXJldHVybiBkPWQuaW5kZXgsZDxjPyhiLmZsYWdzPTIsXG5jKTpkO2IuZmxhZ3M9MjtyZXR1cm4gY31mdW5jdGlvbiBnKGIpe2EmJm51bGw9PT1iLmFsdGVybmF0ZSYmKGIuZmxhZ3M9Mik7cmV0dXJuIGJ9ZnVuY3Rpb24gaChhLGIsYyxkKXtpZihudWxsPT09Ynx8NiE9PWIudGFnKXJldHVybiBiPVVnKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIGsoYSxiLGMsZCl7aWYobnVsbCE9PWImJmIuZWxlbWVudFR5cGU9PT1jLnR5cGUpcmV0dXJuIGQ9ZShiLGMucHJvcHMpLGQucmVmPVFnKGEsYixjKSxkLnJldHVybj1hLGQ7ZD1WZyhjLnR5cGUsYy5rZXksYy5wcm9wcyxudWxsLGEubW9kZSxkKTtkLnJlZj1RZyhhLGIsYyk7ZC5yZXR1cm49YTtyZXR1cm4gZH1mdW5jdGlvbiBsKGEsYixjLGQpe2lmKG51bGw9PT1ifHw0IT09Yi50YWd8fGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8hPT1jLmNvbnRhaW5lckluZm98fGIuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uIT09Yy5pbXBsZW1lbnRhdGlvbilyZXR1cm4gYj1cbldnKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjLmNoaWxkcmVufHxbXSk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBuKGEsYixjLGQsZil7aWYobnVsbD09PWJ8fDchPT1iLnRhZylyZXR1cm4gYj1YZyhjLGEubW9kZSxkLGYpLGIucmV0dXJuPWEsYjtiPWUoYixjKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIEEoYSxiLGMpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYnx8XCJudW1iZXJcIj09PXR5cGVvZiBiKXJldHVybiBiPVVnKFwiXCIrYixhLm1vZGUsYyksYi5yZXR1cm49YSxiO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWIpe3N3aXRjaChiLiQkdHlwZW9mKXtjYXNlIHNhOnJldHVybiBjPVZnKGIudHlwZSxiLmtleSxiLnByb3BzLG51bGwsYS5tb2RlLGMpLGMucmVmPVFnKGEsbnVsbCxiKSxjLnJldHVybj1hLGM7Y2FzZSB0YTpyZXR1cm4gYj1XZyhiLGEubW9kZSxjKSxiLnJldHVybj1hLGJ9aWYoUGcoYil8fExhKGIpKXJldHVybiBiPVhnKGIsXG5hLm1vZGUsYyxudWxsKSxiLnJldHVybj1hLGI7UmcoYSxiKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBwKGEsYixjLGQpe3ZhciBlPW51bGwhPT1iP2Iua2V5Om51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBjfHxcIm51bWJlclwiPT09dHlwZW9mIGMpcmV0dXJuIG51bGwhPT1lP251bGw6aChhLGIsXCJcIitjLGQpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWMpe3N3aXRjaChjLiQkdHlwZW9mKXtjYXNlIHNhOnJldHVybiBjLmtleT09PWU/Yy50eXBlPT09dWE/bihhLGIsYy5wcm9wcy5jaGlsZHJlbixkLGUpOmsoYSxiLGMsZCk6bnVsbDtjYXNlIHRhOnJldHVybiBjLmtleT09PWU/bChhLGIsYyxkKTpudWxsfWlmKFBnKGMpfHxMYShjKSlyZXR1cm4gbnVsbCE9PWU/bnVsbDpuKGEsYixjLGQsbnVsbCk7UmcoYSxjKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBDKGEsYixjLGQsZSl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBkfHxcIm51bWJlclwiPT09dHlwZW9mIGQpcmV0dXJuIGE9YS5nZXQoYyl8fFxubnVsbCxoKGIsYSxcIlwiK2QsZSk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZCl7c3dpdGNoKGQuJCR0eXBlb2Ype2Nhc2Ugc2E6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGQudHlwZT09PXVhP24oYixhLGQucHJvcHMuY2hpbGRyZW4sZSxkLmtleSk6ayhiLGEsZCxlKTtjYXNlIHRhOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxsKGIsYSxkLGUpfWlmKFBnKGQpfHxMYShkKSlyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxuKGIsYSxkLGUsbnVsbCk7UmcoYixkKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB4KGUsZyxoLGspe2Zvcih2YXIgbD1udWxsLHQ9bnVsbCx1PWcsej1nPTAscT1udWxsO251bGwhPT11JiZ6PGgubGVuZ3RoO3orKyl7dS5pbmRleD56PyhxPXUsdT1udWxsKTpxPXUuc2libGluZzt2YXIgbj1wKGUsdSxoW3pdLGspO2lmKG51bGw9PT1uKXtudWxsPT09dSYmKHU9cSk7YnJlYWt9YSYmdSYmbnVsbD09PVxubi5hbHRlcm5hdGUmJmIoZSx1KTtnPWYobixnLHopO251bGw9PT10P2w9bjp0LnNpYmxpbmc9bjt0PW47dT1xfWlmKHo9PT1oLmxlbmd0aClyZXR1cm4gYyhlLHUpLGw7aWYobnVsbD09PXUpe2Zvcig7ejxoLmxlbmd0aDt6KyspdT1BKGUsaFt6XSxrKSxudWxsIT09dSYmKGc9Zih1LGcseiksbnVsbD09PXQ/bD11OnQuc2libGluZz11LHQ9dSk7cmV0dXJuIGx9Zm9yKHU9ZChlLHUpO3o8aC5sZW5ndGg7eisrKXE9Qyh1LGUseixoW3pdLGspLG51bGwhPT1xJiYoYSYmbnVsbCE9PXEuYWx0ZXJuYXRlJiZ1LmRlbGV0ZShudWxsPT09cS5rZXk/ejpxLmtleSksZz1mKHEsZyx6KSxudWxsPT09dD9sPXE6dC5zaWJsaW5nPXEsdD1xKTthJiZ1LmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfWZ1bmN0aW9uIHcoZSxnLGgsayl7dmFyIGw9TGEoaCk7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGwpdGhyb3cgRXJyb3IoeSgxNTApKTtoPWwuY2FsbChoKTtpZihudWxsPT1cbmgpdGhyb3cgRXJyb3IoeSgxNTEpKTtmb3IodmFyIHQ9bD1udWxsLHU9Zyx6PWc9MCxxPW51bGwsbj1oLm5leHQoKTtudWxsIT09dSYmIW4uZG9uZTt6Kyssbj1oLm5leHQoKSl7dS5pbmRleD56PyhxPXUsdT1udWxsKTpxPXUuc2libGluZzt2YXIgdz1wKGUsdSxuLnZhbHVlLGspO2lmKG51bGw9PT13KXtudWxsPT09dSYmKHU9cSk7YnJlYWt9YSYmdSYmbnVsbD09PXcuYWx0ZXJuYXRlJiZiKGUsdSk7Zz1mKHcsZyx6KTtudWxsPT09dD9sPXc6dC5zaWJsaW5nPXc7dD13O3U9cX1pZihuLmRvbmUpcmV0dXJuIGMoZSx1KSxsO2lmKG51bGw9PT11KXtmb3IoOyFuLmRvbmU7eisrLG49aC5uZXh0KCkpbj1BKGUsbi52YWx1ZSxrKSxudWxsIT09biYmKGc9ZihuLGcseiksbnVsbD09PXQ/bD1uOnQuc2libGluZz1uLHQ9bik7cmV0dXJuIGx9Zm9yKHU9ZChlLHUpOyFuLmRvbmU7eisrLG49aC5uZXh0KCkpbj1DKHUsZSx6LG4udmFsdWUsayksbnVsbCE9PW4mJihhJiZudWxsIT09bi5hbHRlcm5hdGUmJlxudS5kZWxldGUobnVsbD09PW4ua2V5P3o6bi5rZXkpLGc9ZihuLGcseiksbnVsbD09PXQ/bD1uOnQuc2libGluZz1uLHQ9bik7YSYmdS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gbH1yZXR1cm4gZnVuY3Rpb24oYSxkLGYsaCl7dmFyIGs9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZiYmZi50eXBlPT09dWEmJm51bGw9PT1mLmtleTtrJiYoZj1mLnByb3BzLmNoaWxkcmVuKTt2YXIgbD1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mO2lmKGwpc3dpdGNoKGYuJCR0eXBlb2Ype2Nhc2Ugc2E6YTp7bD1mLmtleTtmb3Ioaz1kO251bGwhPT1rOyl7aWYoay5rZXk9PT1sKXtzd2l0Y2goay50YWcpe2Nhc2UgNzppZihmLnR5cGU9PT11YSl7YyhhLGsuc2libGluZyk7ZD1lKGssZi5wcm9wcy5jaGlsZHJlbik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1icmVhaztkZWZhdWx0OmlmKGsuZWxlbWVudFR5cGU9PT1mLnR5cGUpe2MoYSxrLnNpYmxpbmcpO1xuZD1lKGssZi5wcm9wcyk7ZC5yZWY9UWcoYSxrLGYpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9fWMoYSxrKTticmVha31lbHNlIGIoYSxrKTtrPWsuc2libGluZ31mLnR5cGU9PT11YT8oZD1YZyhmLnByb3BzLmNoaWxkcmVuLGEubW9kZSxoLGYua2V5KSxkLnJldHVybj1hLGE9ZCk6KGg9VmcoZi50eXBlLGYua2V5LGYucHJvcHMsbnVsbCxhLm1vZGUsaCksaC5yZWY9UWcoYSxkLGYpLGgucmV0dXJuPWEsYT1oKX1yZXR1cm4gZyhhKTtjYXNlIHRhOmE6e2ZvcihrPWYua2V5O251bGwhPT1kOyl7aWYoZC5rZXk9PT1rKWlmKDQ9PT1kLnRhZyYmZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbz09PWYuY29udGFpbmVySW5mbyYmZC5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb249PT1mLmltcGxlbWVudGF0aW9uKXtjKGEsZC5zaWJsaW5nKTtkPWUoZCxmLmNoaWxkcmVufHxbXSk7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxkKTticmVha31lbHNlIGIoYSxkKTtkPWQuc2libGluZ31kPVxuV2coZixhLm1vZGUsaCk7ZC5yZXR1cm49YTthPWR9cmV0dXJuIGcoYSl9aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBmfHxcIm51bWJlclwiPT09dHlwZW9mIGYpcmV0dXJuIGY9XCJcIitmLG51bGwhPT1kJiY2PT09ZC50YWc/KGMoYSxkLnNpYmxpbmcpLGQ9ZShkLGYpLGQucmV0dXJuPWEsYT1kKTooYyhhLGQpLGQ9VWcoZixhLm1vZGUsaCksZC5yZXR1cm49YSxhPWQpLGcoYSk7aWYoUGcoZikpcmV0dXJuIHgoYSxkLGYsaCk7aWYoTGEoZikpcmV0dXJuIHcoYSxkLGYsaCk7bCYmUmcoYSxmKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGYmJiFrKXN3aXRjaChhLnRhZyl7Y2FzZSAxOmNhc2UgMjI6Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTp0aHJvdyBFcnJvcih5KDE1MixSYShhLnR5cGUpfHxcIkNvbXBvbmVudFwiKSk7fXJldHVybiBjKGEsZCl9fXZhciBZZz1TZyghMCksWmc9U2coITEpLCRnPXt9LGFoPUJmKCRnKSxiaD1CZigkZyksY2g9QmYoJGcpO1xuZnVuY3Rpb24gZGgoYSl7aWYoYT09PSRnKXRocm93IEVycm9yKHkoMTc0KSk7cmV0dXJuIGF9ZnVuY3Rpb24gZWgoYSxiKXtJKGNoLGIpO0koYmgsYSk7SShhaCwkZyk7YT1iLm5vZGVUeXBlO3N3aXRjaChhKXtjYXNlIDk6Y2FzZSAxMTpiPShiPWIuZG9jdW1lbnRFbGVtZW50KT9iLm5hbWVzcGFjZVVSSTptYihudWxsLFwiXCIpO2JyZWFrO2RlZmF1bHQ6YT04PT09YT9iLnBhcmVudE5vZGU6YixiPWEubmFtZXNwYWNlVVJJfHxudWxsLGE9YS50YWdOYW1lLGI9bWIoYixhKX1IKGFoKTtJKGFoLGIpfWZ1bmN0aW9uIGZoKCl7SChhaCk7SChiaCk7SChjaCl9ZnVuY3Rpb24gZ2goYSl7ZGgoY2guY3VycmVudCk7dmFyIGI9ZGgoYWguY3VycmVudCk7dmFyIGM9bWIoYixhLnR5cGUpO2IhPT1jJiYoSShiaCxhKSxJKGFoLGMpKX1mdW5jdGlvbiBoaChhKXtiaC5jdXJyZW50PT09YSYmKEgoYWgpLEgoYmgpKX12YXIgUD1CZigwKTtcbmZ1bmN0aW9uIGloKGEpe2Zvcih2YXIgYj1hO251bGwhPT1iOyl7aWYoMTM9PT1iLnRhZyl7dmFyIGM9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1jJiYoYz1jLmRlaHlkcmF0ZWQsbnVsbD09PWN8fFwiJD9cIj09PWMuZGF0YXx8XCIkIVwiPT09Yy5kYXRhKSlyZXR1cm4gYn1lbHNlIGlmKDE5PT09Yi50YWcmJnZvaWQgMCE9PWIubWVtb2l6ZWRQcm9wcy5yZXZlYWxPcmRlcil7aWYoMCE9PShiLmZsYWdzJjY0KSlyZXR1cm4gYn1lbHNlIGlmKG51bGwhPT1iLmNoaWxkKXtiLmNoaWxkLnJldHVybj1iO2I9Yi5jaGlsZDtjb250aW51ZX1pZihiPT09YSlicmVhaztmb3IoO251bGw9PT1iLnNpYmxpbmc7KXtpZihudWxsPT09Yi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9cmV0dXJuIG51bGx9dmFyIGpoPW51bGwsa2g9bnVsbCxsaD0hMTtcbmZ1bmN0aW9uIG1oKGEsYil7dmFyIGM9bmgoNSxudWxsLG51bGwsMCk7Yy5lbGVtZW50VHlwZT1cIkRFTEVURURcIjtjLnR5cGU9XCJERUxFVEVEXCI7Yy5zdGF0ZU5vZGU9YjtjLnJldHVybj1hO2MuZmxhZ3M9ODtudWxsIT09YS5sYXN0RWZmZWN0PyhhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jLGEubGFzdEVmZmVjdD1jKTphLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1jfWZ1bmN0aW9uIG9oKGEsYil7c3dpdGNoKGEudGFnKXtjYXNlIDU6dmFyIGM9YS50eXBlO2I9MSE9PWIubm9kZVR5cGV8fGMudG9Mb3dlckNhc2UoKSE9PWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKT9udWxsOmI7cmV0dXJuIG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDY6cmV0dXJuIGI9XCJcIj09PWEucGVuZGluZ1Byb3BzfHwzIT09Yi5ub2RlVHlwZT9udWxsOmIsbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgMTM6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBwaChhKXtpZihsaCl7dmFyIGI9a2g7aWYoYil7dmFyIGM9YjtpZighb2goYSxiKSl7Yj1yZihjLm5leHRTaWJsaW5nKTtpZighYnx8IW9oKGEsYikpe2EuZmxhZ3M9YS5mbGFncyYtMTAyNXwyO2xoPSExO2poPWE7cmV0dXJufW1oKGpoLGMpfWpoPWE7a2g9cmYoYi5maXJzdENoaWxkKX1lbHNlIGEuZmxhZ3M9YS5mbGFncyYtMTAyNXwyLGxoPSExLGpoPWF9fWZ1bmN0aW9uIHFoKGEpe2ZvcihhPWEucmV0dXJuO251bGwhPT1hJiY1IT09YS50YWcmJjMhPT1hLnRhZyYmMTMhPT1hLnRhZzspYT1hLnJldHVybjtqaD1hfVxuZnVuY3Rpb24gcmgoYSl7aWYoYSE9PWpoKXJldHVybiExO2lmKCFsaClyZXR1cm4gcWgoYSksbGg9ITAsITE7dmFyIGI9YS50eXBlO2lmKDUhPT1hLnRhZ3x8XCJoZWFkXCIhPT1iJiZcImJvZHlcIiE9PWImJiFuZihiLGEubWVtb2l6ZWRQcm9wcykpZm9yKGI9a2g7YjspbWgoYSxiKSxiPXJmKGIubmV4dFNpYmxpbmcpO3FoKGEpO2lmKDEzPT09YS50YWcpe2E9YS5tZW1vaXplZFN0YXRlO2E9bnVsbCE9PWE/YS5kZWh5ZHJhdGVkOm51bGw7aWYoIWEpdGhyb3cgRXJyb3IoeSgzMTcpKTthOnthPWEubmV4dFNpYmxpbmc7Zm9yKGI9MDthOyl7aWYoOD09PWEubm9kZVR5cGUpe3ZhciBjPWEuZGF0YTtpZihcIi8kXCI9PT1jKXtpZigwPT09Yil7a2g9cmYoYS5uZXh0U2libGluZyk7YnJlYWsgYX1iLS19ZWxzZVwiJFwiIT09YyYmXCIkIVwiIT09YyYmXCIkP1wiIT09Y3x8YisrfWE9YS5uZXh0U2libGluZ31raD1udWxsfX1lbHNlIGtoPWpoP3JmKGEuc3RhdGVOb2RlLm5leHRTaWJsaW5nKTpudWxsO3JldHVybiEwfVxuZnVuY3Rpb24gc2goKXtraD1qaD1udWxsO2xoPSExfXZhciB0aD1bXTtmdW5jdGlvbiB1aCgpe2Zvcih2YXIgYT0wO2E8dGgubGVuZ3RoO2ErKyl0aFthXS5fd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeT1udWxsO3RoLmxlbmd0aD0wfXZhciB2aD1yYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLHdoPXJhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnLHhoPTAsUj1udWxsLFM9bnVsbCxUPW51bGwseWg9ITEsemg9ITE7ZnVuY3Rpb24gQWgoKXt0aHJvdyBFcnJvcih5KDMyMSkpO31mdW5jdGlvbiBCaChhLGIpe2lmKG51bGw9PT1iKXJldHVybiExO2Zvcih2YXIgYz0wO2M8Yi5sZW5ndGgmJmM8YS5sZW5ndGg7YysrKWlmKCFIZShhW2NdLGJbY10pKXJldHVybiExO3JldHVybiEwfVxuZnVuY3Rpb24gQ2goYSxiLGMsZCxlLGYpe3hoPWY7Uj1iO2IubWVtb2l6ZWRTdGF0ZT1udWxsO2IudXBkYXRlUXVldWU9bnVsbDtiLmxhbmVzPTA7dmguY3VycmVudD1udWxsPT09YXx8bnVsbD09PWEubWVtb2l6ZWRTdGF0ZT9EaDpFaDthPWMoZCxlKTtpZih6aCl7Zj0wO2Rve3poPSExO2lmKCEoMjU+ZikpdGhyb3cgRXJyb3IoeSgzMDEpKTtmKz0xO1Q9Uz1udWxsO2IudXBkYXRlUXVldWU9bnVsbDt2aC5jdXJyZW50PUZoO2E9YyhkLGUpfXdoaWxlKHpoKX12aC5jdXJyZW50PUdoO2I9bnVsbCE9PVMmJm51bGwhPT1TLm5leHQ7eGg9MDtUPVM9Uj1udWxsO3loPSExO2lmKGIpdGhyb3cgRXJyb3IoeSgzMDApKTtyZXR1cm4gYX1mdW5jdGlvbiBIaCgpe3ZhciBhPXttZW1vaXplZFN0YXRlOm51bGwsYmFzZVN0YXRlOm51bGwsYmFzZVF1ZXVlOm51bGwscXVldWU6bnVsbCxuZXh0Om51bGx9O251bGw9PT1UP1IubWVtb2l6ZWRTdGF0ZT1UPWE6VD1ULm5leHQ9YTtyZXR1cm4gVH1cbmZ1bmN0aW9uIEloKCl7aWYobnVsbD09PVMpe3ZhciBhPVIuYWx0ZXJuYXRlO2E9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGx9ZWxzZSBhPVMubmV4dDt2YXIgYj1udWxsPT09VD9SLm1lbW9pemVkU3RhdGU6VC5uZXh0O2lmKG51bGwhPT1iKVQ9YixTPWE7ZWxzZXtpZihudWxsPT09YSl0aHJvdyBFcnJvcih5KDMxMCkpO1M9YTthPXttZW1vaXplZFN0YXRlOlMubWVtb2l6ZWRTdGF0ZSxiYXNlU3RhdGU6Uy5iYXNlU3RhdGUsYmFzZVF1ZXVlOlMuYmFzZVF1ZXVlLHF1ZXVlOlMucXVldWUsbmV4dDpudWxsfTtudWxsPT09VD9SLm1lbW9pemVkU3RhdGU9VD1hOlQ9VC5uZXh0PWF9cmV0dXJuIFR9ZnVuY3Rpb24gSmgoYSxiKXtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYj9iKGEpOmJ9XG5mdW5jdGlvbiBLaChhKXt2YXIgYj1JaCgpLGM9Yi5xdWV1ZTtpZihudWxsPT09Yyl0aHJvdyBFcnJvcih5KDMxMSkpO2MubGFzdFJlbmRlcmVkUmVkdWNlcj1hO3ZhciBkPVMsZT1kLmJhc2VRdWV1ZSxmPWMucGVuZGluZztpZihudWxsIT09Zil7aWYobnVsbCE9PWUpe3ZhciBnPWUubmV4dDtlLm5leHQ9Zi5uZXh0O2YubmV4dD1nfWQuYmFzZVF1ZXVlPWU9ZjtjLnBlbmRpbmc9bnVsbH1pZihudWxsIT09ZSl7ZT1lLm5leHQ7ZD1kLmJhc2VTdGF0ZTt2YXIgaD1nPWY9bnVsbCxrPWU7ZG97dmFyIGw9ay5sYW5lO2lmKCh4aCZsKT09PWwpbnVsbCE9PWgmJihoPWgubmV4dD17bGFuZTowLGFjdGlvbjprLmFjdGlvbixlYWdlclJlZHVjZXI6ay5lYWdlclJlZHVjZXIsZWFnZXJTdGF0ZTprLmVhZ2VyU3RhdGUsbmV4dDpudWxsfSksZD1rLmVhZ2VyUmVkdWNlcj09PWE/ay5lYWdlclN0YXRlOmEoZCxrLmFjdGlvbik7ZWxzZXt2YXIgbj17bGFuZTpsLGFjdGlvbjprLmFjdGlvbixlYWdlclJlZHVjZXI6ay5lYWdlclJlZHVjZXIsXG5lYWdlclN0YXRlOmsuZWFnZXJTdGF0ZSxuZXh0Om51bGx9O251bGw9PT1oPyhnPWg9bixmPWQpOmg9aC5uZXh0PW47Ui5sYW5lc3w9bDtEZ3w9bH1rPWsubmV4dH13aGlsZShudWxsIT09ayYmayE9PWUpO251bGw9PT1oP2Y9ZDpoLm5leHQ9ZztIZShkLGIubWVtb2l6ZWRTdGF0ZSl8fCh1Zz0hMCk7Yi5tZW1vaXplZFN0YXRlPWQ7Yi5iYXNlU3RhdGU9ZjtiLmJhc2VRdWV1ZT1oO2MubGFzdFJlbmRlcmVkU3RhdGU9ZH1yZXR1cm5bYi5tZW1vaXplZFN0YXRlLGMuZGlzcGF0Y2hdfVxuZnVuY3Rpb24gTGgoYSl7dmFyIGI9SWgoKSxjPWIucXVldWU7aWYobnVsbD09PWMpdGhyb3cgRXJyb3IoeSgzMTEpKTtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTt2YXIgZD1jLmRpc3BhdGNoLGU9Yy5wZW5kaW5nLGY9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1lKXtjLnBlbmRpbmc9bnVsbDt2YXIgZz1lPWUubmV4dDtkbyBmPWEoZixnLmFjdGlvbiksZz1nLm5leHQ7d2hpbGUoZyE9PWUpO0hlKGYsYi5tZW1vaXplZFN0YXRlKXx8KHVnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZjtudWxsPT09Yi5iYXNlUXVldWUmJihiLmJhc2VTdGF0ZT1mKTtjLmxhc3RSZW5kZXJlZFN0YXRlPWZ9cmV0dXJuW2YsZF19XG5mdW5jdGlvbiBNaChhLGIsYyl7dmFyIGQ9Yi5fZ2V0VmVyc2lvbjtkPWQoYi5fc291cmNlKTt2YXIgZT1iLl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5O2lmKG51bGwhPT1lKWE9ZT09PWQ7ZWxzZSBpZihhPWEubXV0YWJsZVJlYWRMYW5lcyxhPSh4aCZhKT09PWEpYi5fd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeT1kLHRoLnB1c2goYik7aWYoYSlyZXR1cm4gYyhiLl9zb3VyY2UpO3RoLnB1c2goYik7dGhyb3cgRXJyb3IoeSgzNTApKTt9XG5mdW5jdGlvbiBOaChhLGIsYyxkKXt2YXIgZT1VO2lmKG51bGw9PT1lKXRocm93IEVycm9yKHkoMzQ5KSk7dmFyIGY9Yi5fZ2V0VmVyc2lvbixnPWYoYi5fc291cmNlKSxoPXZoLmN1cnJlbnQsaz1oLnVzZVN0YXRlKGZ1bmN0aW9uKCl7cmV0dXJuIE1oKGUsYixjKX0pLGw9a1sxXSxuPWtbMF07az1UO3ZhciBBPWEubWVtb2l6ZWRTdGF0ZSxwPUEucmVmcyxDPXAuZ2V0U25hcHNob3QseD1BLnNvdXJjZTtBPUEuc3Vic2NyaWJlO3ZhciB3PVI7YS5tZW1vaXplZFN0YXRlPXtyZWZzOnAsc291cmNlOmIsc3Vic2NyaWJlOmR9O2gudXNlRWZmZWN0KGZ1bmN0aW9uKCl7cC5nZXRTbmFwc2hvdD1jO3Auc2V0U25hcHNob3Q9bDt2YXIgYT1mKGIuX3NvdXJjZSk7aWYoIUhlKGcsYSkpe2E9YyhiLl9zb3VyY2UpO0hlKG4sYSl8fChsKGEpLGE9SWcodyksZS5tdXRhYmxlUmVhZExhbmVzfD1hJmUucGVuZGluZ0xhbmVzKTthPWUubXV0YWJsZVJlYWRMYW5lcztlLmVudGFuZ2xlZExhbmVzfD1hO2Zvcih2YXIgZD1cbmUuZW50YW5nbGVtZW50cyxoPWE7MDxoOyl7dmFyIGs9MzEtVmMoaCksdj0xPDxrO2Rba118PWE7aCY9fnZ9fX0sW2MsYixkXSk7aC51c2VFZmZlY3QoZnVuY3Rpb24oKXtyZXR1cm4gZChiLl9zb3VyY2UsZnVuY3Rpb24oKXt2YXIgYT1wLmdldFNuYXBzaG90LGM9cC5zZXRTbmFwc2hvdDt0cnl7YyhhKGIuX3NvdXJjZSkpO3ZhciBkPUlnKHcpO2UubXV0YWJsZVJlYWRMYW5lc3w9ZCZlLnBlbmRpbmdMYW5lc31jYXRjaChxKXtjKGZ1bmN0aW9uKCl7dGhyb3cgcTt9KX19KX0sW2IsZF0pO0hlKEMsYykmJkhlKHgsYikmJkhlKEEsZCl8fChhPXtwZW5kaW5nOm51bGwsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOkpoLGxhc3RSZW5kZXJlZFN0YXRlOm59LGEuZGlzcGF0Y2g9bD1PaC5iaW5kKG51bGwsUixhKSxrLnF1ZXVlPWEsay5iYXNlUXVldWU9bnVsbCxuPU1oKGUsYixjKSxrLm1lbW9pemVkU3RhdGU9ay5iYXNlU3RhdGU9bik7cmV0dXJuIG59XG5mdW5jdGlvbiBQaChhLGIsYyl7dmFyIGQ9SWgoKTtyZXR1cm4gTmgoZCxhLGIsYyl9ZnVuY3Rpb24gUWgoYSl7dmFyIGI9SGgoKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSYmKGE9YSgpKTtiLm1lbW9pemVkU3RhdGU9Yi5iYXNlU3RhdGU9YTthPWIucXVldWU9e3BlbmRpbmc6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6SmgsbGFzdFJlbmRlcmVkU3RhdGU6YX07YT1hLmRpc3BhdGNoPU9oLmJpbmQobnVsbCxSLGEpO3JldHVybltiLm1lbW9pemVkU3RhdGUsYV19XG5mdW5jdGlvbiBSaChhLGIsYyxkKXthPXt0YWc6YSxjcmVhdGU6YixkZXN0cm95OmMsZGVwczpkLG5leHQ6bnVsbH07Yj1SLnVwZGF0ZVF1ZXVlO251bGw9PT1iPyhiPXtsYXN0RWZmZWN0Om51bGx9LFIudXBkYXRlUXVldWU9YixiLmxhc3RFZmZlY3Q9YS5uZXh0PWEpOihjPWIubGFzdEVmZmVjdCxudWxsPT09Yz9iLmxhc3RFZmZlY3Q9YS5uZXh0PWE6KGQ9Yy5uZXh0LGMubmV4dD1hLGEubmV4dD1kLGIubGFzdEVmZmVjdD1hKSk7cmV0dXJuIGF9ZnVuY3Rpb24gU2goYSl7dmFyIGI9SGgoKTthPXtjdXJyZW50OmF9O3JldHVybiBiLm1lbW9pemVkU3RhdGU9YX1mdW5jdGlvbiBUaCgpe3JldHVybiBJaCgpLm1lbW9pemVkU3RhdGV9ZnVuY3Rpb24gVWgoYSxiLGMsZCl7dmFyIGU9SGgoKTtSLmZsYWdzfD1hO2UubWVtb2l6ZWRTdGF0ZT1SaCgxfGIsYyx2b2lkIDAsdm9pZCAwPT09ZD9udWxsOmQpfVxuZnVuY3Rpb24gVmgoYSxiLGMsZCl7dmFyIGU9SWgoKTtkPXZvaWQgMD09PWQ/bnVsbDpkO3ZhciBmPXZvaWQgMDtpZihudWxsIT09Uyl7dmFyIGc9Uy5tZW1vaXplZFN0YXRlO2Y9Zy5kZXN0cm95O2lmKG51bGwhPT1kJiZCaChkLGcuZGVwcykpe1JoKGIsYyxmLGQpO3JldHVybn19Ui5mbGFnc3w9YTtlLm1lbW9pemVkU3RhdGU9UmgoMXxiLGMsZixkKX1mdW5jdGlvbiBXaChhLGIpe3JldHVybiBVaCg1MTYsNCxhLGIpfWZ1bmN0aW9uIFhoKGEsYil7cmV0dXJuIFZoKDUxNiw0LGEsYil9ZnVuY3Rpb24gWWgoYSxiKXtyZXR1cm4gVmgoNCwyLGEsYil9ZnVuY3Rpb24gWmgoYSxiKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYilyZXR1cm4gYT1hKCksYihhKSxmdW5jdGlvbigpe2IobnVsbCl9O2lmKG51bGwhPT1iJiZ2b2lkIDAhPT1iKXJldHVybiBhPWEoKSxiLmN1cnJlbnQ9YSxmdW5jdGlvbigpe2IuY3VycmVudD1udWxsfX1cbmZ1bmN0aW9uICRoKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gVmgoNCwyLFpoLmJpbmQobnVsbCxiLGEpLGMpfWZ1bmN0aW9uIGFpKCl7fWZ1bmN0aW9uIGJpKGEsYil7dmFyIGM9SWgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJkJoKGIsZFsxXSkpcmV0dXJuIGRbMF07Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfWZ1bmN0aW9uIGNpKGEsYil7dmFyIGM9SWgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJkJoKGIsZFsxXSkpcmV0dXJuIGRbMF07YT1hKCk7Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfVxuZnVuY3Rpb24gZGkoYSxiKXt2YXIgYz1lZygpO2dnKDk4PmM/OTg6YyxmdW5jdGlvbigpe2EoITApfSk7Z2coOTc8Yz85NzpjLGZ1bmN0aW9uKCl7dmFyIGM9d2gudHJhbnNpdGlvbjt3aC50cmFuc2l0aW9uPTE7dHJ5e2EoITEpLGIoKX1maW5hbGx5e3doLnRyYW5zaXRpb249Y319KX1cbmZ1bmN0aW9uIE9oKGEsYixjKXt2YXIgZD1IZygpLGU9SWcoYSksZj17bGFuZTplLGFjdGlvbjpjLGVhZ2VyUmVkdWNlcjpudWxsLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9LGc9Yi5wZW5kaW5nO251bGw9PT1nP2YubmV4dD1mOihmLm5leHQ9Zy5uZXh0LGcubmV4dD1mKTtiLnBlbmRpbmc9ZjtnPWEuYWx0ZXJuYXRlO2lmKGE9PT1SfHxudWxsIT09ZyYmZz09PVIpemg9eWg9ITA7ZWxzZXtpZigwPT09YS5sYW5lcyYmKG51bGw9PT1nfHwwPT09Zy5sYW5lcykmJihnPWIubGFzdFJlbmRlcmVkUmVkdWNlcixudWxsIT09ZykpdHJ5e3ZhciBoPWIubGFzdFJlbmRlcmVkU3RhdGUsaz1nKGgsYyk7Zi5lYWdlclJlZHVjZXI9ZztmLmVhZ2VyU3RhdGU9aztpZihIZShrLGgpKXJldHVybn1jYXRjaChsKXt9ZmluYWxseXt9SmcoYSxlLGQpfX1cbnZhciBHaD17cmVhZENvbnRleHQ6dmcsdXNlQ2FsbGJhY2s6QWgsdXNlQ29udGV4dDpBaCx1c2VFZmZlY3Q6QWgsdXNlSW1wZXJhdGl2ZUhhbmRsZTpBaCx1c2VMYXlvdXRFZmZlY3Q6QWgsdXNlTWVtbzpBaCx1c2VSZWR1Y2VyOkFoLHVzZVJlZjpBaCx1c2VTdGF0ZTpBaCx1c2VEZWJ1Z1ZhbHVlOkFoLHVzZURlZmVycmVkVmFsdWU6QWgsdXNlVHJhbnNpdGlvbjpBaCx1c2VNdXRhYmxlU291cmNlOkFoLHVzZU9wYXF1ZUlkZW50aWZpZXI6QWgsdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSxEaD17cmVhZENvbnRleHQ6dmcsdXNlQ2FsbGJhY2s6ZnVuY3Rpb24oYSxiKXtIaCgpLm1lbW9pemVkU3RhdGU9W2Esdm9pZCAwPT09Yj9udWxsOmJdO3JldHVybiBhfSx1c2VDb250ZXh0OnZnLHVzZUVmZmVjdDpXaCx1c2VJbXBlcmF0aXZlSGFuZGxlOmZ1bmN0aW9uKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gVWgoNCwyLFpoLmJpbmQobnVsbCxcbmIsYSksYyl9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBVaCg0LDIsYSxiKX0sdXNlTWVtbzpmdW5jdGlvbihhLGIpe3ZhciBjPUhoKCk7Yj12b2lkIDA9PT1iP251bGw6YjthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9LHVzZVJlZHVjZXI6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPUhoKCk7Yj12b2lkIDAhPT1jP2MoYik6YjtkLm1lbW9pemVkU3RhdGU9ZC5iYXNlU3RhdGU9YjthPWQucXVldWU9e3BlbmRpbmc6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6YSxsYXN0UmVuZGVyZWRTdGF0ZTpifTthPWEuZGlzcGF0Y2g9T2guYmluZChudWxsLFIsYSk7cmV0dXJuW2QubWVtb2l6ZWRTdGF0ZSxhXX0sdXNlUmVmOlNoLHVzZVN0YXRlOlFoLHVzZURlYnVnVmFsdWU6YWksdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhKXt2YXIgYj1RaChhKSxjPWJbMF0sZD1iWzFdO1doKGZ1bmN0aW9uKCl7dmFyIGI9d2gudHJhbnNpdGlvbjtcbndoLnRyYW5zaXRpb249MTt0cnl7ZChhKX1maW5hbGx5e3doLnRyYW5zaXRpb249Yn19LFthXSk7cmV0dXJuIGN9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oKXt2YXIgYT1RaCghMSksYj1hWzBdO2E9ZGkuYmluZChudWxsLGFbMV0pO1NoKGEpO3JldHVyblthLGJdfSx1c2VNdXRhYmxlU291cmNlOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD1IaCgpO2QubWVtb2l6ZWRTdGF0ZT17cmVmczp7Z2V0U25hcHNob3Q6YixzZXRTbmFwc2hvdDpudWxsfSxzb3VyY2U6YSxzdWJzY3JpYmU6Y307cmV0dXJuIE5oKGQsYSxiLGMpfSx1c2VPcGFxdWVJZGVudGlmaWVyOmZ1bmN0aW9uKCl7aWYobGgpe3ZhciBhPSExLGI9dWYoZnVuY3Rpb24oKXthfHwoYT0hMCxjKFwicjpcIisodGYrKykudG9TdHJpbmcoMzYpKSk7dGhyb3cgRXJyb3IoeSgzNTUpKTt9KSxjPVFoKGIpWzFdOzA9PT0oUi5tb2RlJjIpJiYoUi5mbGFnc3w9NTE2LFJoKDUsZnVuY3Rpb24oKXtjKFwicjpcIisodGYrKykudG9TdHJpbmcoMzYpKX0sXG52b2lkIDAsbnVsbCkpO3JldHVybiBifWI9XCJyOlwiKyh0ZisrKS50b1N0cmluZygzNik7UWgoYik7cmV0dXJuIGJ9LHVuc3RhYmxlX2lzTmV3UmVjb25jaWxlcjohMX0sRWg9e3JlYWRDb250ZXh0OnZnLHVzZUNhbGxiYWNrOmJpLHVzZUNvbnRleHQ6dmcsdXNlRWZmZWN0OlhoLHVzZUltcGVyYXRpdmVIYW5kbGU6JGgsdXNlTGF5b3V0RWZmZWN0OlloLHVzZU1lbW86Y2ksdXNlUmVkdWNlcjpLaCx1c2VSZWY6VGgsdXNlU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gS2goSmgpfSx1c2VEZWJ1Z1ZhbHVlOmFpLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSl7dmFyIGI9S2goSmgpLGM9YlswXSxkPWJbMV07WGgoZnVuY3Rpb24oKXt2YXIgYj13aC50cmFuc2l0aW9uO3doLnRyYW5zaXRpb249MTt0cnl7ZChhKX1maW5hbGx5e3doLnRyYW5zaXRpb249Yn19LFthXSk7cmV0dXJuIGN9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oKXt2YXIgYT1LaChKaClbMF07cmV0dXJuW1RoKCkuY3VycmVudCxcbmFdfSx1c2VNdXRhYmxlU291cmNlOlBoLHVzZU9wYXF1ZUlkZW50aWZpZXI6ZnVuY3Rpb24oKXtyZXR1cm4gS2goSmgpWzBdfSx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9LEZoPXtyZWFkQ29udGV4dDp2Zyx1c2VDYWxsYmFjazpiaSx1c2VDb250ZXh0OnZnLHVzZUVmZmVjdDpYaCx1c2VJbXBlcmF0aXZlSGFuZGxlOiRoLHVzZUxheW91dEVmZmVjdDpZaCx1c2VNZW1vOmNpLHVzZVJlZHVjZXI6TGgsdXNlUmVmOlRoLHVzZVN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIExoKEpoKX0sdXNlRGVidWdWYWx1ZTphaSx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEpe3ZhciBiPUxoKEpoKSxjPWJbMF0sZD1iWzFdO1hoKGZ1bmN0aW9uKCl7dmFyIGI9d2gudHJhbnNpdGlvbjt3aC50cmFuc2l0aW9uPTE7dHJ5e2QoYSl9ZmluYWxseXt3aC50cmFuc2l0aW9uPWJ9fSxbYV0pO3JldHVybiBjfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9TGgoSmgpWzBdO3JldHVybltUaCgpLmN1cnJlbnQsXG5hXX0sdXNlTXV0YWJsZVNvdXJjZTpQaCx1c2VPcGFxdWVJZGVudGlmaWVyOmZ1bmN0aW9uKCl7cmV0dXJuIExoKEpoKVswXX0sdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSxlaT1yYS5SZWFjdEN1cnJlbnRPd25lcix1Zz0hMTtmdW5jdGlvbiBmaShhLGIsYyxkKXtiLmNoaWxkPW51bGw9PT1hP1pnKGIsbnVsbCxjLGQpOllnKGIsYS5jaGlsZCxjLGQpfWZ1bmN0aW9uIGdpKGEsYixjLGQsZSl7Yz1jLnJlbmRlcjt2YXIgZj1iLnJlZjt0ZyhiLGUpO2Q9Q2goYSxiLGMsZCxmLGUpO2lmKG51bGwhPT1hJiYhdWcpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmZsYWdzJj0tNTE3LGEubGFuZXMmPX5lLGhpKGEsYixlKTtiLmZsYWdzfD0xO2ZpKGEsYixkLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gaWkoYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hKXt2YXIgZz1jLnR5cGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJiFqaShnKSYmdm9pZCAwPT09Zy5kZWZhdWx0UHJvcHMmJm51bGw9PT1jLmNvbXBhcmUmJnZvaWQgMD09PWMuZGVmYXVsdFByb3BzKXJldHVybiBiLnRhZz0xNSxiLnR5cGU9ZyxraShhLGIsZyxkLGUsZik7YT1WZyhjLnR5cGUsbnVsbCxkLGIsYi5tb2RlLGYpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1nPWEuY2hpbGQ7aWYoMD09PShlJmYpJiYoZT1nLm1lbW9pemVkUHJvcHMsYz1jLmNvbXBhcmUsYz1udWxsIT09Yz9jOkplLGMoZSxkKSYmYS5yZWY9PT1iLnJlZikpcmV0dXJuIGhpKGEsYixmKTtiLmZsYWdzfD0xO2E9VGcoZyxkKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9XG5mdW5jdGlvbiBraShhLGIsYyxkLGUsZil7aWYobnVsbCE9PWEmJkplKGEubWVtb2l6ZWRQcm9wcyxkKSYmYS5yZWY9PT1iLnJlZilpZih1Zz0hMSwwIT09KGYmZSkpMCE9PShhLmZsYWdzJjE2Mzg0KSYmKHVnPSEwKTtlbHNlIHJldHVybiBiLmxhbmVzPWEubGFuZXMsaGkoYSxiLGYpO3JldHVybiBsaShhLGIsYyxkLGYpfVxuZnVuY3Rpb24gbWkoYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9ZC5jaGlsZHJlbixmPW51bGwhPT1hP2EubWVtb2l6ZWRTdGF0ZTpudWxsO2lmKFwiaGlkZGVuXCI9PT1kLm1vZGV8fFwidW5zdGFibGUtZGVmZXItd2l0aG91dC1oaWRpbmdcIj09PWQubW9kZSlpZigwPT09KGIubW9kZSY0KSliLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczowfSxuaShiLGMpO2Vsc2UgaWYoMCE9PShjJjEwNzM3NDE4MjQpKWIubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOjB9LG5pKGIsbnVsbCE9PWY/Zi5iYXNlTGFuZXM6Yyk7ZWxzZSByZXR1cm4gYT1udWxsIT09Zj9mLmJhc2VMYW5lc3xjOmMsYi5sYW5lcz1iLmNoaWxkTGFuZXM9MTA3Mzc0MTgyNCxiLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczphfSxuaShiLGEpLG51bGw7ZWxzZSBudWxsIT09Zj8oZD1mLmJhc2VMYW5lc3xjLGIubWVtb2l6ZWRTdGF0ZT1udWxsKTpkPWMsbmkoYixkKTtmaShhLGIsZSxjKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIG9pKGEsYil7dmFyIGM9Yi5yZWY7aWYobnVsbD09PWEmJm51bGwhPT1jfHxudWxsIT09YSYmYS5yZWYhPT1jKWIuZmxhZ3N8PTEyOH1mdW5jdGlvbiBsaShhLGIsYyxkLGUpe3ZhciBmPUZmKGMpP0RmOk0uY3VycmVudDtmPUVmKGIsZik7dGcoYixlKTtjPUNoKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXVnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5mbGFncyY9LTUxNyxhLmxhbmVzJj1+ZSxoaShhLGIsZSk7Yi5mbGFnc3w9MTtmaShhLGIsYyxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIHBpKGEsYixjLGQsZSl7aWYoRmYoYykpe3ZhciBmPSEwO0pmKGIpfWVsc2UgZj0hMTt0ZyhiLGUpO2lmKG51bGw9PT1iLnN0YXRlTm9kZSludWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmZsYWdzfD0yKSxNZyhiLGMsZCksT2coYixjLGQsZSksZD0hMDtlbHNlIGlmKG51bGw9PT1hKXt2YXIgZz1iLnN0YXRlTm9kZSxoPWIubWVtb2l6ZWRQcm9wcztnLnByb3BzPWg7dmFyIGs9Zy5jb250ZXh0LGw9Yy5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGwmJm51bGwhPT1sP2w9dmcobCk6KGw9RmYoYyk/RGY6TS5jdXJyZW50LGw9RWYoYixsKSk7dmFyIG49Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMsQT1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygbnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGU7QXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlxuXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1kfHxrIT09bCkmJk5nKGIsZyxkLGwpO3dnPSExO3ZhciBwPWIubWVtb2l6ZWRTdGF0ZTtnLnN0YXRlPXA7Q2coYixkLGcsZSk7az1iLm1lbW9pemVkU3RhdGU7aCE9PWR8fHAhPT1rfHxOLmN1cnJlbnR8fHdnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbiYmKEdnKGIsYyxuLGQpLGs9Yi5tZW1vaXplZFN0YXRlKSwoaD13Z3x8TGcoYixjLGgsZCxwLGssbCkpPyhBfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnR8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnQmJmcuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkpLFwiZnVuY3Rpb25cIj09PVxudHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmZsYWdzfD00KSk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5mbGFnc3w9NCksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPWspLGcucHJvcHM9ZCxnLnN0YXRlPWssZy5jb250ZXh0PWwsZD1oKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmZsYWdzfD00KSxkPSExKX1lbHNle2c9Yi5zdGF0ZU5vZGU7eWcoYSxiKTtoPWIubWVtb2l6ZWRQcm9wcztsPWIudHlwZT09PWIuZWxlbWVudFR5cGU/aDpsZyhiLnR5cGUsaCk7Zy5wcm9wcz1sO0E9Yi5wZW5kaW5nUHJvcHM7cD1nLmNvbnRleHQ7az1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgayYmbnVsbCE9PWs/az12ZyhrKTooaz1GZihjKT9EZjpNLmN1cnJlbnQsaz1FZihiLGspKTt2YXIgQz1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczsobj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgQ3x8XG5cImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PUF8fHAhPT1rKSYmTmcoYixnLGQsayk7d2c9ITE7cD1iLm1lbW9pemVkU3RhdGU7Zy5zdGF0ZT1wO0NnKGIsZCxnLGUpO3ZhciB4PWIubWVtb2l6ZWRTdGF0ZTtoIT09QXx8cCE9PXh8fE4uY3VycmVudHx8d2c/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBDJiYoR2coYixjLEMsZCkseD1iLm1lbW9pemVkU3RhdGUpLChsPXdnfHxMZyhiLGMsbCxkLHAseCxrKSk/KG58fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlfHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5jb21wb25lbnRXaWxsVXBkYXRlKGQsXG54LGspLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlKGQseCxrKSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlJiYoYi5mbGFnc3w9NCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUmJihiLmZsYWdzfD0yNTYpKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZwPT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnA9PT1hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD0yNTYpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT14KSxnLnByb3BzPWQsZy5zdGF0ZT14LGcuY29udGV4dD1rLGQ9bCk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8XG5oPT09YS5tZW1vaXplZFByb3BzJiZwPT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnA9PT1hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD0yNTYpLGQ9ITEpfXJldHVybiBxaShhLGIsYyxkLGYsZSl9XG5mdW5jdGlvbiBxaShhLGIsYyxkLGUsZil7b2koYSxiKTt2YXIgZz0wIT09KGIuZmxhZ3MmNjQpO2lmKCFkJiYhZylyZXR1cm4gZSYmS2YoYixjLCExKSxoaShhLGIsZik7ZD1iLnN0YXRlTm9kZTtlaS5jdXJyZW50PWI7dmFyIGg9ZyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGMuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yP251bGw6ZC5yZW5kZXIoKTtiLmZsYWdzfD0xO251bGwhPT1hJiZnPyhiLmNoaWxkPVlnKGIsYS5jaGlsZCxudWxsLGYpLGIuY2hpbGQ9WWcoYixudWxsLGgsZikpOmZpKGEsYixoLGYpO2IubWVtb2l6ZWRTdGF0ZT1kLnN0YXRlO2UmJktmKGIsYywhMCk7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gcmkoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yi5wZW5kaW5nQ29udGV4dD9IZihhLGIucGVuZGluZ0NvbnRleHQsYi5wZW5kaW5nQ29udGV4dCE9PWIuY29udGV4dCk6Yi5jb250ZXh0JiZIZihhLGIuY29udGV4dCwhMSk7ZWgoYSxiLmNvbnRhaW5lckluZm8pfVxudmFyIHNpPXtkZWh5ZHJhdGVkOm51bGwscmV0cnlMYW5lOjB9O1xuZnVuY3Rpb24gdGkoYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9UC5jdXJyZW50LGY9ITEsZzsoZz0wIT09KGIuZmxhZ3MmNjQpKXx8KGc9bnVsbCE9PWEmJm51bGw9PT1hLm1lbW9pemVkU3RhdGU/ITE6MCE9PShlJjIpKTtnPyhmPSEwLGIuZmxhZ3MmPS02NSk6bnVsbCE9PWEmJm51bGw9PT1hLm1lbW9pemVkU3RhdGV8fHZvaWQgMD09PWQuZmFsbGJhY2t8fCEwPT09ZC51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFja3x8KGV8PTEpO0koUCxlJjEpO2lmKG51bGw9PT1hKXt2b2lkIDAhPT1kLmZhbGxiYWNrJiZwaChiKTthPWQuY2hpbGRyZW47ZT1kLmZhbGxiYWNrO2lmKGYpcmV0dXJuIGE9dWkoYixhLGUsYyksYi5jaGlsZC5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6Y30sYi5tZW1vaXplZFN0YXRlPXNpLGE7aWYoXCJudW1iZXJcIj09PXR5cGVvZiBkLnVuc3RhYmxlX2V4cGVjdGVkTG9hZFRpbWUpcmV0dXJuIGE9dWkoYixhLGUsYyksYi5jaGlsZC5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6Y30sXG5iLm1lbW9pemVkU3RhdGU9c2ksYi5sYW5lcz0zMzU1NDQzMixhO2M9dmkoe21vZGU6XCJ2aXNpYmxlXCIsY2hpbGRyZW46YX0sYi5tb2RlLGMsbnVsbCk7Yy5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1jfWlmKG51bGwhPT1hLm1lbW9pemVkU3RhdGUpe2lmKGYpcmV0dXJuIGQ9d2koYSxiLGQuY2hpbGRyZW4sZC5mYWxsYmFjayxjKSxmPWIuY2hpbGQsZT1hLmNoaWxkLm1lbW9pemVkU3RhdGUsZi5tZW1vaXplZFN0YXRlPW51bGw9PT1lP3tiYXNlTGFuZXM6Y306e2Jhc2VMYW5lczplLmJhc2VMYW5lc3xjfSxmLmNoaWxkTGFuZXM9YS5jaGlsZExhbmVzJn5jLGIubWVtb2l6ZWRTdGF0ZT1zaSxkO2M9eGkoYSxiLGQuY2hpbGRyZW4sYyk7Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGN9aWYoZilyZXR1cm4gZD13aShhLGIsZC5jaGlsZHJlbixkLmZhbGxiYWNrLGMpLGY9Yi5jaGlsZCxlPWEuY2hpbGQubWVtb2l6ZWRTdGF0ZSxmLm1lbW9pemVkU3RhdGU9bnVsbD09PWU/e2Jhc2VMYW5lczpjfTpcbntiYXNlTGFuZXM6ZS5iYXNlTGFuZXN8Y30sZi5jaGlsZExhbmVzPWEuY2hpbGRMYW5lcyZ+YyxiLm1lbW9pemVkU3RhdGU9c2ksZDtjPXhpKGEsYixkLmNoaWxkcmVuLGMpO2IubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBjfWZ1bmN0aW9uIHVpKGEsYixjLGQpe3ZhciBlPWEubW9kZSxmPWEuY2hpbGQ7Yj17bW9kZTpcImhpZGRlblwiLGNoaWxkcmVuOmJ9OzA9PT0oZSYyKSYmbnVsbCE9PWY/KGYuY2hpbGRMYW5lcz0wLGYucGVuZGluZ1Byb3BzPWIpOmY9dmkoYixlLDAsbnVsbCk7Yz1YZyhjLGUsZCxudWxsKTtmLnJldHVybj1hO2MucmV0dXJuPWE7Zi5zaWJsaW5nPWM7YS5jaGlsZD1mO3JldHVybiBjfVxuZnVuY3Rpb24geGkoYSxiLGMsZCl7dmFyIGU9YS5jaGlsZDthPWUuc2libGluZztjPVRnKGUse21vZGU6XCJ2aXNpYmxlXCIsY2hpbGRyZW46Y30pOzA9PT0oYi5tb2RlJjIpJiYoYy5sYW5lcz1kKTtjLnJldHVybj1iO2Muc2libGluZz1udWxsO251bGwhPT1hJiYoYS5uZXh0RWZmZWN0PW51bGwsYS5mbGFncz04LGIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWEpO3JldHVybiBiLmNoaWxkPWN9XG5mdW5jdGlvbiB3aShhLGIsYyxkLGUpe3ZhciBmPWIubW9kZSxnPWEuY2hpbGQ7YT1nLnNpYmxpbmc7dmFyIGg9e21vZGU6XCJoaWRkZW5cIixjaGlsZHJlbjpjfTswPT09KGYmMikmJmIuY2hpbGQhPT1nPyhjPWIuY2hpbGQsYy5jaGlsZExhbmVzPTAsYy5wZW5kaW5nUHJvcHM9aCxnPWMubGFzdEVmZmVjdCxudWxsIT09Zz8oYi5maXJzdEVmZmVjdD1jLmZpcnN0RWZmZWN0LGIubGFzdEVmZmVjdD1nLGcubmV4dEVmZmVjdD1udWxsKTpiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1udWxsKTpjPVRnKGcsaCk7bnVsbCE9PWE/ZD1UZyhhLGQpOihkPVhnKGQsZixlLG51bGwpLGQuZmxhZ3N8PTIpO2QucmV0dXJuPWI7Yy5yZXR1cm49YjtjLnNpYmxpbmc9ZDtiLmNoaWxkPWM7cmV0dXJuIGR9ZnVuY3Rpb24geWkoYSxiKXthLmxhbmVzfD1iO3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiYoYy5sYW5lc3w9Yik7c2coYS5yZXR1cm4sYil9XG5mdW5jdGlvbiB6aShhLGIsYyxkLGUsZil7dmFyIGc9YS5tZW1vaXplZFN0YXRlO251bGw9PT1nP2EubWVtb2l6ZWRTdGF0ZT17aXNCYWNrd2FyZHM6YixyZW5kZXJpbmc6bnVsbCxyZW5kZXJpbmdTdGFydFRpbWU6MCxsYXN0OmQsdGFpbDpjLHRhaWxNb2RlOmUsbGFzdEVmZmVjdDpmfTooZy5pc0JhY2t3YXJkcz1iLGcucmVuZGVyaW5nPW51bGwsZy5yZW5kZXJpbmdTdGFydFRpbWU9MCxnLmxhc3Q9ZCxnLnRhaWw9YyxnLnRhaWxNb2RlPWUsZy5sYXN0RWZmZWN0PWYpfVxuZnVuY3Rpb24gQWkoYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9ZC5yZXZlYWxPcmRlcixmPWQudGFpbDtmaShhLGIsZC5jaGlsZHJlbixjKTtkPVAuY3VycmVudDtpZigwIT09KGQmMikpZD1kJjF8MixiLmZsYWdzfD02NDtlbHNle2lmKG51bGwhPT1hJiYwIT09KGEuZmxhZ3MmNjQpKWE6Zm9yKGE9Yi5jaGlsZDtudWxsIT09YTspe2lmKDEzPT09YS50YWcpbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSYmeWkoYSxjKTtlbHNlIGlmKDE5PT09YS50YWcpeWkoYSxjKTtlbHNlIGlmKG51bGwhPT1hLmNoaWxkKXthLmNoaWxkLnJldHVybj1hO2E9YS5jaGlsZDtjb250aW51ZX1pZihhPT09YilicmVhayBhO2Zvcig7bnVsbD09PWEuc2libGluZzspe2lmKG51bGw9PT1hLnJldHVybnx8YS5yZXR1cm49PT1iKWJyZWFrIGE7YT1hLnJldHVybn1hLnNpYmxpbmcucmV0dXJuPWEucmV0dXJuO2E9YS5zaWJsaW5nfWQmPTF9SShQLGQpO2lmKDA9PT0oYi5tb2RlJjIpKWIubWVtb2l6ZWRTdGF0ZT1cbm51bGw7ZWxzZSBzd2l0Y2goZSl7Y2FzZSBcImZvcndhcmRzXCI6Yz1iLmNoaWxkO2ZvcihlPW51bGw7bnVsbCE9PWM7KWE9Yy5hbHRlcm5hdGUsbnVsbCE9PWEmJm51bGw9PT1paChhKSYmKGU9YyksYz1jLnNpYmxpbmc7Yz1lO251bGw9PT1jPyhlPWIuY2hpbGQsYi5jaGlsZD1udWxsKTooZT1jLnNpYmxpbmcsYy5zaWJsaW5nPW51bGwpO3ppKGIsITEsZSxjLGYsYi5sYXN0RWZmZWN0KTticmVhaztjYXNlIFwiYmFja3dhcmRzXCI6Yz1udWxsO2U9Yi5jaGlsZDtmb3IoYi5jaGlsZD1udWxsO251bGwhPT1lOyl7YT1lLmFsdGVybmF0ZTtpZihudWxsIT09YSYmbnVsbD09PWloKGEpKXtiLmNoaWxkPWU7YnJlYWt9YT1lLnNpYmxpbmc7ZS5zaWJsaW5nPWM7Yz1lO2U9YX16aShiLCEwLGMsbnVsbCxmLGIubGFzdEVmZmVjdCk7YnJlYWs7Y2FzZSBcInRvZ2V0aGVyXCI6emkoYiwhMSxudWxsLG51bGwsdm9pZCAwLGIubGFzdEVmZmVjdCk7YnJlYWs7ZGVmYXVsdDpiLm1lbW9pemVkU3RhdGU9bnVsbH1yZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIGhpKGEsYixjKXtudWxsIT09YSYmKGIuZGVwZW5kZW5jaWVzPWEuZGVwZW5kZW5jaWVzKTtEZ3w9Yi5sYW5lcztpZigwIT09KGMmYi5jaGlsZExhbmVzKSl7aWYobnVsbCE9PWEmJmIuY2hpbGQhPT1hLmNoaWxkKXRocm93IEVycm9yKHkoMTUzKSk7aWYobnVsbCE9PWIuY2hpbGQpe2E9Yi5jaGlsZDtjPVRnKGEsYS5wZW5kaW5nUHJvcHMpO2IuY2hpbGQ9Yztmb3IoYy5yZXR1cm49YjtudWxsIT09YS5zaWJsaW5nOylhPWEuc2libGluZyxjPWMuc2libGluZz1UZyhhLGEucGVuZGluZ1Byb3BzKSxjLnJldHVybj1iO2Muc2libGluZz1udWxsfXJldHVybiBiLmNoaWxkfXJldHVybiBudWxsfXZhciBCaSxDaSxEaSxFaTtcbkJpPWZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPWIuY2hpbGQ7bnVsbCE9PWM7KXtpZig1PT09Yy50YWd8fDY9PT1jLnRhZylhLmFwcGVuZENoaWxkKGMuc3RhdGVOb2RlKTtlbHNlIGlmKDQhPT1jLnRhZyYmbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1iKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8Yy5yZXR1cm49PT1iKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fTtDaT1mdW5jdGlvbigpe307XG5EaT1mdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1hLm1lbW9pemVkUHJvcHM7aWYoZSE9PWQpe2E9Yi5zdGF0ZU5vZGU7ZGgoYWguY3VycmVudCk7dmFyIGY9bnVsbDtzd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6ZT1ZYShhLGUpO2Q9WWEoYSxkKTtmPVtdO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjplPWViKGEsZSk7ZD1lYihhLGQpO2Y9W107YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmU9bSh7fSxlLHt2YWx1ZTp2b2lkIDB9KTtkPW0oe30sZCx7dmFsdWU6dm9pZCAwfSk7Zj1bXTticmVhaztjYXNlIFwidGV4dGFyZWFcIjplPWdiKGEsZSk7ZD1nYihhLGQpO2Y9W107YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5vbkNsaWNrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoYS5vbmNsaWNrPWpmKX12YihjLGQpO3ZhciBnO2M9bnVsbDtmb3IobCBpbiBlKWlmKCFkLmhhc093blByb3BlcnR5KGwpJiZlLmhhc093blByb3BlcnR5KGwpJiZudWxsIT1lW2xdKWlmKFwic3R5bGVcIj09PVxubCl7dmFyIGg9ZVtsXTtmb3IoZyBpbiBoKWguaGFzT3duUHJvcGVydHkoZykmJihjfHwoYz17fSksY1tnXT1cIlwiKX1lbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiIT09bCYmXCJjaGlsZHJlblwiIT09bCYmXCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWwmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1sJiZcImF1dG9Gb2N1c1wiIT09bCYmKGNhLmhhc093blByb3BlcnR5KGwpP2Z8fChmPVtdKTooZj1mfHxbXSkucHVzaChsLG51bGwpKTtmb3IobCBpbiBkKXt2YXIgaz1kW2xdO2g9bnVsbCE9ZT9lW2xdOnZvaWQgMDtpZihkLmhhc093blByb3BlcnR5KGwpJiZrIT09aCYmKG51bGwhPWt8fG51bGwhPWgpKWlmKFwic3R5bGVcIj09PWwpaWYoaCl7Zm9yKGcgaW4gaCkhaC5oYXNPd25Qcm9wZXJ0eShnKXx8ayYmay5oYXNPd25Qcm9wZXJ0eShnKXx8KGN8fChjPXt9KSxjW2ddPVwiXCIpO2ZvcihnIGluIGspay5oYXNPd25Qcm9wZXJ0eShnKSYmaFtnXSE9PWtbZ10mJihjfHxcbihjPXt9KSxjW2ddPWtbZ10pfWVsc2UgY3x8KGZ8fChmPVtdKSxmLnB1c2gobCxjKSksYz1rO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1sPyhrPWs/ay5fX2h0bWw6dm9pZCAwLGg9aD9oLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmaCE9PWsmJihmPWZ8fFtdKS5wdXNoKGwsaykpOlwiY2hpbGRyZW5cIj09PWw/XCJzdHJpbmdcIiE9PXR5cGVvZiBrJiZcIm51bWJlclwiIT09dHlwZW9mIGt8fChmPWZ8fFtdKS5wdXNoKGwsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09bCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWwmJihjYS5oYXNPd25Qcm9wZXJ0eShsKT8obnVsbCE9ayYmXCJvblNjcm9sbFwiPT09bCYmRyhcInNjcm9sbFwiLGEpLGZ8fGg9PT1rfHwoZj1bXSkpOlwib2JqZWN0XCI9PT10eXBlb2YgayYmbnVsbCE9PWsmJmsuJCR0eXBlb2Y9PT1HYT9rLnRvU3RyaW5nKCk6KGY9Znx8W10pLnB1c2gobCxrKSl9YyYmKGY9Znx8W10pLnB1c2goXCJzdHlsZVwiLFxuYyk7dmFyIGw9ZjtpZihiLnVwZGF0ZVF1ZXVlPWwpYi5mbGFnc3w9NH19O0VpPWZ1bmN0aW9uKGEsYixjLGQpe2MhPT1kJiYoYi5mbGFnc3w9NCl9O2Z1bmN0aW9uIEZpKGEsYil7aWYoIWxoKXN3aXRjaChhLnRhaWxNb2RlKXtjYXNlIFwiaGlkZGVuXCI6Yj1hLnRhaWw7Zm9yKHZhciBjPW51bGw7bnVsbCE9PWI7KW51bGwhPT1iLmFsdGVybmF0ZSYmKGM9YiksYj1iLnNpYmxpbmc7bnVsbD09PWM/YS50YWlsPW51bGw6Yy5zaWJsaW5nPW51bGw7YnJlYWs7Y2FzZSBcImNvbGxhcHNlZFwiOmM9YS50YWlsO2Zvcih2YXIgZD1udWxsO251bGwhPT1jOyludWxsIT09Yy5hbHRlcm5hdGUmJihkPWMpLGM9Yy5zaWJsaW5nO251bGw9PT1kP2J8fG51bGw9PT1hLnRhaWw/YS50YWlsPW51bGw6YS50YWlsLnNpYmxpbmc9bnVsbDpkLnNpYmxpbmc9bnVsbH19XG5mdW5jdGlvbiBHaShhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHM7c3dpdGNoKGIudGFnKXtjYXNlIDI6Y2FzZSAxNjpjYXNlIDE1OmNhc2UgMDpjYXNlIDExOmNhc2UgNzpjYXNlIDg6Y2FzZSAxMjpjYXNlIDk6Y2FzZSAxNDpyZXR1cm4gbnVsbDtjYXNlIDE6cmV0dXJuIEZmKGIudHlwZSkmJkdmKCksbnVsbDtjYXNlIDM6ZmgoKTtIKE4pO0goTSk7dWgoKTtkPWIuc3RhdGVOb2RlO2QucGVuZGluZ0NvbnRleHQmJihkLmNvbnRleHQ9ZC5wZW5kaW5nQ29udGV4dCxkLnBlbmRpbmdDb250ZXh0PW51bGwpO2lmKG51bGw9PT1hfHxudWxsPT09YS5jaGlsZClyaChiKT9iLmZsYWdzfD00OmQuaHlkcmF0ZXx8KGIuZmxhZ3N8PTI1Nik7Q2koYik7cmV0dXJuIG51bGw7Y2FzZSA1OmhoKGIpO3ZhciBlPWRoKGNoLmN1cnJlbnQpO2M9Yi50eXBlO2lmKG51bGwhPT1hJiZudWxsIT1iLnN0YXRlTm9kZSlEaShhLGIsYyxkLGUpLGEucmVmIT09Yi5yZWYmJihiLmZsYWdzfD0xMjgpO2Vsc2V7aWYoIWQpe2lmKG51bGw9PT1cbmIuc3RhdGVOb2RlKXRocm93IEVycm9yKHkoMTY2KSk7cmV0dXJuIG51bGx9YT1kaChhaC5jdXJyZW50KTtpZihyaChiKSl7ZD1iLnN0YXRlTm9kZTtjPWIudHlwZTt2YXIgZj1iLm1lbW9pemVkUHJvcHM7ZFt3Zl09YjtkW3hmXT1mO3N3aXRjaChjKXtjYXNlIFwiZGlhbG9nXCI6RyhcImNhbmNlbFwiLGQpO0coXCJjbG9zZVwiLGQpO2JyZWFrO2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RyhcImxvYWRcIixkKTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoYT0wO2E8WGUubGVuZ3RoO2ErKylHKFhlW2FdLGQpO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpHKFwiZXJyb3JcIixkKTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpHKFwiZXJyb3JcIixkKTtHKFwibG9hZFwiLGQpO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RyhcInRvZ2dsZVwiLGQpO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOlphKGQsZik7RyhcImludmFsaWRcIixkKTticmVhaztjYXNlIFwic2VsZWN0XCI6ZC5fd3JhcHBlclN0YXRlPVxue3dhc011bHRpcGxlOiEhZi5tdWx0aXBsZX07RyhcImludmFsaWRcIixkKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpoYihkLGYpLEcoXCJpbnZhbGlkXCIsZCl9dmIoYyxmKTthPW51bGw7Zm9yKHZhciBnIGluIGYpZi5oYXNPd25Qcm9wZXJ0eShnKSYmKGU9ZltnXSxcImNoaWxkcmVuXCI9PT1nP1wic3RyaW5nXCI9PT10eXBlb2YgZT9kLnRleHRDb250ZW50IT09ZSYmKGE9W1wiY2hpbGRyZW5cIixlXSk6XCJudW1iZXJcIj09PXR5cGVvZiBlJiZkLnRleHRDb250ZW50IT09XCJcIitlJiYoYT1bXCJjaGlsZHJlblwiLFwiXCIrZV0pOmNhLmhhc093blByb3BlcnR5KGcpJiZudWxsIT1lJiZcIm9uU2Nyb2xsXCI9PT1nJiZHKFwic2Nyb2xsXCIsZCkpO3N3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpWYShkKTtjYihkLGYsITApO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlZhKGQpO2piKGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpjYXNlIFwib3B0aW9uXCI6YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5vbkNsaWNrJiYoZC5vbmNsaWNrPVxuamYpfWQ9YTtiLnVwZGF0ZVF1ZXVlPWQ7bnVsbCE9PWQmJihiLmZsYWdzfD00KX1lbHNle2c9OT09PWUubm9kZVR5cGU/ZTplLm93bmVyRG9jdW1lbnQ7YT09PWtiLmh0bWwmJihhPWxiKGMpKTthPT09a2IuaHRtbD9cInNjcmlwdFwiPT09Yz8oYT1nLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYS5pbm5lckhUTUw9XCI8c2NyaXB0PlxceDNjL3NjcmlwdD5cIixhPWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKSk6XCJzdHJpbmdcIj09PXR5cGVvZiBkLmlzP2E9Zy5jcmVhdGVFbGVtZW50KGMse2lzOmQuaXN9KTooYT1nLmNyZWF0ZUVsZW1lbnQoYyksXCJzZWxlY3RcIj09PWMmJihnPWEsZC5tdWx0aXBsZT9nLm11bHRpcGxlPSEwOmQuc2l6ZSYmKGcuc2l6ZT1kLnNpemUpKSk6YT1nLmNyZWF0ZUVsZW1lbnROUyhhLGMpO2Fbd2ZdPWI7YVt4Zl09ZDtCaShhLGIsITEsITEpO2Iuc3RhdGVOb2RlPWE7Zz13YihjLGQpO3N3aXRjaChjKXtjYXNlIFwiZGlhbG9nXCI6RyhcImNhbmNlbFwiLGEpO0coXCJjbG9zZVwiLGEpO1xuZT1kO2JyZWFrO2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RyhcImxvYWRcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGU9MDtlPFhlLmxlbmd0aDtlKyspRyhYZVtlXSxhKTtlPWQ7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkcoXCJlcnJvclwiLGEpO2U9ZDticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpHKFwiZXJyb3JcIixhKTtHKFwibG9hZFwiLGEpO2U9ZDticmVhaztjYXNlIFwiZGV0YWlsc1wiOkcoXCJ0b2dnbGVcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcImlucHV0XCI6WmEoYSxkKTtlPVlhKGEsZCk7RyhcImludmFsaWRcIixhKTticmVhaztjYXNlIFwib3B0aW9uXCI6ZT1lYihhLGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphLl93cmFwcGVyU3RhdGU9e3dhc011bHRpcGxlOiEhZC5tdWx0aXBsZX07ZT1tKHt9LGQse3ZhbHVlOnZvaWQgMH0pO0coXCJpbnZhbGlkXCIsYSk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aGIoYSxkKTtlPVxuZ2IoYSxkKTtHKFwiaW52YWxpZFwiLGEpO2JyZWFrO2RlZmF1bHQ6ZT1kfXZiKGMsZSk7dmFyIGg9ZTtmb3IoZiBpbiBoKWlmKGguaGFzT3duUHJvcGVydHkoZikpe3ZhciBrPWhbZl07XCJzdHlsZVwiPT09Zj90YihhLGspOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWY/KGs9az9rLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmb2IoYSxrKSk6XCJjaGlsZHJlblwiPT09Zj9cInN0cmluZ1wiPT09dHlwZW9mIGs/KFwidGV4dGFyZWFcIiE9PWN8fFwiXCIhPT1rKSYmcGIoYSxrKTpcIm51bWJlclwiPT09dHlwZW9mIGsmJnBiKGEsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09ZiYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWYmJlwiYXV0b0ZvY3VzXCIhPT1mJiYoY2EuaGFzT3duUHJvcGVydHkoZik/bnVsbCE9ayYmXCJvblNjcm9sbFwiPT09ZiYmRyhcInNjcm9sbFwiLGEpOm51bGwhPWsmJnFhKGEsZixrLGcpKX1zd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6VmEoYSk7Y2IoYSxkLCExKTtcbmJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlZhKGEpO2piKGEpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpudWxsIT1kLnZhbHVlJiZhLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsXCJcIitTYShkLnZhbHVlKSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEubXVsdGlwbGU9ISFkLm11bHRpcGxlO2Y9ZC52YWx1ZTtudWxsIT1mP2ZiKGEsISFkLm11bHRpcGxlLGYsITEpOm51bGwhPWQuZGVmYXVsdFZhbHVlJiZmYihhLCEhZC5tdWx0aXBsZSxkLmRlZmF1bHRWYWx1ZSwhMCk7YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5vbkNsaWNrJiYoYS5vbmNsaWNrPWpmKX1tZihjLGQpJiYoYi5mbGFnc3w9NCl9bnVsbCE9PWIucmVmJiYoYi5mbGFnc3w9MTI4KX1yZXR1cm4gbnVsbDtjYXNlIDY6aWYoYSYmbnVsbCE9Yi5zdGF0ZU5vZGUpRWkoYSxiLGEubWVtb2l6ZWRQcm9wcyxkKTtlbHNle2lmKFwic3RyaW5nXCIhPT10eXBlb2YgZCYmbnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHkoMTY2KSk7XG5jPWRoKGNoLmN1cnJlbnQpO2RoKGFoLmN1cnJlbnQpO3JoKGIpPyhkPWIuc3RhdGVOb2RlLGM9Yi5tZW1vaXplZFByb3BzLGRbd2ZdPWIsZC5ub2RlVmFsdWUhPT1jJiYoYi5mbGFnc3w9NCkpOihkPSg5PT09Yy5ub2RlVHlwZT9jOmMub3duZXJEb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUoZCksZFt3Zl09YixiLnN0YXRlTm9kZT1kKX1yZXR1cm4gbnVsbDtjYXNlIDEzOkgoUCk7ZD1iLm1lbW9pemVkU3RhdGU7aWYoMCE9PShiLmZsYWdzJjY0KSlyZXR1cm4gYi5sYW5lcz1jLGI7ZD1udWxsIT09ZDtjPSExO251bGw9PT1hP3ZvaWQgMCE9PWIubWVtb2l6ZWRQcm9wcy5mYWxsYmFjayYmcmgoYik6Yz1udWxsIT09YS5tZW1vaXplZFN0YXRlO2lmKGQmJiFjJiYwIT09KGIubW9kZSYyKSlpZihudWxsPT09YSYmITAhPT1iLm1lbW9pemVkUHJvcHMudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2t8fDAhPT0oUC5jdXJyZW50JjEpKTA9PT1WJiYoVj0zKTtlbHNle2lmKDA9PT1WfHwzPT09VilWPVxuNDtudWxsPT09VXx8MD09PShEZyYxMzQyMTc3MjcpJiYwPT09KEhpJjEzNDIxNzcyNyl8fElpKFUsVyl9aWYoZHx8YyliLmZsYWdzfD00O3JldHVybiBudWxsO2Nhc2UgNDpyZXR1cm4gZmgoKSxDaShiKSxudWxsPT09YSYmY2YoYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksbnVsbDtjYXNlIDEwOnJldHVybiByZyhiKSxudWxsO2Nhc2UgMTc6cmV0dXJuIEZmKGIudHlwZSkmJkdmKCksbnVsbDtjYXNlIDE5OkgoUCk7ZD1iLm1lbW9pemVkU3RhdGU7aWYobnVsbD09PWQpcmV0dXJuIG51bGw7Zj0wIT09KGIuZmxhZ3MmNjQpO2c9ZC5yZW5kZXJpbmc7aWYobnVsbD09PWcpaWYoZilGaShkLCExKTtlbHNle2lmKDAhPT1WfHxudWxsIT09YSYmMCE9PShhLmZsYWdzJjY0KSlmb3IoYT1iLmNoaWxkO251bGwhPT1hOyl7Zz1paChhKTtpZihudWxsIT09Zyl7Yi5mbGFnc3w9NjQ7RmkoZCwhMSk7Zj1nLnVwZGF0ZVF1ZXVlO251bGwhPT1mJiYoYi51cGRhdGVRdWV1ZT1mLGIuZmxhZ3N8PTQpO1xubnVsbD09PWQubGFzdEVmZmVjdCYmKGIuZmlyc3RFZmZlY3Q9bnVsbCk7Yi5sYXN0RWZmZWN0PWQubGFzdEVmZmVjdDtkPWM7Zm9yKGM9Yi5jaGlsZDtudWxsIT09YzspZj1jLGE9ZCxmLmZsYWdzJj0yLGYubmV4dEVmZmVjdD1udWxsLGYuZmlyc3RFZmZlY3Q9bnVsbCxmLmxhc3RFZmZlY3Q9bnVsbCxnPWYuYWx0ZXJuYXRlLG51bGw9PT1nPyhmLmNoaWxkTGFuZXM9MCxmLmxhbmVzPWEsZi5jaGlsZD1udWxsLGYubWVtb2l6ZWRQcm9wcz1udWxsLGYubWVtb2l6ZWRTdGF0ZT1udWxsLGYudXBkYXRlUXVldWU9bnVsbCxmLmRlcGVuZGVuY2llcz1udWxsLGYuc3RhdGVOb2RlPW51bGwpOihmLmNoaWxkTGFuZXM9Zy5jaGlsZExhbmVzLGYubGFuZXM9Zy5sYW5lcyxmLmNoaWxkPWcuY2hpbGQsZi5tZW1vaXplZFByb3BzPWcubWVtb2l6ZWRQcm9wcyxmLm1lbW9pemVkU3RhdGU9Zy5tZW1vaXplZFN0YXRlLGYudXBkYXRlUXVldWU9Zy51cGRhdGVRdWV1ZSxmLnR5cGU9Zy50eXBlLGE9Zy5kZXBlbmRlbmNpZXMsXG5mLmRlcGVuZGVuY2llcz1udWxsPT09YT9udWxsOntsYW5lczphLmxhbmVzLGZpcnN0Q29udGV4dDphLmZpcnN0Q29udGV4dH0pLGM9Yy5zaWJsaW5nO0koUCxQLmN1cnJlbnQmMXwyKTtyZXR1cm4gYi5jaGlsZH1hPWEuc2libGluZ31udWxsIT09ZC50YWlsJiZPKCk+SmkmJihiLmZsYWdzfD02NCxmPSEwLEZpKGQsITEpLGIubGFuZXM9MzM1NTQ0MzIpfWVsc2V7aWYoIWYpaWYoYT1paChnKSxudWxsIT09YSl7aWYoYi5mbGFnc3w9NjQsZj0hMCxjPWEudXBkYXRlUXVldWUsbnVsbCE9PWMmJihiLnVwZGF0ZVF1ZXVlPWMsYi5mbGFnc3w9NCksRmkoZCwhMCksbnVsbD09PWQudGFpbCYmXCJoaWRkZW5cIj09PWQudGFpbE1vZGUmJiFnLmFsdGVybmF0ZSYmIWxoKXJldHVybiBiPWIubGFzdEVmZmVjdD1kLmxhc3RFZmZlY3QsbnVsbCE9PWImJihiLm5leHRFZmZlY3Q9bnVsbCksbnVsbH1lbHNlIDIqTygpLWQucmVuZGVyaW5nU3RhcnRUaW1lPkppJiYxMDczNzQxODI0IT09YyYmKGIuZmxhZ3N8PVxuNjQsZj0hMCxGaShkLCExKSxiLmxhbmVzPTMzNTU0NDMyKTtkLmlzQmFja3dhcmRzPyhnLnNpYmxpbmc9Yi5jaGlsZCxiLmNoaWxkPWcpOihjPWQubGFzdCxudWxsIT09Yz9jLnNpYmxpbmc9ZzpiLmNoaWxkPWcsZC5sYXN0PWcpfXJldHVybiBudWxsIT09ZC50YWlsPyhjPWQudGFpbCxkLnJlbmRlcmluZz1jLGQudGFpbD1jLnNpYmxpbmcsZC5sYXN0RWZmZWN0PWIubGFzdEVmZmVjdCxkLnJlbmRlcmluZ1N0YXJ0VGltZT1PKCksYy5zaWJsaW5nPW51bGwsYj1QLmN1cnJlbnQsSShQLGY/YiYxfDI6YiYxKSxjKTpudWxsO2Nhc2UgMjM6Y2FzZSAyNDpyZXR1cm4gS2koKSxudWxsIT09YSYmbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSE9PShudWxsIT09Yi5tZW1vaXplZFN0YXRlKSYmXCJ1bnN0YWJsZS1kZWZlci13aXRob3V0LWhpZGluZ1wiIT09ZC5tb2RlJiYoYi5mbGFnc3w9NCksbnVsbH10aHJvdyBFcnJvcih5KDE1NixiLnRhZykpO31cbmZ1bmN0aW9uIExpKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSAxOkZmKGEudHlwZSkmJkdmKCk7dmFyIGI9YS5mbGFncztyZXR1cm4gYiY0MDk2PyhhLmZsYWdzPWImLTQwOTd8NjQsYSk6bnVsbDtjYXNlIDM6ZmgoKTtIKE4pO0goTSk7dWgoKTtiPWEuZmxhZ3M7aWYoMCE9PShiJjY0KSl0aHJvdyBFcnJvcih5KDI4NSkpO2EuZmxhZ3M9YiYtNDA5N3w2NDtyZXR1cm4gYTtjYXNlIDU6cmV0dXJuIGhoKGEpLG51bGw7Y2FzZSAxMzpyZXR1cm4gSChQKSxiPWEuZmxhZ3MsYiY0MDk2PyhhLmZsYWdzPWImLTQwOTd8NjQsYSk6bnVsbDtjYXNlIDE5OnJldHVybiBIKFApLG51bGw7Y2FzZSA0OnJldHVybiBmaCgpLG51bGw7Y2FzZSAxMDpyZXR1cm4gcmcoYSksbnVsbDtjYXNlIDIzOmNhc2UgMjQ6cmV0dXJuIEtpKCksbnVsbDtkZWZhdWx0OnJldHVybiBudWxsfX1cbmZ1bmN0aW9uIE1pKGEsYil7dHJ5e3ZhciBjPVwiXCIsZD1iO2RvIGMrPVFhKGQpLGQ9ZC5yZXR1cm47d2hpbGUoZCk7dmFyIGU9Y31jYXRjaChmKXtlPVwiXFxuRXJyb3IgZ2VuZXJhdGluZyBzdGFjazogXCIrZi5tZXNzYWdlK1wiXFxuXCIrZi5zdGFja31yZXR1cm57dmFsdWU6YSxzb3VyY2U6YixzdGFjazplfX1mdW5jdGlvbiBOaShhLGIpe3RyeXtjb25zb2xlLmVycm9yKGIudmFsdWUpfWNhdGNoKGMpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXt0aHJvdyBjO30pfX12YXIgT2k9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtNYXA/V2Vha01hcDpNYXA7ZnVuY3Rpb24gUGkoYSxiLGMpe2M9emcoLTEsYyk7Yy50YWc9MztjLnBheWxvYWQ9e2VsZW1lbnQ6bnVsbH07dmFyIGQ9Yi52YWx1ZTtjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7UWl8fChRaT0hMCxSaT1kKTtOaShhLGIpfTtyZXR1cm4gY31cbmZ1bmN0aW9uIFNpKGEsYixjKXtjPXpnKC0xLGMpO2MudGFnPTM7dmFyIGQ9YS50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcjtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7dmFyIGU9Yi52YWx1ZTtjLnBheWxvYWQ9ZnVuY3Rpb24oKXtOaShhLGIpO3JldHVybiBkKGUpfX12YXIgZj1hLnN0YXRlTm9kZTtudWxsIT09ZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuY29tcG9uZW50RGlkQ2F0Y2gmJihjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7XCJmdW5jdGlvblwiIT09dHlwZW9mIGQmJihudWxsPT09VGk/VGk9bmV3IFNldChbdGhpc10pOlRpLmFkZCh0aGlzKSxOaShhLGIpKTt2YXIgYz1iLnN0YWNrO3RoaXMuY29tcG9uZW50RGlkQ2F0Y2goYi52YWx1ZSx7Y29tcG9uZW50U3RhY2s6bnVsbCE9PWM/YzpcIlwifSl9KTtyZXR1cm4gY312YXIgVWk9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtTZXQ/V2Vha1NldDpTZXQ7XG5mdW5jdGlvbiBWaShhKXt2YXIgYj1hLnJlZjtpZihudWxsIT09YilpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYil0cnl7YihudWxsKX1jYXRjaChjKXtXaShhLGMpfWVsc2UgYi5jdXJyZW50PW51bGx9ZnVuY3Rpb24gWGkoYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6Y2FzZSAyMjpyZXR1cm47Y2FzZSAxOmlmKGIuZmxhZ3MmMjU2JiZudWxsIT09YSl7dmFyIGM9YS5tZW1vaXplZFByb3BzLGQ9YS5tZW1vaXplZFN0YXRlO2E9Yi5zdGF0ZU5vZGU7Yj1hLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKGIuZWxlbWVudFR5cGU9PT1iLnR5cGU/YzpsZyhiLnR5cGUsYyksZCk7YS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZT1ifXJldHVybjtjYXNlIDM6Yi5mbGFncyYyNTYmJnFmKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pO3JldHVybjtjYXNlIDU6Y2FzZSA2OmNhc2UgNDpjYXNlIDE3OnJldHVybn10aHJvdyBFcnJvcih5KDE2MykpO31cbmZ1bmN0aW9uIFlpKGEsYixjKXtzd2l0Y2goYy50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6Y2FzZSAyMjpiPWMudXBkYXRlUXVldWU7Yj1udWxsIT09Yj9iLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yil7YT1iPWIubmV4dDtkb3tpZigzPT09KGEudGFnJjMpKXt2YXIgZD1hLmNyZWF0ZTthLmRlc3Ryb3k9ZCgpfWE9YS5uZXh0fXdoaWxlKGEhPT1iKX1iPWMudXBkYXRlUXVldWU7Yj1udWxsIT09Yj9iLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yil7YT1iPWIubmV4dDtkb3t2YXIgZT1hO2Q9ZS5uZXh0O2U9ZS50YWc7MCE9PShlJjQpJiYwIT09KGUmMSkmJihaaShjLGEpLCRpKGMsYSkpO2E9ZH13aGlsZShhIT09Yil9cmV0dXJuO2Nhc2UgMTphPWMuc3RhdGVOb2RlO2MuZmxhZ3MmNCYmKG51bGw9PT1iP2EuY29tcG9uZW50RGlkTW91bnQoKTooZD1jLmVsZW1lbnRUeXBlPT09Yy50eXBlP2IubWVtb2l6ZWRQcm9wczpsZyhjLnR5cGUsYi5tZW1vaXplZFByb3BzKSxhLmNvbXBvbmVudERpZFVwZGF0ZShkLFxuYi5tZW1vaXplZFN0YXRlLGEuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUpKSk7Yj1jLnVwZGF0ZVF1ZXVlO251bGwhPT1iJiZFZyhjLGIsYSk7cmV0dXJuO2Nhc2UgMzpiPWMudXBkYXRlUXVldWU7aWYobnVsbCE9PWIpe2E9bnVsbDtpZihudWxsIT09Yy5jaGlsZClzd2l0Y2goYy5jaGlsZC50YWcpe2Nhc2UgNTphPWMuY2hpbGQuc3RhdGVOb2RlO2JyZWFrO2Nhc2UgMTphPWMuY2hpbGQuc3RhdGVOb2RlfUVnKGMsYixhKX1yZXR1cm47Y2FzZSA1OmE9Yy5zdGF0ZU5vZGU7bnVsbD09PWImJmMuZmxhZ3MmNCYmbWYoYy50eXBlLGMubWVtb2l6ZWRQcm9wcykmJmEuZm9jdXMoKTtyZXR1cm47Y2FzZSA2OnJldHVybjtjYXNlIDQ6cmV0dXJuO2Nhc2UgMTI6cmV0dXJuO2Nhc2UgMTM6bnVsbD09PWMubWVtb2l6ZWRTdGF0ZSYmKGM9Yy5hbHRlcm5hdGUsbnVsbCE9PWMmJihjPWMubWVtb2l6ZWRTdGF0ZSxudWxsIT09YyYmKGM9Yy5kZWh5ZHJhdGVkLG51bGwhPT1jJiZDYyhjKSkpKTtcbnJldHVybjtjYXNlIDE5OmNhc2UgMTc6Y2FzZSAyMDpjYXNlIDIxOmNhc2UgMjM6Y2FzZSAyNDpyZXR1cm59dGhyb3cgRXJyb3IoeSgxNjMpKTt9XG5mdW5jdGlvbiBhaihhLGIpe2Zvcih2YXIgYz1hOzspe2lmKDU9PT1jLnRhZyl7dmFyIGQ9Yy5zdGF0ZU5vZGU7aWYoYilkPWQuc3R5bGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuc2V0UHJvcGVydHk/ZC5zZXRQcm9wZXJ0eShcImRpc3BsYXlcIixcIm5vbmVcIixcImltcG9ydGFudFwiKTpkLmRpc3BsYXk9XCJub25lXCI7ZWxzZXtkPWMuc3RhdGVOb2RlO3ZhciBlPWMubWVtb2l6ZWRQcm9wcy5zdHlsZTtlPXZvaWQgMCE9PWUmJm51bGwhPT1lJiZlLmhhc093blByb3BlcnR5KFwiZGlzcGxheVwiKT9lLmRpc3BsYXk6bnVsbDtkLnN0eWxlLmRpc3BsYXk9c2IoXCJkaXNwbGF5XCIsZSl9fWVsc2UgaWYoNj09PWMudGFnKWMuc3RhdGVOb2RlLm5vZGVWYWx1ZT1iP1wiXCI6Yy5tZW1vaXplZFByb3BzO2Vsc2UgaWYoKDIzIT09Yy50YWcmJjI0IT09Yy50YWd8fG51bGw9PT1jLm1lbW9pemVkU3RhdGV8fGM9PT1hKSYmbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1cbmEpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWEpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319XG5mdW5jdGlvbiBiaihhLGIpe2lmKE1mJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgTWYub25Db21taXRGaWJlclVubW91bnQpdHJ5e01mLm9uQ29tbWl0RmliZXJVbm1vdW50KExmLGIpfWNhdGNoKGYpe31zd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTpjYXNlIDIyOmE9Yi51cGRhdGVRdWV1ZTtpZihudWxsIT09YSYmKGE9YS5sYXN0RWZmZWN0LG51bGwhPT1hKSl7dmFyIGM9YT1hLm5leHQ7ZG97dmFyIGQ9YyxlPWQuZGVzdHJveTtkPWQudGFnO2lmKHZvaWQgMCE9PWUpaWYoMCE9PShkJjQpKVppKGIsYyk7ZWxzZXtkPWI7dHJ5e2UoKX1jYXRjaChmKXtXaShkLGYpfX1jPWMubmV4dH13aGlsZShjIT09YSl9YnJlYWs7Y2FzZSAxOlZpKGIpO2E9Yi5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEuY29tcG9uZW50V2lsbFVubW91bnQpdHJ5e2EucHJvcHM9Yi5tZW1vaXplZFByb3BzLGEuc3RhdGU9Yi5tZW1vaXplZFN0YXRlLGEuY29tcG9uZW50V2lsbFVubW91bnQoKX1jYXRjaChmKXtXaShiLFxuZil9YnJlYWs7Y2FzZSA1OlZpKGIpO2JyZWFrO2Nhc2UgNDpjaihhLGIpfX1mdW5jdGlvbiBkaihhKXthLmFsdGVybmF0ZT1udWxsO2EuY2hpbGQ9bnVsbDthLmRlcGVuZGVuY2llcz1udWxsO2EuZmlyc3RFZmZlY3Q9bnVsbDthLmxhc3RFZmZlY3Q9bnVsbDthLm1lbW9pemVkUHJvcHM9bnVsbDthLm1lbW9pemVkU3RhdGU9bnVsbDthLnBlbmRpbmdQcm9wcz1udWxsO2EucmV0dXJuPW51bGw7YS51cGRhdGVRdWV1ZT1udWxsfWZ1bmN0aW9uIGVqKGEpe3JldHVybiA1PT09YS50YWd8fDM9PT1hLnRhZ3x8ND09PWEudGFnfVxuZnVuY3Rpb24gZmooYSl7YTp7Zm9yKHZhciBiPWEucmV0dXJuO251bGwhPT1iOyl7aWYoZWooYikpYnJlYWsgYTtiPWIucmV0dXJufXRocm93IEVycm9yKHkoMTYwKSk7fXZhciBjPWI7Yj1jLnN0YXRlTm9kZTtzd2l0Y2goYy50YWcpe2Nhc2UgNTp2YXIgZD0hMTticmVhaztjYXNlIDM6Yj1iLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztjYXNlIDQ6Yj1iLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHkoMTYxKSk7fWMuZmxhZ3MmMTYmJihwYihiLFwiXCIpLGMuZmxhZ3MmPS0xNyk7YTpiOmZvcihjPWE7Oyl7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxlaihjLnJldHVybikpe2M9bnVsbDticmVhayBhfWM9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtmb3IoYz1jLnNpYmxpbmc7NSE9PWMudGFnJiY2IT09Yy50YWcmJjE4IT09Yy50YWc7KXtpZihjLmZsYWdzJjIpY29udGludWUgYjtpZihudWxsPT09XG5jLmNoaWxkfHw0PT09Yy50YWcpY29udGludWUgYjtlbHNlIGMuY2hpbGQucmV0dXJuPWMsYz1jLmNoaWxkfWlmKCEoYy5mbGFncyYyKSl7Yz1jLnN0YXRlTm9kZTticmVhayBhfX1kP2dqKGEsYyxiKTpoaihhLGMsYil9XG5mdW5jdGlvbiBnaihhLGIsYyl7dmFyIGQ9YS50YWcsZT01PT09ZHx8Nj09PWQ7aWYoZSlhPWU/YS5zdGF0ZU5vZGU6YS5zdGF0ZU5vZGUuaW5zdGFuY2UsYj84PT09Yy5ub2RlVHlwZT9jLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGEsYik6Yy5pbnNlcnRCZWZvcmUoYSxiKTooOD09PWMubm9kZVR5cGU/KGI9Yy5wYXJlbnROb2RlLGIuaW5zZXJ0QmVmb3JlKGEsYykpOihiPWMsYi5hcHBlbmRDaGlsZChhKSksYz1jLl9yZWFjdFJvb3RDb250YWluZXIsbnVsbCE9PWMmJnZvaWQgMCE9PWN8fG51bGwhPT1iLm9uY2xpY2t8fChiLm9uY2xpY2s9amYpKTtlbHNlIGlmKDQhPT1kJiYoYT1hLmNoaWxkLG51bGwhPT1hKSlmb3IoZ2ooYSxiLGMpLGE9YS5zaWJsaW5nO251bGwhPT1hOylnaihhLGIsYyksYT1hLnNpYmxpbmd9XG5mdW5jdGlvbiBoaihhLGIsYyl7dmFyIGQ9YS50YWcsZT01PT09ZHx8Nj09PWQ7aWYoZSlhPWU/YS5zdGF0ZU5vZGU6YS5zdGF0ZU5vZGUuaW5zdGFuY2UsYj9jLmluc2VydEJlZm9yZShhLGIpOmMuYXBwZW5kQ2hpbGQoYSk7ZWxzZSBpZig0IT09ZCYmKGE9YS5jaGlsZCxudWxsIT09YSkpZm9yKGhqKGEsYixjKSxhPWEuc2libGluZztudWxsIT09YTspaGooYSxiLGMpLGE9YS5zaWJsaW5nfVxuZnVuY3Rpb24gY2ooYSxiKXtmb3IodmFyIGM9YixkPSExLGUsZjs7KXtpZighZCl7ZD1jLnJldHVybjthOmZvcig7Oyl7aWYobnVsbD09PWQpdGhyb3cgRXJyb3IoeSgxNjApKTtlPWQuc3RhdGVOb2RlO3N3aXRjaChkLnRhZyl7Y2FzZSA1OmY9ITE7YnJlYWsgYTtjYXNlIDM6ZT1lLmNvbnRhaW5lckluZm87Zj0hMDticmVhayBhO2Nhc2UgNDplPWUuY29udGFpbmVySW5mbztmPSEwO2JyZWFrIGF9ZD1kLnJldHVybn1kPSEwfWlmKDU9PT1jLnRhZ3x8Nj09PWMudGFnKXthOmZvcih2YXIgZz1hLGg9YyxrPWg7OylpZihiaihnLGspLG51bGwhPT1rLmNoaWxkJiY0IT09ay50YWcpay5jaGlsZC5yZXR1cm49ayxrPWsuY2hpbGQ7ZWxzZXtpZihrPT09aClicmVhayBhO2Zvcig7bnVsbD09PWsuc2libGluZzspe2lmKG51bGw9PT1rLnJldHVybnx8ay5yZXR1cm49PT1oKWJyZWFrIGE7az1rLnJldHVybn1rLnNpYmxpbmcucmV0dXJuPWsucmV0dXJuO2s9ay5zaWJsaW5nfWY/KGc9ZSxoPWMuc3RhdGVOb2RlLFxuOD09PWcubm9kZVR5cGU/Zy5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGgpOmcucmVtb3ZlQ2hpbGQoaCkpOmUucmVtb3ZlQ2hpbGQoYy5zdGF0ZU5vZGUpfWVsc2UgaWYoND09PWMudGFnKXtpZihudWxsIT09Yy5jaGlsZCl7ZT1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Y9ITA7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9fWVsc2UgaWYoYmooYSxjKSxudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWIpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWIpcmV0dXJuO2M9Yy5yZXR1cm47ND09PWMudGFnJiYoZD0hMSl9Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319XG5mdW5jdGlvbiBpaihhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OmNhc2UgMjI6dmFyIGM9Yi51cGRhdGVRdWV1ZTtjPW51bGwhPT1jP2MubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1jKXt2YXIgZD1jPWMubmV4dDtkbyAzPT09KGQudGFnJjMpJiYoYT1kLmRlc3Ryb3ksZC5kZXN0cm95PXZvaWQgMCx2b2lkIDAhPT1hJiZhKCkpLGQ9ZC5uZXh0O3doaWxlKGQhPT1jKX1yZXR1cm47Y2FzZSAxOnJldHVybjtjYXNlIDU6Yz1iLnN0YXRlTm9kZTtpZihudWxsIT1jKXtkPWIubWVtb2l6ZWRQcm9wczt2YXIgZT1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6ZDthPWIudHlwZTt2YXIgZj1iLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9bnVsbDtpZihudWxsIT09Zil7Y1t4Zl09ZDtcImlucHV0XCI9PT1hJiZcInJhZGlvXCI9PT1kLnR5cGUmJm51bGwhPWQubmFtZSYmJGEoYyxkKTt3YihhLGUpO2I9d2IoYSxkKTtmb3IoZT0wO2U8Zi5sZW5ndGg7ZSs9XG4yKXt2YXIgZz1mW2VdLGg9ZltlKzFdO1wic3R5bGVcIj09PWc/dGIoYyxoKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1nP29iKGMsaCk6XCJjaGlsZHJlblwiPT09Zz9wYihjLGgpOnFhKGMsZyxoLGIpfXN3aXRjaChhKXtjYXNlIFwiaW5wdXRcIjphYihjLGQpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmliKGMsZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmE9Yy5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlLGMuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZT0hIWQubXVsdGlwbGUsZj1kLnZhbHVlLG51bGwhPWY/ZmIoYywhIWQubXVsdGlwbGUsZiwhMSk6YSE9PSEhZC5tdWx0aXBsZSYmKG51bGwhPWQuZGVmYXVsdFZhbHVlP2ZiKGMsISFkLm11bHRpcGxlLGQuZGVmYXVsdFZhbHVlLCEwKTpmYihjLCEhZC5tdWx0aXBsZSxkLm11bHRpcGxlP1tdOlwiXCIsITEpKX19fXJldHVybjtjYXNlIDY6aWYobnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHkoMTYyKSk7Yi5zdGF0ZU5vZGUubm9kZVZhbHVlPVxuYi5tZW1vaXplZFByb3BzO3JldHVybjtjYXNlIDM6Yz1iLnN0YXRlTm9kZTtjLmh5ZHJhdGUmJihjLmh5ZHJhdGU9ITEsQ2MoYy5jb250YWluZXJJbmZvKSk7cmV0dXJuO2Nhc2UgMTI6cmV0dXJuO2Nhc2UgMTM6bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSYmKGpqPU8oKSxhaihiLmNoaWxkLCEwKSk7a2ooYik7cmV0dXJuO2Nhc2UgMTk6a2ooYik7cmV0dXJuO2Nhc2UgMTc6cmV0dXJuO2Nhc2UgMjM6Y2FzZSAyNDphaihiLG51bGwhPT1iLm1lbW9pemVkU3RhdGUpO3JldHVybn10aHJvdyBFcnJvcih5KDE2MykpO31mdW5jdGlvbiBraihhKXt2YXIgYj1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iKXthLnVwZGF0ZVF1ZXVlPW51bGw7dmFyIGM9YS5zdGF0ZU5vZGU7bnVsbD09PWMmJihjPWEuc3RhdGVOb2RlPW5ldyBVaSk7Yi5mb3JFYWNoKGZ1bmN0aW9uKGIpe3ZhciBkPWxqLmJpbmQobnVsbCxhLGIpO2MuaGFzKGIpfHwoYy5hZGQoYiksYi50aGVuKGQsZCkpfSl9fVxuZnVuY3Rpb24gbWooYSxiKXtyZXR1cm4gbnVsbCE9PWEmJihhPWEubWVtb2l6ZWRTdGF0ZSxudWxsPT09YXx8bnVsbCE9PWEuZGVoeWRyYXRlZCk/KGI9Yi5tZW1vaXplZFN0YXRlLG51bGwhPT1iJiZudWxsPT09Yi5kZWh5ZHJhdGVkKTohMX12YXIgbmo9TWF0aC5jZWlsLG9qPXJhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIscGo9cmEuUmVhY3RDdXJyZW50T3duZXIsWD0wLFU9bnVsbCxZPW51bGwsVz0wLHFqPTAscmo9QmYoMCksVj0wLHNqPW51bGwsdGo9MCxEZz0wLEhpPTAsdWo9MCx2aj1udWxsLGpqPTAsSmk9SW5maW5pdHk7ZnVuY3Rpb24gd2ooKXtKaT1PKCkrNTAwfXZhciBaPW51bGwsUWk9ITEsUmk9bnVsbCxUaT1udWxsLHhqPSExLHlqPW51bGwsemo9OTAsQWo9W10sQmo9W10sQ2o9bnVsbCxEaj0wLEVqPW51bGwsRmo9LTEsR2o9MCxIaj0wLElqPW51bGwsSmo9ITE7ZnVuY3Rpb24gSGcoKXtyZXR1cm4gMCE9PShYJjQ4KT9PKCk6LTEhPT1Gaj9GajpGaj1PKCl9XG5mdW5jdGlvbiBJZyhhKXthPWEubW9kZTtpZigwPT09KGEmMikpcmV0dXJuIDE7aWYoMD09PShhJjQpKXJldHVybiA5OT09PWVnKCk/MToyOzA9PT1HaiYmKEdqPXRqKTtpZigwIT09a2cudHJhbnNpdGlvbil7MCE9PUhqJiYoSGo9bnVsbCE9PXZqP3ZqLnBlbmRpbmdMYW5lczowKTthPUdqO3ZhciBiPTQxODYxMTImfkhqO2ImPS1iOzA9PT1iJiYoYT00MTg2MTEyJn5hLGI9YSYtYSwwPT09YiYmKGI9ODE5MikpO3JldHVybiBifWE9ZWcoKTswIT09KFgmNCkmJjk4PT09YT9hPVhjKDEyLEdqKTooYT1TYyhhKSxhPVhjKGEsR2opKTtyZXR1cm4gYX1cbmZ1bmN0aW9uIEpnKGEsYixjKXtpZig1MDxEail0aHJvdyBEaj0wLEVqPW51bGwsRXJyb3IoeSgxODUpKTthPUtqKGEsYik7aWYobnVsbD09PWEpcmV0dXJuIG51bGw7JGMoYSxiLGMpO2E9PT1VJiYoSGl8PWIsND09PVYmJklpKGEsVykpO3ZhciBkPWVnKCk7MT09PWI/MCE9PShYJjgpJiYwPT09KFgmNDgpP0xqKGEpOihNaihhLGMpLDA9PT1YJiYod2ooKSxpZygpKSk6KDA9PT0oWCY0KXx8OTghPT1kJiY5OSE9PWR8fChudWxsPT09Q2o/Q2o9bmV3IFNldChbYV0pOkNqLmFkZChhKSksTWooYSxjKSk7dmo9YX1mdW5jdGlvbiBLaihhLGIpe2EubGFuZXN8PWI7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJihjLmxhbmVzfD1iKTtjPWE7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWE7KWEuY2hpbGRMYW5lc3w9YixjPWEuYWx0ZXJuYXRlLG51bGwhPT1jJiYoYy5jaGlsZExhbmVzfD1iKSxjPWEsYT1hLnJldHVybjtyZXR1cm4gMz09PWMudGFnP2Muc3RhdGVOb2RlOm51bGx9XG5mdW5jdGlvbiBNaihhLGIpe2Zvcih2YXIgYz1hLmNhbGxiYWNrTm9kZSxkPWEuc3VzcGVuZGVkTGFuZXMsZT1hLnBpbmdlZExhbmVzLGY9YS5leHBpcmF0aW9uVGltZXMsZz1hLnBlbmRpbmdMYW5lczswPGc7KXt2YXIgaD0zMS1WYyhnKSxrPTE8PGgsbD1mW2hdO2lmKC0xPT09bCl7aWYoMD09PShrJmQpfHwwIT09KGsmZSkpe2w9YjtSYyhrKTt2YXIgbj1GO2ZbaF09MTA8PW4/bCsyNTA6Njw9bj9sKzVFMzotMX19ZWxzZSBsPD1iJiYoYS5leHBpcmVkTGFuZXN8PWspO2cmPX5rfWQ9VWMoYSxhPT09VT9XOjApO2I9RjtpZigwPT09ZCludWxsIT09YyYmKGMhPT1aZiYmUGYoYyksYS5jYWxsYmFja05vZGU9bnVsbCxhLmNhbGxiYWNrUHJpb3JpdHk9MCk7ZWxzZXtpZihudWxsIT09Yyl7aWYoYS5jYWxsYmFja1ByaW9yaXR5PT09YilyZXR1cm47YyE9PVpmJiZQZihjKX0xNT09PWI/KGM9TGouYmluZChudWxsLGEpLG51bGw9PT1hZz8oYWc9W2NdLGJnPU9mKFVmLGpnKSk6YWcucHVzaChjKSxcbmM9WmYpOjE0PT09Yj9jPWhnKDk5LExqLmJpbmQobnVsbCxhKSk6KGM9VGMoYiksYz1oZyhjLE5qLmJpbmQobnVsbCxhKSkpO2EuY2FsbGJhY2tQcmlvcml0eT1iO2EuY2FsbGJhY2tOb2RlPWN9fVxuZnVuY3Rpb24gTmooYSl7Rmo9LTE7SGo9R2o9MDtpZigwIT09KFgmNDgpKXRocm93IEVycm9yKHkoMzI3KSk7dmFyIGI9YS5jYWxsYmFja05vZGU7aWYoT2ooKSYmYS5jYWxsYmFja05vZGUhPT1iKXJldHVybiBudWxsO3ZhciBjPVVjKGEsYT09PVU/VzowKTtpZigwPT09YylyZXR1cm4gbnVsbDt2YXIgZD1jO3ZhciBlPVg7WHw9MTY7dmFyIGY9UGooKTtpZihVIT09YXx8VyE9PWQpd2ooKSxRaihhLGQpO2RvIHRyeXtSaigpO2JyZWFrfWNhdGNoKGgpe1NqKGEsaCl9d2hpbGUoMSk7cWcoKTtvai5jdXJyZW50PWY7WD1lO251bGwhPT1ZP2Q9MDooVT1udWxsLFc9MCxkPVYpO2lmKDAhPT0odGomSGkpKVFqKGEsMCk7ZWxzZSBpZigwIT09ZCl7Mj09PWQmJihYfD02NCxhLmh5ZHJhdGUmJihhLmh5ZHJhdGU9ITEscWYoYS5jb250YWluZXJJbmZvKSksYz1XYyhhKSwwIT09YyYmKGQ9VGooYSxjKSkpO2lmKDE9PT1kKXRocm93IGI9c2osUWooYSwwKSxJaShhLGMpLE1qKGEsTygpKSxiO2EuZmluaXNoZWRXb3JrPVxuYS5jdXJyZW50LmFsdGVybmF0ZTthLmZpbmlzaGVkTGFuZXM9Yztzd2l0Y2goZCl7Y2FzZSAwOmNhc2UgMTp0aHJvdyBFcnJvcih5KDM0NSkpO2Nhc2UgMjpVaihhKTticmVhaztjYXNlIDM6SWkoYSxjKTtpZigoYyY2MjkxNDU2MCk9PT1jJiYoZD1qais1MDAtTygpLDEwPGQpKXtpZigwIT09VWMoYSwwKSlicmVhaztlPWEuc3VzcGVuZGVkTGFuZXM7aWYoKGUmYykhPT1jKXtIZygpO2EucGluZ2VkTGFuZXN8PWEuc3VzcGVuZGVkTGFuZXMmZTticmVha31hLnRpbWVvdXRIYW5kbGU9b2YoVWouYmluZChudWxsLGEpLGQpO2JyZWFrfVVqKGEpO2JyZWFrO2Nhc2UgNDpJaShhLGMpO2lmKChjJjQxODYxMTIpPT09YylicmVhaztkPWEuZXZlbnRUaW1lcztmb3IoZT0tMTswPGM7KXt2YXIgZz0zMS1WYyhjKTtmPTE8PGc7Zz1kW2ddO2c+ZSYmKGU9Zyk7YyY9fmZ9Yz1lO2M9TygpLWM7Yz0oMTIwPmM/MTIwOjQ4MD5jPzQ4MDoxMDgwPmM/MTA4MDoxOTIwPmM/MTkyMDozRTM+Yz8zRTM6NDMyMD5cbmM/NDMyMDoxOTYwKm5qKGMvMTk2MCkpLWM7aWYoMTA8Yyl7YS50aW1lb3V0SGFuZGxlPW9mKFVqLmJpbmQobnVsbCxhKSxjKTticmVha31VaihhKTticmVhaztjYXNlIDU6VWooYSk7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih5KDMyOSkpO319TWooYSxPKCkpO3JldHVybiBhLmNhbGxiYWNrTm9kZT09PWI/TmouYmluZChudWxsLGEpOm51bGx9ZnVuY3Rpb24gSWkoYSxiKXtiJj1+dWo7YiY9fkhpO2Euc3VzcGVuZGVkTGFuZXN8PWI7YS5waW5nZWRMYW5lcyY9fmI7Zm9yKGE9YS5leHBpcmF0aW9uVGltZXM7MDxiOyl7dmFyIGM9MzEtVmMoYiksZD0xPDxjO2FbY109LTE7YiY9fmR9fVxuZnVuY3Rpb24gTGooYSl7aWYoMCE9PShYJjQ4KSl0aHJvdyBFcnJvcih5KDMyNykpO09qKCk7aWYoYT09PVUmJjAhPT0oYS5leHBpcmVkTGFuZXMmVykpe3ZhciBiPVc7dmFyIGM9VGooYSxiKTswIT09KHRqJkhpKSYmKGI9VWMoYSxiKSxjPVRqKGEsYikpfWVsc2UgYj1VYyhhLDApLGM9VGooYSxiKTswIT09YS50YWcmJjI9PT1jJiYoWHw9NjQsYS5oeWRyYXRlJiYoYS5oeWRyYXRlPSExLHFmKGEuY29udGFpbmVySW5mbykpLGI9V2MoYSksMCE9PWImJihjPVRqKGEsYikpKTtpZigxPT09Yyl0aHJvdyBjPXNqLFFqKGEsMCksSWkoYSxiKSxNaihhLE8oKSksYzthLmZpbmlzaGVkV29yaz1hLmN1cnJlbnQuYWx0ZXJuYXRlO2EuZmluaXNoZWRMYW5lcz1iO1VqKGEpO01qKGEsTygpKTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIFZqKCl7aWYobnVsbCE9PUNqKXt2YXIgYT1DajtDaj1udWxsO2EuZm9yRWFjaChmdW5jdGlvbihhKXthLmV4cGlyZWRMYW5lc3w9MjQmYS5wZW5kaW5nTGFuZXM7TWooYSxPKCkpfSl9aWcoKX1mdW5jdGlvbiBXaihhLGIpe3ZhciBjPVg7WHw9MTt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtYPWMsMD09PVgmJih3aigpLGlnKCkpfX1mdW5jdGlvbiBYaihhLGIpe3ZhciBjPVg7WCY9LTI7WHw9ODt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtYPWMsMD09PVgmJih3aigpLGlnKCkpfX1mdW5jdGlvbiBuaShhLGIpe0kocmoscWopO3FqfD1iO3RqfD1ifWZ1bmN0aW9uIEtpKCl7cWo9cmouY3VycmVudDtIKHJqKX1cbmZ1bmN0aW9uIFFqKGEsYil7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkTGFuZXM9MDt2YXIgYz1hLnRpbWVvdXRIYW5kbGU7LTEhPT1jJiYoYS50aW1lb3V0SGFuZGxlPS0xLHBmKGMpKTtpZihudWxsIT09WSlmb3IoYz1ZLnJldHVybjtudWxsIT09Yzspe3ZhciBkPWM7c3dpdGNoKGQudGFnKXtjYXNlIDE6ZD1kLnR5cGUuY2hpbGRDb250ZXh0VHlwZXM7bnVsbCE9PWQmJnZvaWQgMCE9PWQmJkdmKCk7YnJlYWs7Y2FzZSAzOmZoKCk7SChOKTtIKE0pO3VoKCk7YnJlYWs7Y2FzZSA1OmhoKGQpO2JyZWFrO2Nhc2UgNDpmaCgpO2JyZWFrO2Nhc2UgMTM6SChQKTticmVhaztjYXNlIDE5OkgoUCk7YnJlYWs7Y2FzZSAxMDpyZyhkKTticmVhaztjYXNlIDIzOmNhc2UgMjQ6S2koKX1jPWMucmV0dXJufVU9YTtZPVRnKGEuY3VycmVudCxudWxsKTtXPXFqPXRqPWI7Vj0wO3NqPW51bGw7dWo9SGk9RGc9MH1cbmZ1bmN0aW9uIFNqKGEsYil7ZG97dmFyIGM9WTt0cnl7cWcoKTt2aC5jdXJyZW50PUdoO2lmKHloKXtmb3IodmFyIGQ9Ui5tZW1vaXplZFN0YXRlO251bGwhPT1kOyl7dmFyIGU9ZC5xdWV1ZTtudWxsIT09ZSYmKGUucGVuZGluZz1udWxsKTtkPWQubmV4dH15aD0hMX14aD0wO1Q9Uz1SPW51bGw7emg9ITE7cGouY3VycmVudD1udWxsO2lmKG51bGw9PT1jfHxudWxsPT09Yy5yZXR1cm4pe1Y9MTtzaj1iO1k9bnVsbDticmVha31hOnt2YXIgZj1hLGc9Yy5yZXR1cm4saD1jLGs9YjtiPVc7aC5mbGFnc3w9MjA0ODtoLmZpcnN0RWZmZWN0PWgubGFzdEVmZmVjdD1udWxsO2lmKG51bGwhPT1rJiZcIm9iamVjdFwiPT09dHlwZW9mIGsmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBrLnRoZW4pe3ZhciBsPWs7aWYoMD09PShoLm1vZGUmMikpe3ZhciBuPWguYWx0ZXJuYXRlO24/KGgudXBkYXRlUXVldWU9bi51cGRhdGVRdWV1ZSxoLm1lbW9pemVkU3RhdGU9bi5tZW1vaXplZFN0YXRlLGgubGFuZXM9bi5sYW5lcyk6XG4oaC51cGRhdGVRdWV1ZT1udWxsLGgubWVtb2l6ZWRTdGF0ZT1udWxsKX12YXIgQT0wIT09KFAuY3VycmVudCYxKSxwPWc7ZG97dmFyIEM7aWYoQz0xMz09PXAudGFnKXt2YXIgeD1wLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PXgpQz1udWxsIT09eC5kZWh5ZHJhdGVkPyEwOiExO2Vsc2V7dmFyIHc9cC5tZW1vaXplZFByb3BzO0M9dm9pZCAwPT09dy5mYWxsYmFjaz8hMTohMCE9PXcudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2s/ITA6QT8hMTohMH19aWYoQyl7dmFyIHo9cC51cGRhdGVRdWV1ZTtpZihudWxsPT09eil7dmFyIHU9bmV3IFNldDt1LmFkZChsKTtwLnVwZGF0ZVF1ZXVlPXV9ZWxzZSB6LmFkZChsKTtpZigwPT09KHAubW9kZSYyKSl7cC5mbGFnc3w9NjQ7aC5mbGFnc3w9MTYzODQ7aC5mbGFncyY9LTI5ODE7aWYoMT09PWgudGFnKWlmKG51bGw9PT1oLmFsdGVybmF0ZSloLnRhZz0xNztlbHNle3ZhciB0PXpnKC0xLDEpO3QudGFnPTI7QWcoaCx0KX1oLmxhbmVzfD0xO2JyZWFrIGF9az1cbnZvaWQgMDtoPWI7dmFyIHE9Zi5waW5nQ2FjaGU7bnVsbD09PXE/KHE9Zi5waW5nQ2FjaGU9bmV3IE9pLGs9bmV3IFNldCxxLnNldChsLGspKTooaz1xLmdldChsKSx2b2lkIDA9PT1rJiYoaz1uZXcgU2V0LHEuc2V0KGwsaykpKTtpZighay5oYXMoaCkpe2suYWRkKGgpO3ZhciB2PVlqLmJpbmQobnVsbCxmLGwsaCk7bC50aGVuKHYsdil9cC5mbGFnc3w9NDA5NjtwLmxhbmVzPWI7YnJlYWsgYX1wPXAucmV0dXJufXdoaWxlKG51bGwhPT1wKTtrPUVycm9yKChSYShoLnR5cGUpfHxcIkEgUmVhY3QgY29tcG9uZW50XCIpK1wiIHN1c3BlbmRlZCB3aGlsZSByZW5kZXJpbmcsIGJ1dCBubyBmYWxsYmFjayBVSSB3YXMgc3BlY2lmaWVkLlxcblxcbkFkZCBhIDxTdXNwZW5zZSBmYWxsYmFjaz0uLi4+IGNvbXBvbmVudCBoaWdoZXIgaW4gdGhlIHRyZWUgdG8gcHJvdmlkZSBhIGxvYWRpbmcgaW5kaWNhdG9yIG9yIHBsYWNlaG9sZGVyIHRvIGRpc3BsYXkuXCIpfTUhPT1WJiYoVj0yKTtrPU1pKGssaCk7cD1cbmc7ZG97c3dpdGNoKHAudGFnKXtjYXNlIDM6Zj1rO3AuZmxhZ3N8PTQwOTY7YiY9LWI7cC5sYW5lc3w9Yjt2YXIgSj1QaShwLGYsYik7QmcocCxKKTticmVhayBhO2Nhc2UgMTpmPWs7dmFyIEs9cC50eXBlLFE9cC5zdGF0ZU5vZGU7aWYoMD09PShwLmZsYWdzJjY0KSYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBLLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8bnVsbCE9PVEmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBRLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PVRpfHwhVGkuaGFzKFEpKSkpe3AuZmxhZ3N8PTQwOTY7YiY9LWI7cC5sYW5lc3w9Yjt2YXIgTD1TaShwLGYsYik7QmcocCxMKTticmVhayBhfX1wPXAucmV0dXJufXdoaWxlKG51bGwhPT1wKX1aaihjKX1jYXRjaCh2YSl7Yj12YTtZPT09YyYmbnVsbCE9PWMmJihZPWM9Yy5yZXR1cm4pO2NvbnRpbnVlfWJyZWFrfXdoaWxlKDEpfVxuZnVuY3Rpb24gUGooKXt2YXIgYT1vai5jdXJyZW50O29qLmN1cnJlbnQ9R2g7cmV0dXJuIG51bGw9PT1hP0doOmF9ZnVuY3Rpb24gVGooYSxiKXt2YXIgYz1YO1h8PTE2O3ZhciBkPVBqKCk7VT09PWEmJlc9PT1ifHxRaihhLGIpO2RvIHRyeXthaygpO2JyZWFrfWNhdGNoKGUpe1NqKGEsZSl9d2hpbGUoMSk7cWcoKTtYPWM7b2ouY3VycmVudD1kO2lmKG51bGwhPT1ZKXRocm93IEVycm9yKHkoMjYxKSk7VT1udWxsO1c9MDtyZXR1cm4gVn1mdW5jdGlvbiBhaygpe2Zvcig7bnVsbCE9PVk7KWJrKFkpfWZ1bmN0aW9uIFJqKCl7Zm9yKDtudWxsIT09WSYmIVFmKCk7KWJrKFkpfWZ1bmN0aW9uIGJrKGEpe3ZhciBiPWNrKGEuYWx0ZXJuYXRlLGEscWopO2EubWVtb2l6ZWRQcm9wcz1hLnBlbmRpbmdQcm9wcztudWxsPT09Yj9aaihhKTpZPWI7cGouY3VycmVudD1udWxsfVxuZnVuY3Rpb24gWmooYSl7dmFyIGI9YTtkb3t2YXIgYz1iLmFsdGVybmF0ZTthPWIucmV0dXJuO2lmKDA9PT0oYi5mbGFncyYyMDQ4KSl7Yz1HaShjLGIscWopO2lmKG51bGwhPT1jKXtZPWM7cmV0dXJufWM9YjtpZigyNCE9PWMudGFnJiYyMyE9PWMudGFnfHxudWxsPT09Yy5tZW1vaXplZFN0YXRlfHwwIT09KHFqJjEwNzM3NDE4MjQpfHwwPT09KGMubW9kZSY0KSl7Zm9yKHZhciBkPTAsZT1jLmNoaWxkO251bGwhPT1lOylkfD1lLmxhbmVzfGUuY2hpbGRMYW5lcyxlPWUuc2libGluZztjLmNoaWxkTGFuZXM9ZH1udWxsIT09YSYmMD09PShhLmZsYWdzJjIwNDgpJiYobnVsbD09PWEuZmlyc3RFZmZlY3QmJihhLmZpcnN0RWZmZWN0PWIuZmlyc3RFZmZlY3QpLG51bGwhPT1iLmxhc3RFZmZlY3QmJihudWxsIT09YS5sYXN0RWZmZWN0JiYoYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9Yi5maXJzdEVmZmVjdCksYS5sYXN0RWZmZWN0PWIubGFzdEVmZmVjdCksMTxiLmZsYWdzJiYobnVsbCE9PVxuYS5sYXN0RWZmZWN0P2EubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWI6YS5maXJzdEVmZmVjdD1iLGEubGFzdEVmZmVjdD1iKSl9ZWxzZXtjPUxpKGIpO2lmKG51bGwhPT1jKXtjLmZsYWdzJj0yMDQ3O1k9YztyZXR1cm59bnVsbCE9PWEmJihhLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1udWxsLGEuZmxhZ3N8PTIwNDgpfWI9Yi5zaWJsaW5nO2lmKG51bGwhPT1iKXtZPWI7cmV0dXJufVk9Yj1hfXdoaWxlKG51bGwhPT1iKTswPT09ViYmKFY9NSl9ZnVuY3Rpb24gVWooYSl7dmFyIGI9ZWcoKTtnZyg5OSxkay5iaW5kKG51bGwsYSxiKSk7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBkayhhLGIpe2RvIE9qKCk7d2hpbGUobnVsbCE9PXlqKTtpZigwIT09KFgmNDgpKXRocm93IEVycm9yKHkoMzI3KSk7dmFyIGM9YS5maW5pc2hlZFdvcms7aWYobnVsbD09PWMpcmV0dXJuIG51bGw7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkTGFuZXM9MDtpZihjPT09YS5jdXJyZW50KXRocm93IEVycm9yKHkoMTc3KSk7YS5jYWxsYmFja05vZGU9bnVsbDt2YXIgZD1jLmxhbmVzfGMuY2hpbGRMYW5lcyxlPWQsZj1hLnBlbmRpbmdMYW5lcyZ+ZTthLnBlbmRpbmdMYW5lcz1lO2Euc3VzcGVuZGVkTGFuZXM9MDthLnBpbmdlZExhbmVzPTA7YS5leHBpcmVkTGFuZXMmPWU7YS5tdXRhYmxlUmVhZExhbmVzJj1lO2EuZW50YW5nbGVkTGFuZXMmPWU7ZT1hLmVudGFuZ2xlbWVudHM7Zm9yKHZhciBnPWEuZXZlbnRUaW1lcyxoPWEuZXhwaXJhdGlvblRpbWVzOzA8Zjspe3ZhciBrPTMxLVZjKGYpLGw9MTw8aztlW2tdPTA7Z1trXT0tMTtoW2tdPS0xO2YmPX5sfW51bGwhPT1cbkNqJiYwPT09KGQmMjQpJiZDai5oYXMoYSkmJkNqLmRlbGV0ZShhKTthPT09VSYmKFk9VT1udWxsLFc9MCk7MTxjLmZsYWdzP251bGwhPT1jLmxhc3RFZmZlY3Q/KGMubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsZD1jLmZpcnN0RWZmZWN0KTpkPWM6ZD1jLmZpcnN0RWZmZWN0O2lmKG51bGwhPT1kKXtlPVg7WHw9MzI7cGouY3VycmVudD1udWxsO2tmPWZkO2c9TmUoKTtpZihPZShnKSl7aWYoXCJzZWxlY3Rpb25TdGFydFwiaW4gZyloPXtzdGFydDpnLnNlbGVjdGlvblN0YXJ0LGVuZDpnLnNlbGVjdGlvbkVuZH07ZWxzZSBhOmlmKGg9KGg9Zy5vd25lckRvY3VtZW50KSYmaC5kZWZhdWx0Vmlld3x8d2luZG93LChsPWguZ2V0U2VsZWN0aW9uJiZoLmdldFNlbGVjdGlvbigpKSYmMCE9PWwucmFuZ2VDb3VudCl7aD1sLmFuY2hvck5vZGU7Zj1sLmFuY2hvck9mZnNldDtrPWwuZm9jdXNOb2RlO2w9bC5mb2N1c09mZnNldDt0cnl7aC5ub2RlVHlwZSxrLm5vZGVUeXBlfWNhdGNoKHZhKXtoPW51bGw7XG5icmVhayBhfXZhciBuPTAsQT0tMSxwPS0xLEM9MCx4PTAsdz1nLHo9bnVsbDtiOmZvcig7Oyl7Zm9yKHZhciB1Ozspe3chPT1ofHwwIT09ZiYmMyE9PXcubm9kZVR5cGV8fChBPW4rZik7dyE9PWt8fDAhPT1sJiYzIT09dy5ub2RlVHlwZXx8KHA9bitsKTszPT09dy5ub2RlVHlwZSYmKG4rPXcubm9kZVZhbHVlLmxlbmd0aCk7aWYobnVsbD09PSh1PXcuZmlyc3RDaGlsZCkpYnJlYWs7ej13O3c9dX1mb3IoOzspe2lmKHc9PT1nKWJyZWFrIGI7ej09PWgmJisrQz09PWYmJihBPW4pO3o9PT1rJiYrK3g9PT1sJiYocD1uKTtpZihudWxsIT09KHU9dy5uZXh0U2libGluZykpYnJlYWs7dz16O3o9dy5wYXJlbnROb2RlfXc9dX1oPS0xPT09QXx8LTE9PT1wP251bGw6e3N0YXJ0OkEsZW5kOnB9fWVsc2UgaD1udWxsO2g9aHx8e3N0YXJ0OjAsZW5kOjB9fWVsc2UgaD1udWxsO2xmPXtmb2N1c2VkRWxlbTpnLHNlbGVjdGlvblJhbmdlOmh9O2ZkPSExO0lqPW51bGw7Smo9ITE7Wj1kO2RvIHRyeXtlaygpfWNhdGNoKHZhKXtpZihudWxsPT09XG5aKXRocm93IEVycm9yKHkoMzMwKSk7V2koWix2YSk7Wj1aLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVopO0lqPW51bGw7Wj1kO2RvIHRyeXtmb3IoZz1hO251bGwhPT1aOyl7dmFyIHQ9Wi5mbGFnczt0JjE2JiZwYihaLnN0YXRlTm9kZSxcIlwiKTtpZih0JjEyOCl7dmFyIHE9Wi5hbHRlcm5hdGU7aWYobnVsbCE9PXEpe3ZhciB2PXEucmVmO251bGwhPT12JiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIHY/dihudWxsKTp2LmN1cnJlbnQ9bnVsbCl9fXN3aXRjaCh0JjEwMzgpe2Nhc2UgMjpmaihaKTtaLmZsYWdzJj0tMzticmVhaztjYXNlIDY6ZmooWik7Wi5mbGFncyY9LTM7aWooWi5hbHRlcm5hdGUsWik7YnJlYWs7Y2FzZSAxMDI0OlouZmxhZ3MmPS0xMDI1O2JyZWFrO2Nhc2UgMTAyODpaLmZsYWdzJj0tMTAyNTtpaihaLmFsdGVybmF0ZSxaKTticmVhaztjYXNlIDQ6aWooWi5hbHRlcm5hdGUsWik7YnJlYWs7Y2FzZSA4Omg9WjtjaihnLGgpO3ZhciBKPWguYWx0ZXJuYXRlO2RqKGgpO251bGwhPT1cbkomJmRqKEopfVo9Wi5uZXh0RWZmZWN0fX1jYXRjaCh2YSl7aWYobnVsbD09PVopdGhyb3cgRXJyb3IoeSgzMzApKTtXaShaLHZhKTtaPVoubmV4dEVmZmVjdH13aGlsZShudWxsIT09Wik7dj1sZjtxPU5lKCk7dD12LmZvY3VzZWRFbGVtO2c9di5zZWxlY3Rpb25SYW5nZTtpZihxIT09dCYmdCYmdC5vd25lckRvY3VtZW50JiZNZSh0Lm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LHQpKXtudWxsIT09ZyYmT2UodCkmJihxPWcuc3RhcnQsdj1nLmVuZCx2b2lkIDA9PT12JiYodj1xKSxcInNlbGVjdGlvblN0YXJ0XCJpbiB0Pyh0LnNlbGVjdGlvblN0YXJ0PXEsdC5zZWxlY3Rpb25FbmQ9TWF0aC5taW4odix0LnZhbHVlLmxlbmd0aCkpOih2PShxPXQub3duZXJEb2N1bWVudHx8ZG9jdW1lbnQpJiZxLmRlZmF1bHRWaWV3fHx3aW5kb3csdi5nZXRTZWxlY3Rpb24mJih2PXYuZ2V0U2VsZWN0aW9uKCksaD10LnRleHRDb250ZW50Lmxlbmd0aCxKPU1hdGgubWluKGcuc3RhcnQsaCksZz12b2lkIDA9PT1cbmcuZW5kP0o6TWF0aC5taW4oZy5lbmQsaCksIXYuZXh0ZW5kJiZKPmcmJihoPWcsZz1KLEo9aCksaD1MZSh0LEopLGY9TGUodCxnKSxoJiZmJiYoMSE9PXYucmFuZ2VDb3VudHx8di5hbmNob3JOb2RlIT09aC5ub2RlfHx2LmFuY2hvck9mZnNldCE9PWgub2Zmc2V0fHx2LmZvY3VzTm9kZSE9PWYubm9kZXx8di5mb2N1c09mZnNldCE9PWYub2Zmc2V0KSYmKHE9cS5jcmVhdGVSYW5nZSgpLHEuc2V0U3RhcnQoaC5ub2RlLGgub2Zmc2V0KSx2LnJlbW92ZUFsbFJhbmdlcygpLEo+Zz8odi5hZGRSYW5nZShxKSx2LmV4dGVuZChmLm5vZGUsZi5vZmZzZXQpKToocS5zZXRFbmQoZi5ub2RlLGYub2Zmc2V0KSx2LmFkZFJhbmdlKHEpKSkpKSk7cT1bXTtmb3Iodj10O3Y9di5wYXJlbnROb2RlOykxPT09di5ub2RlVHlwZSYmcS5wdXNoKHtlbGVtZW50OnYsbGVmdDp2LnNjcm9sbExlZnQsdG9wOnYuc2Nyb2xsVG9wfSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIHQuZm9jdXMmJnQuZm9jdXMoKTtmb3IodD1cbjA7dDxxLmxlbmd0aDt0Kyspdj1xW3RdLHYuZWxlbWVudC5zY3JvbGxMZWZ0PXYubGVmdCx2LmVsZW1lbnQuc2Nyb2xsVG9wPXYudG9wfWZkPSEha2Y7bGY9a2Y9bnVsbDthLmN1cnJlbnQ9YztaPWQ7ZG8gdHJ5e2Zvcih0PWE7bnVsbCE9PVo7KXt2YXIgSz1aLmZsYWdzO0smMzYmJllpKHQsWi5hbHRlcm5hdGUsWik7aWYoSyYxMjgpe3E9dm9pZCAwO3ZhciBRPVoucmVmO2lmKG51bGwhPT1RKXt2YXIgTD1aLnN0YXRlTm9kZTtzd2l0Y2goWi50YWcpe2Nhc2UgNTpxPUw7YnJlYWs7ZGVmYXVsdDpxPUx9XCJmdW5jdGlvblwiPT09dHlwZW9mIFE/UShxKTpRLmN1cnJlbnQ9cX19Wj1aLm5leHRFZmZlY3R9fWNhdGNoKHZhKXtpZihudWxsPT09Wil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKFosdmEpO1o9Wi5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1aKTtaPW51bGw7JGYoKTtYPWV9ZWxzZSBhLmN1cnJlbnQ9YztpZih4ail4aj0hMSx5aj1hLHpqPWI7ZWxzZSBmb3IoWj1kO251bGwhPT1aOyliPVxuWi5uZXh0RWZmZWN0LFoubmV4dEVmZmVjdD1udWxsLFouZmxhZ3MmOCYmKEs9WixLLnNpYmxpbmc9bnVsbCxLLnN0YXRlTm9kZT1udWxsKSxaPWI7ZD1hLnBlbmRpbmdMYW5lczswPT09ZCYmKFRpPW51bGwpOzE9PT1kP2E9PT1Faj9EaisrOihEaj0wLEVqPWEpOkRqPTA7Yz1jLnN0YXRlTm9kZTtpZihNZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIE1mLm9uQ29tbWl0RmliZXJSb290KXRyeXtNZi5vbkNvbW1pdEZpYmVyUm9vdChMZixjLHZvaWQgMCw2ND09PShjLmN1cnJlbnQuZmxhZ3MmNjQpKX1jYXRjaCh2YSl7fU1qKGEsTygpKTtpZihRaSl0aHJvdyBRaT0hMSxhPVJpLFJpPW51bGwsYTtpZigwIT09KFgmOCkpcmV0dXJuIG51bGw7aWcoKTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGVrKCl7Zm9yKDtudWxsIT09Wjspe3ZhciBhPVouYWx0ZXJuYXRlO0pqfHxudWxsPT09SWp8fCgwIT09KFouZmxhZ3MmOCk/ZGMoWixJaikmJihKaj0hMCk6MTM9PT1aLnRhZyYmbWooYSxaKSYmZGMoWixJaikmJihKaj0hMCkpO3ZhciBiPVouZmxhZ3M7MCE9PShiJjI1NikmJlhpKGEsWik7MD09PShiJjUxMil8fHhqfHwoeGo9ITAsaGcoOTcsZnVuY3Rpb24oKXtPaigpO3JldHVybiBudWxsfSkpO1o9Wi5uZXh0RWZmZWN0fX1mdW5jdGlvbiBPaigpe2lmKDkwIT09emope3ZhciBhPTk3PHpqPzk3OnpqO3pqPTkwO3JldHVybiBnZyhhLGZrKX1yZXR1cm4hMX1mdW5jdGlvbiAkaShhLGIpe0FqLnB1c2goYixhKTt4anx8KHhqPSEwLGhnKDk3LGZ1bmN0aW9uKCl7T2ooKTtyZXR1cm4gbnVsbH0pKX1mdW5jdGlvbiBaaShhLGIpe0JqLnB1c2goYixhKTt4anx8KHhqPSEwLGhnKDk3LGZ1bmN0aW9uKCl7T2ooKTtyZXR1cm4gbnVsbH0pKX1cbmZ1bmN0aW9uIGZrKCl7aWYobnVsbD09PXlqKXJldHVybiExO3ZhciBhPXlqO3lqPW51bGw7aWYoMCE9PShYJjQ4KSl0aHJvdyBFcnJvcih5KDMzMSkpO3ZhciBiPVg7WHw9MzI7dmFyIGM9Qmo7Qmo9W107Zm9yKHZhciBkPTA7ZDxjLmxlbmd0aDtkKz0yKXt2YXIgZT1jW2RdLGY9Y1tkKzFdLGc9ZS5kZXN0cm95O2UuZGVzdHJveT12b2lkIDA7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcpdHJ5e2coKX1jYXRjaChrKXtpZihudWxsPT09Zil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKGYsayl9fWM9QWo7QWo9W107Zm9yKGQ9MDtkPGMubGVuZ3RoO2QrPTIpe2U9Y1tkXTtmPWNbZCsxXTt0cnl7dmFyIGg9ZS5jcmVhdGU7ZS5kZXN0cm95PWgoKX1jYXRjaChrKXtpZihudWxsPT09Zil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKGYsayl9fWZvcihoPWEuY3VycmVudC5maXJzdEVmZmVjdDtudWxsIT09aDspYT1oLm5leHRFZmZlY3QsaC5uZXh0RWZmZWN0PW51bGwsaC5mbGFncyY4JiYoaC5zaWJsaW5nPVxubnVsbCxoLnN0YXRlTm9kZT1udWxsKSxoPWE7WD1iO2lnKCk7cmV0dXJuITB9ZnVuY3Rpb24gZ2soYSxiLGMpe2I9TWkoYyxiKTtiPVBpKGEsYiwxKTtBZyhhLGIpO2I9SGcoKTthPUtqKGEsMSk7bnVsbCE9PWEmJigkYyhhLDEsYiksTWooYSxiKSl9XG5mdW5jdGlvbiBXaShhLGIpe2lmKDM9PT1hLnRhZylnayhhLGEsYik7ZWxzZSBmb3IodmFyIGM9YS5yZXR1cm47bnVsbCE9PWM7KXtpZigzPT09Yy50YWcpe2drKGMsYSxiKTticmVha31lbHNlIGlmKDE9PT1jLnRhZyl7dmFyIGQ9Yy5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGMudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PVRpfHwhVGkuaGFzKGQpKSl7YT1NaShiLGEpO3ZhciBlPVNpKGMsYSwxKTtBZyhjLGUpO2U9SGcoKTtjPUtqKGMsMSk7aWYobnVsbCE9PWMpJGMoYywxLGUpLE1qKGMsZSk7ZWxzZSBpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1UaXx8IVRpLmhhcyhkKSkpdHJ5e2QuY29tcG9uZW50RGlkQ2F0Y2goYixhKX1jYXRjaChmKXt9YnJlYWt9fWM9Yy5yZXR1cm59fVxuZnVuY3Rpb24gWWooYSxiLGMpe3ZhciBkPWEucGluZ0NhY2hlO251bGwhPT1kJiZkLmRlbGV0ZShiKTtiPUhnKCk7YS5waW5nZWRMYW5lc3w9YS5zdXNwZW5kZWRMYW5lcyZjO1U9PT1hJiYoVyZjKT09PWMmJig0PT09Vnx8Mz09PVYmJihXJjYyOTE0NTYwKT09PVcmJjUwMD5PKCktamo/UWooYSwwKTp1anw9Yyk7TWooYSxiKX1mdW5jdGlvbiBsaihhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO251bGwhPT1jJiZjLmRlbGV0ZShiKTtiPTA7MD09PWImJihiPWEubW9kZSwwPT09KGImMik/Yj0xOjA9PT0oYiY0KT9iPTk5PT09ZWcoKT8xOjI6KDA9PT1HaiYmKEdqPXRqKSxiPVljKDYyOTE0NTYwJn5HaiksMD09PWImJihiPTQxOTQzMDQpKSk7Yz1IZygpO2E9S2ooYSxiKTtudWxsIT09YSYmKCRjKGEsYixjKSxNaihhLGMpKX12YXIgY2s7XG5jaz1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9Yi5sYW5lcztpZihudWxsIT09YSlpZihhLm1lbW9pemVkUHJvcHMhPT1iLnBlbmRpbmdQcm9wc3x8Ti5jdXJyZW50KXVnPSEwO2Vsc2UgaWYoMCE9PShjJmQpKXVnPTAhPT0oYS5mbGFncyYxNjM4NCk/ITA6ITE7ZWxzZXt1Zz0hMTtzd2l0Y2goYi50YWcpe2Nhc2UgMzpyaShiKTtzaCgpO2JyZWFrO2Nhc2UgNTpnaChiKTticmVhaztjYXNlIDE6RmYoYi50eXBlKSYmSmYoYik7YnJlYWs7Y2FzZSA0OmVoKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7YnJlYWs7Y2FzZSAxMDpkPWIubWVtb2l6ZWRQcm9wcy52YWx1ZTt2YXIgZT1iLnR5cGUuX2NvbnRleHQ7SShtZyxlLl9jdXJyZW50VmFsdWUpO2UuX2N1cnJlbnRWYWx1ZT1kO2JyZWFrO2Nhc2UgMTM6aWYobnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSl7aWYoMCE9PShjJmIuY2hpbGQuY2hpbGRMYW5lcykpcmV0dXJuIHRpKGEsYixjKTtJKFAsUC5jdXJyZW50JjEpO2I9aGkoYSxiLGMpO3JldHVybiBudWxsIT09XG5iP2Iuc2libGluZzpudWxsfUkoUCxQLmN1cnJlbnQmMSk7YnJlYWs7Y2FzZSAxOTpkPTAhPT0oYyZiLmNoaWxkTGFuZXMpO2lmKDAhPT0oYS5mbGFncyY2NCkpe2lmKGQpcmV0dXJuIEFpKGEsYixjKTtiLmZsYWdzfD02NH1lPWIubWVtb2l6ZWRTdGF0ZTtudWxsIT09ZSYmKGUucmVuZGVyaW5nPW51bGwsZS50YWlsPW51bGwsZS5sYXN0RWZmZWN0PW51bGwpO0koUCxQLmN1cnJlbnQpO2lmKGQpYnJlYWs7ZWxzZSByZXR1cm4gbnVsbDtjYXNlIDIzOmNhc2UgMjQ6cmV0dXJuIGIubGFuZXM9MCxtaShhLGIsYyl9cmV0dXJuIGhpKGEsYixjKX1lbHNlIHVnPSExO2IubGFuZXM9MDtzd2l0Y2goYi50YWcpe2Nhc2UgMjpkPWIudHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmZsYWdzfD0yKTthPWIucGVuZGluZ1Byb3BzO2U9RWYoYixNLmN1cnJlbnQpO3RnKGIsYyk7ZT1DaChudWxsLGIsZCxhLGUsYyk7Yi5mbGFnc3w9MTtpZihcIm9iamVjdFwiPT09XG50eXBlb2YgZSYmbnVsbCE9PWUmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLnJlbmRlciYmdm9pZCAwPT09ZS4kJHR5cGVvZil7Yi50YWc9MTtiLm1lbW9pemVkU3RhdGU9bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7aWYoRmYoZCkpe3ZhciBmPSEwO0pmKGIpfWVsc2UgZj0hMTtiLm1lbW9pemVkU3RhdGU9bnVsbCE9PWUuc3RhdGUmJnZvaWQgMCE9PWUuc3RhdGU/ZS5zdGF0ZTpudWxsO3hnKGIpO3ZhciBnPWQuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiZHZyhiLGQsZyxhKTtlLnVwZGF0ZXI9S2c7Yi5zdGF0ZU5vZGU9ZTtlLl9yZWFjdEludGVybmFscz1iO09nKGIsZCxhLGMpO2I9cWkobnVsbCxiLGQsITAsZixjKX1lbHNlIGIudGFnPTAsZmkobnVsbCxiLGUsYyksYj1iLmNoaWxkO3JldHVybiBiO2Nhc2UgMTY6ZT1iLmVsZW1lbnRUeXBlO2E6e251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZmxhZ3N8PTIpO1xuYT1iLnBlbmRpbmdQcm9wcztmPWUuX2luaXQ7ZT1mKGUuX3BheWxvYWQpO2IudHlwZT1lO2Y9Yi50YWc9aGsoZSk7YT1sZyhlLGEpO3N3aXRjaChmKXtjYXNlIDA6Yj1saShudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxOmI9cGkobnVsbCxiLGUsYSxjKTticmVhayBhO2Nhc2UgMTE6Yj1naShudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxNDpiPWlpKG51bGwsYixlLGxnKGUudHlwZSxhKSxkLGMpO2JyZWFrIGF9dGhyb3cgRXJyb3IoeSgzMDYsZSxcIlwiKSk7fXJldHVybiBiO2Nhc2UgMDpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6bGcoZCxlKSxsaShhLGIsZCxlLGMpO2Nhc2UgMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6bGcoZCxlKSxwaShhLGIsZCxlLGMpO2Nhc2UgMzpyaShiKTtkPWIudXBkYXRlUXVldWU7aWYobnVsbD09PWF8fG51bGw9PT1kKXRocm93IEVycm9yKHkoMjgyKSk7XG5kPWIucGVuZGluZ1Byb3BzO2U9Yi5tZW1vaXplZFN0YXRlO2U9bnVsbCE9PWU/ZS5lbGVtZW50Om51bGw7eWcoYSxiKTtDZyhiLGQsbnVsbCxjKTtkPWIubWVtb2l6ZWRTdGF0ZS5lbGVtZW50O2lmKGQ9PT1lKXNoKCksYj1oaShhLGIsYyk7ZWxzZXtlPWIuc3RhdGVOb2RlO2lmKGY9ZS5oeWRyYXRlKWtoPXJmKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8uZmlyc3RDaGlsZCksamg9YixmPWxoPSEwO2lmKGYpe2E9ZS5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhO2lmKG51bGwhPWEpZm9yKGU9MDtlPGEubGVuZ3RoO2UrPTIpZj1hW2VdLGYuX3dvcmtJblByb2dyZXNzVmVyc2lvblByaW1hcnk9YVtlKzFdLHRoLnB1c2goZik7Yz1aZyhiLG51bGwsZCxjKTtmb3IoYi5jaGlsZD1jO2M7KWMuZmxhZ3M9Yy5mbGFncyYtM3wxMDI0LGM9Yy5zaWJsaW5nfWVsc2UgZmkoYSxiLGQsYyksc2goKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA1OnJldHVybiBnaChiKSxudWxsPT09YSYmXG5waChiKSxkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGY9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOm51bGwsZz1lLmNoaWxkcmVuLG5mKGQsZSk/Zz1udWxsOm51bGwhPT1mJiZuZihkLGYpJiYoYi5mbGFnc3w9MTYpLG9pKGEsYiksZmkoYSxiLGcsYyksYi5jaGlsZDtjYXNlIDY6cmV0dXJuIG51bGw9PT1hJiZwaChiKSxudWxsO2Nhc2UgMTM6cmV0dXJuIHRpKGEsYixjKTtjYXNlIDQ6cmV0dXJuIGVoKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksZD1iLnBlbmRpbmdQcm9wcyxudWxsPT09YT9iLmNoaWxkPVlnKGIsbnVsbCxkLGMpOmZpKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6bGcoZCxlKSxnaShhLGIsZCxlLGMpO2Nhc2UgNzpyZXR1cm4gZmkoYSxiLGIucGVuZGluZ1Byb3BzLGMpLGIuY2hpbGQ7Y2FzZSA4OnJldHVybiBmaShhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sXG5jKSxiLmNoaWxkO2Nhc2UgMTI6cmV0dXJuIGZpKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixjKSxiLmNoaWxkO2Nhc2UgMTA6YTp7ZD1iLnR5cGUuX2NvbnRleHQ7ZT1iLnBlbmRpbmdQcm9wcztnPWIubWVtb2l6ZWRQcm9wcztmPWUudmFsdWU7dmFyIGg9Yi50eXBlLl9jb250ZXh0O0kobWcsaC5fY3VycmVudFZhbHVlKTtoLl9jdXJyZW50VmFsdWU9ZjtpZihudWxsIT09ZylpZihoPWcudmFsdWUsZj1IZShoLGYpPzA6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLl9jYWxjdWxhdGVDaGFuZ2VkQml0cz9kLl9jYWxjdWxhdGVDaGFuZ2VkQml0cyhoLGYpOjEwNzM3NDE4MjMpfDAsMD09PWYpe2lmKGcuY2hpbGRyZW49PT1lLmNoaWxkcmVuJiYhTi5jdXJyZW50KXtiPWhpKGEsYixjKTticmVhayBhfX1lbHNlIGZvcihoPWIuY2hpbGQsbnVsbCE9PWgmJihoLnJldHVybj1iKTtudWxsIT09aDspe3ZhciBrPWguZGVwZW5kZW5jaWVzO2lmKG51bGwhPT1rKXtnPWguY2hpbGQ7Zm9yKHZhciBsPVxuay5maXJzdENvbnRleHQ7bnVsbCE9PWw7KXtpZihsLmNvbnRleHQ9PT1kJiYwIT09KGwub2JzZXJ2ZWRCaXRzJmYpKXsxPT09aC50YWcmJihsPXpnKC0xLGMmLWMpLGwudGFnPTIsQWcoaCxsKSk7aC5sYW5lc3w9YztsPWguYWx0ZXJuYXRlO251bGwhPT1sJiYobC5sYW5lc3w9Yyk7c2coaC5yZXR1cm4sYyk7ay5sYW5lc3w9YzticmVha31sPWwubmV4dH19ZWxzZSBnPTEwPT09aC50YWc/aC50eXBlPT09Yi50eXBlP251bGw6aC5jaGlsZDpoLmNoaWxkO2lmKG51bGwhPT1nKWcucmV0dXJuPWg7ZWxzZSBmb3IoZz1oO251bGwhPT1nOyl7aWYoZz09PWIpe2c9bnVsbDticmVha31oPWcuc2libGluZztpZihudWxsIT09aCl7aC5yZXR1cm49Zy5yZXR1cm47Zz1oO2JyZWFrfWc9Zy5yZXR1cm59aD1nfWZpKGEsYixlLmNoaWxkcmVuLGMpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDk6cmV0dXJuIGU9Yi50eXBlLGY9Yi5wZW5kaW5nUHJvcHMsZD1mLmNoaWxkcmVuLHRnKGIsYyksZT12ZyhlLFxuZi51bnN0YWJsZV9vYnNlcnZlZEJpdHMpLGQ9ZChlKSxiLmZsYWdzfD0xLGZpKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxNDpyZXR1cm4gZT1iLnR5cGUsZj1sZyhlLGIucGVuZGluZ1Byb3BzKSxmPWxnKGUudHlwZSxmKSxpaShhLGIsZSxmLGQsYyk7Y2FzZSAxNTpyZXR1cm4ga2koYSxiLGIudHlwZSxiLnBlbmRpbmdQcm9wcyxkLGMpO2Nhc2UgMTc6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmxnKGQsZSksbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5mbGFnc3w9MiksYi50YWc9MSxGZihkKT8oYT0hMCxKZihiKSk6YT0hMSx0ZyhiLGMpLE1nKGIsZCxlKSxPZyhiLGQsZSxjKSxxaShudWxsLGIsZCwhMCxhLGMpO2Nhc2UgMTk6cmV0dXJuIEFpKGEsYixjKTtjYXNlIDIzOnJldHVybiBtaShhLGIsYyk7Y2FzZSAyNDpyZXR1cm4gbWkoYSxiLGMpfXRocm93IEVycm9yKHkoMTU2LGIudGFnKSk7XG59O2Z1bmN0aW9uIGlrKGEsYixjLGQpe3RoaXMudGFnPWE7dGhpcy5rZXk9Yzt0aGlzLnNpYmxpbmc9dGhpcy5jaGlsZD10aGlzLnJldHVybj10aGlzLnN0YXRlTm9kZT10aGlzLnR5cGU9dGhpcy5lbGVtZW50VHlwZT1udWxsO3RoaXMuaW5kZXg9MDt0aGlzLnJlZj1udWxsO3RoaXMucGVuZGluZ1Byb3BzPWI7dGhpcy5kZXBlbmRlbmNpZXM9dGhpcy5tZW1vaXplZFN0YXRlPXRoaXMudXBkYXRlUXVldWU9dGhpcy5tZW1vaXplZFByb3BzPW51bGw7dGhpcy5tb2RlPWQ7dGhpcy5mbGFncz0wO3RoaXMubGFzdEVmZmVjdD10aGlzLmZpcnN0RWZmZWN0PXRoaXMubmV4dEVmZmVjdD1udWxsO3RoaXMuY2hpbGRMYW5lcz10aGlzLmxhbmVzPTA7dGhpcy5hbHRlcm5hdGU9bnVsbH1mdW5jdGlvbiBuaChhLGIsYyxkKXtyZXR1cm4gbmV3IGlrKGEsYixjLGQpfWZ1bmN0aW9uIGppKGEpe2E9YS5wcm90b3R5cGU7cmV0dXJuISghYXx8IWEuaXNSZWFjdENvbXBvbmVudCl9XG5mdW5jdGlvbiBoayhhKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gamkoYSk/MTowO2lmKHZvaWQgMCE9PWEmJm51bGwhPT1hKXthPWEuJCR0eXBlb2Y7aWYoYT09PUFhKXJldHVybiAxMTtpZihhPT09RGEpcmV0dXJuIDE0fXJldHVybiAyfVxuZnVuY3Rpb24gVGcoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsPT09Yz8oYz1uaChhLnRhZyxiLGEua2V5LGEubW9kZSksYy5lbGVtZW50VHlwZT1hLmVsZW1lbnRUeXBlLGMudHlwZT1hLnR5cGUsYy5zdGF0ZU5vZGU9YS5zdGF0ZU5vZGUsYy5hbHRlcm5hdGU9YSxhLmFsdGVybmF0ZT1jKTooYy5wZW5kaW5nUHJvcHM9YixjLnR5cGU9YS50eXBlLGMuZmxhZ3M9MCxjLm5leHRFZmZlY3Q9bnVsbCxjLmZpcnN0RWZmZWN0PW51bGwsYy5sYXN0RWZmZWN0PW51bGwpO2MuY2hpbGRMYW5lcz1hLmNoaWxkTGFuZXM7Yy5sYW5lcz1hLmxhbmVzO2MuY2hpbGQ9YS5jaGlsZDtjLm1lbW9pemVkUHJvcHM9YS5tZW1vaXplZFByb3BzO2MubWVtb2l6ZWRTdGF0ZT1hLm1lbW9pemVkU3RhdGU7Yy51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlO2I9YS5kZXBlbmRlbmNpZXM7Yy5kZXBlbmRlbmNpZXM9bnVsbD09PWI/bnVsbDp7bGFuZXM6Yi5sYW5lcyxmaXJzdENvbnRleHQ6Yi5maXJzdENvbnRleHR9O1xuYy5zaWJsaW5nPWEuc2libGluZztjLmluZGV4PWEuaW5kZXg7Yy5yZWY9YS5yZWY7cmV0dXJuIGN9XG5mdW5jdGlvbiBWZyhhLGIsYyxkLGUsZil7dmFyIGc9MjtkPWE7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpamkoYSkmJihnPTEpO2Vsc2UgaWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKWc9NTtlbHNlIGE6c3dpdGNoKGEpe2Nhc2UgdWE6cmV0dXJuIFhnKGMuY2hpbGRyZW4sZSxmLGIpO2Nhc2UgSGE6Zz04O2V8PTE2O2JyZWFrO2Nhc2Ugd2E6Zz04O2V8PTE7YnJlYWs7Y2FzZSB4YTpyZXR1cm4gYT1uaCgxMixjLGIsZXw4KSxhLmVsZW1lbnRUeXBlPXhhLGEudHlwZT14YSxhLmxhbmVzPWYsYTtjYXNlIEJhOnJldHVybiBhPW5oKDEzLGMsYixlKSxhLnR5cGU9QmEsYS5lbGVtZW50VHlwZT1CYSxhLmxhbmVzPWYsYTtjYXNlIENhOnJldHVybiBhPW5oKDE5LGMsYixlKSxhLmVsZW1lbnRUeXBlPUNhLGEubGFuZXM9ZixhO2Nhc2UgSWE6cmV0dXJuIHZpKGMsZSxmLGIpO2Nhc2UgSmE6cmV0dXJuIGE9bmgoMjQsYyxiLGUpLGEuZWxlbWVudFR5cGU9SmEsYS5sYW5lcz1mLGE7ZGVmYXVsdDppZihcIm9iamVjdFwiPT09XG50eXBlb2YgYSYmbnVsbCE9PWEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgeWE6Zz0xMDticmVhayBhO2Nhc2UgemE6Zz05O2JyZWFrIGE7Y2FzZSBBYTpnPTExO2JyZWFrIGE7Y2FzZSBEYTpnPTE0O2JyZWFrIGE7Y2FzZSBFYTpnPTE2O2Q9bnVsbDticmVhayBhO2Nhc2UgRmE6Zz0yMjticmVhayBhfXRocm93IEVycm9yKHkoMTMwLG51bGw9PWE/YTp0eXBlb2YgYSxcIlwiKSk7fWI9bmgoZyxjLGIsZSk7Yi5lbGVtZW50VHlwZT1hO2IudHlwZT1kO2IubGFuZXM9ZjtyZXR1cm4gYn1mdW5jdGlvbiBYZyhhLGIsYyxkKXthPW5oKDcsYSxkLGIpO2EubGFuZXM9YztyZXR1cm4gYX1mdW5jdGlvbiB2aShhLGIsYyxkKXthPW5oKDIzLGEsZCxiKTthLmVsZW1lbnRUeXBlPUlhO2EubGFuZXM9YztyZXR1cm4gYX1mdW5jdGlvbiBVZyhhLGIsYyl7YT1uaCg2LGEsbnVsbCxiKTthLmxhbmVzPWM7cmV0dXJuIGF9XG5mdW5jdGlvbiBXZyhhLGIsYyl7Yj1uaCg0LG51bGwhPT1hLmNoaWxkcmVuP2EuY2hpbGRyZW46W10sYS5rZXksYik7Yi5sYW5lcz1jO2Iuc3RhdGVOb2RlPXtjb250YWluZXJJbmZvOmEuY29udGFpbmVySW5mbyxwZW5kaW5nQ2hpbGRyZW46bnVsbCxpbXBsZW1lbnRhdGlvbjphLmltcGxlbWVudGF0aW9ufTtyZXR1cm4gYn1cbmZ1bmN0aW9uIGprKGEsYixjKXt0aGlzLnRhZz1iO3RoaXMuY29udGFpbmVySW5mbz1hO3RoaXMuZmluaXNoZWRXb3JrPXRoaXMucGluZ0NhY2hlPXRoaXMuY3VycmVudD10aGlzLnBlbmRpbmdDaGlsZHJlbj1udWxsO3RoaXMudGltZW91dEhhbmRsZT0tMTt0aGlzLnBlbmRpbmdDb250ZXh0PXRoaXMuY29udGV4dD1udWxsO3RoaXMuaHlkcmF0ZT1jO3RoaXMuY2FsbGJhY2tOb2RlPW51bGw7dGhpcy5jYWxsYmFja1ByaW9yaXR5PTA7dGhpcy5ldmVudFRpbWVzPVpjKDApO3RoaXMuZXhwaXJhdGlvblRpbWVzPVpjKC0xKTt0aGlzLmVudGFuZ2xlZExhbmVzPXRoaXMuZmluaXNoZWRMYW5lcz10aGlzLm11dGFibGVSZWFkTGFuZXM9dGhpcy5leHBpcmVkTGFuZXM9dGhpcy5waW5nZWRMYW5lcz10aGlzLnN1c3BlbmRlZExhbmVzPXRoaXMucGVuZGluZ0xhbmVzPTA7dGhpcy5lbnRhbmdsZW1lbnRzPVpjKDApO3RoaXMubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YT1udWxsfVxuZnVuY3Rpb24ga2soYSxiLGMpe3ZhciBkPTM8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTpudWxsO3JldHVybnskJHR5cGVvZjp0YSxrZXk6bnVsbD09ZD9udWxsOlwiXCIrZCxjaGlsZHJlbjphLGNvbnRhaW5lckluZm86YixpbXBsZW1lbnRhdGlvbjpjfX1cbmZ1bmN0aW9uIGxrKGEsYixjLGQpe3ZhciBlPWIuY3VycmVudCxmPUhnKCksZz1JZyhlKTthOmlmKGMpe2M9Yy5fcmVhY3RJbnRlcm5hbHM7Yjp7aWYoWmIoYykhPT1jfHwxIT09Yy50YWcpdGhyb3cgRXJyb3IoeSgxNzApKTt2YXIgaD1jO2Rve3N3aXRjaChoLnRhZyl7Y2FzZSAzOmg9aC5zdGF0ZU5vZGUuY29udGV4dDticmVhayBiO2Nhc2UgMTppZihGZihoLnR5cGUpKXtoPWguc3RhdGVOb2RlLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0O2JyZWFrIGJ9fWg9aC5yZXR1cm59d2hpbGUobnVsbCE9PWgpO3Rocm93IEVycm9yKHkoMTcxKSk7fWlmKDE9PT1jLnRhZyl7dmFyIGs9Yy50eXBlO2lmKEZmKGspKXtjPUlmKGMsayxoKTticmVhayBhfX1jPWh9ZWxzZSBjPUNmO251bGw9PT1iLmNvbnRleHQ/Yi5jb250ZXh0PWM6Yi5wZW5kaW5nQ29udGV4dD1jO2I9emcoZixnKTtiLnBheWxvYWQ9e2VsZW1lbnQ6YX07ZD12b2lkIDA9PT1kP251bGw6ZDtudWxsIT09XG5kJiYoYi5jYWxsYmFjaz1kKTtBZyhlLGIpO0pnKGUsZyxmKTtyZXR1cm4gZ31mdW5jdGlvbiBtayhhKXthPWEuY3VycmVudDtpZighYS5jaGlsZClyZXR1cm4gbnVsbDtzd2l0Y2goYS5jaGlsZC50YWcpe2Nhc2UgNTpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGU7ZGVmYXVsdDpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGV9fWZ1bmN0aW9uIG5rKGEsYil7YT1hLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWEmJm51bGwhPT1hLmRlaHlkcmF0ZWQpe3ZhciBjPWEucmV0cnlMYW5lO2EucmV0cnlMYW5lPTAhPT1jJiZjPGI/YzpifX1mdW5jdGlvbiBvayhhLGIpe25rKGEsYik7KGE9YS5hbHRlcm5hdGUpJiZuayhhLGIpfWZ1bmN0aW9uIHBrKCl7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBxayhhLGIsYyl7dmFyIGQ9bnVsbCE9YyYmbnVsbCE9Yy5oeWRyYXRpb25PcHRpb25zJiZjLmh5ZHJhdGlvbk9wdGlvbnMubXV0YWJsZVNvdXJjZXN8fG51bGw7Yz1uZXcgamsoYSxiLG51bGwhPWMmJiEwPT09Yy5oeWRyYXRlKTtiPW5oKDMsbnVsbCxudWxsLDI9PT1iPzc6MT09PWI/MzowKTtjLmN1cnJlbnQ9YjtiLnN0YXRlTm9kZT1jO3hnKGIpO2FbZmZdPWMuY3VycmVudDtjZig4PT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YSk7aWYoZClmb3IoYT0wO2E8ZC5sZW5ndGg7YSsrKXtiPWRbYV07dmFyIGU9Yi5fZ2V0VmVyc2lvbjtlPWUoYi5fc291cmNlKTtudWxsPT1jLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGE/Yy5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhPVtiLGVdOmMubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YS5wdXNoKGIsZSl9dGhpcy5faW50ZXJuYWxSb290PWN9XG5xay5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEpe2xrKGEsdGhpcy5faW50ZXJuYWxSb290LG51bGwsbnVsbCl9O3FrLnByb3RvdHlwZS51bm1vdW50PWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5faW50ZXJuYWxSb290LGI9YS5jb250YWluZXJJbmZvO2xrKG51bGwsYSxudWxsLGZ1bmN0aW9uKCl7YltmZl09bnVsbH0pfTtmdW5jdGlvbiByayhhKXtyZXR1cm4hKCFhfHwxIT09YS5ub2RlVHlwZSYmOSE9PWEubm9kZVR5cGUmJjExIT09YS5ub2RlVHlwZSYmKDghPT1hLm5vZGVUeXBlfHxcIiByZWFjdC1tb3VudC1wb2ludC11bnN0YWJsZSBcIiE9PWEubm9kZVZhbHVlKSl9XG5mdW5jdGlvbiBzayhhLGIpe2J8fChiPWE/OT09PWEubm9kZVR5cGU/YS5kb2N1bWVudEVsZW1lbnQ6YS5maXJzdENoaWxkOm51bGwsYj0hKCFifHwxIT09Yi5ub2RlVHlwZXx8IWIuaGFzQXR0cmlidXRlKFwiZGF0YS1yZWFjdHJvb3RcIikpKTtpZighYilmb3IodmFyIGM7Yz1hLmxhc3RDaGlsZDspYS5yZW1vdmVDaGlsZChjKTtyZXR1cm4gbmV3IHFrKGEsMCxiP3toeWRyYXRlOiEwfTp2b2lkIDApfVxuZnVuY3Rpb24gdGsoYSxiLGMsZCxlKXt2YXIgZj1jLl9yZWFjdFJvb3RDb250YWluZXI7aWYoZil7dmFyIGc9Zi5faW50ZXJuYWxSb290O2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaD1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1tayhnKTtoLmNhbGwoYSl9fWxrKGIsZyxhLGUpfWVsc2V7Zj1jLl9yZWFjdFJvb3RDb250YWluZXI9c2soYyxkKTtnPWYuX2ludGVybmFsUm9vdDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGs9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9bWsoZyk7ay5jYWxsKGEpfX1YaihmdW5jdGlvbigpe2xrKGIsZyxhLGUpfSl9cmV0dXJuIG1rKGcpfWVjPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPUhnKCk7SmcoYSw0LGIpO29rKGEsNCl9fTtmYz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1IZygpO0pnKGEsNjcxMDg4NjQsYik7b2soYSw2NzEwODg2NCl9fTtcbmdjPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPUhnKCksYz1JZyhhKTtKZyhhLGMsYik7b2soYSxjKX19O2hjPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGIoKX07XG55Yj1mdW5jdGlvbihhLGIsYyl7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOmFiKGEsYyk7Yj1jLm5hbWU7aWYoXCJyYWRpb1wiPT09Yy50eXBlJiZudWxsIT1iKXtmb3IoYz1hO2MucGFyZW50Tm9kZTspYz1jLnBhcmVudE5vZGU7Yz1jLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFtuYW1lPVwiK0pTT04uc3RyaW5naWZ5KFwiXCIrYikrJ11bdHlwZT1cInJhZGlvXCJdJyk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKyl7dmFyIGQ9Y1tiXTtpZihkIT09YSYmZC5mb3JtPT09YS5mb3JtKXt2YXIgZT1EYihkKTtpZighZSl0aHJvdyBFcnJvcih5KDkwKSk7V2EoZCk7YWIoZCxlKX19fWJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmliKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy52YWx1ZSxudWxsIT1iJiZmYihhLCEhYy5tdWx0aXBsZSxiLCExKX19O0diPVdqO1xuSGI9ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1YO1h8PTQ7dHJ5e3JldHVybiBnZyg5OCxhLmJpbmQobnVsbCxiLGMsZCxlKSl9ZmluYWxseXtYPWYsMD09PVgmJih3aigpLGlnKCkpfX07SWI9ZnVuY3Rpb24oKXswPT09KFgmNDkpJiYoVmooKSxPaigpKX07SmI9ZnVuY3Rpb24oYSxiKXt2YXIgYz1YO1h8PTI7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7WD1jLDA9PT1YJiYod2ooKSxpZygpKX19O2Z1bmN0aW9uIHVrKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7aWYoIXJrKGIpKXRocm93IEVycm9yKHkoMjAwKSk7cmV0dXJuIGtrKGEsYixudWxsLGMpfXZhciB2az17RXZlbnRzOltDYix1ZSxEYixFYixGYixPaix7Y3VycmVudDohMX1dfSx3az17ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6d2MsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxNy4wLjJcIixyZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9O1xudmFyIHhrPXtidW5kbGVUeXBlOndrLmJ1bmRsZVR5cGUsdmVyc2lvbjp3ay52ZXJzaW9uLHJlbmRlcmVyUGFja2FnZU5hbWU6d2sucmVuZGVyZXJQYWNrYWdlTmFtZSxyZW5kZXJlckNvbmZpZzp3ay5yZW5kZXJlckNvbmZpZyxvdmVycmlkZUhvb2tTdGF0ZTpudWxsLG92ZXJyaWRlSG9va1N0YXRlRGVsZXRlUGF0aDpudWxsLG92ZXJyaWRlSG9va1N0YXRlUmVuYW1lUGF0aDpudWxsLG92ZXJyaWRlUHJvcHM6bnVsbCxvdmVycmlkZVByb3BzRGVsZXRlUGF0aDpudWxsLG92ZXJyaWRlUHJvcHNSZW5hbWVQYXRoOm51bGwsc2V0U3VzcGVuc2VIYW5kbGVyOm51bGwsc2NoZWR1bGVVcGRhdGU6bnVsbCxjdXJyZW50RGlzcGF0Y2hlclJlZjpyYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLGZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyOmZ1bmN0aW9uKGEpe2E9Y2MoYSk7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9LGZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOndrLmZpbmRGaWJlckJ5SG9zdEluc3RhbmNlfHxcbnBrLGZpbmRIb3N0SW5zdGFuY2VzRm9yUmVmcmVzaDpudWxsLHNjaGVkdWxlUmVmcmVzaDpudWxsLHNjaGVkdWxlUm9vdDpudWxsLHNldFJlZnJlc2hIYW5kbGVyOm51bGwsZ2V0Q3VycmVudEZpYmVyOm51bGx9O2lmKFwidW5kZWZpbmVkXCIhPT10eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fKXt2YXIgeWs9X19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fO2lmKCF5ay5pc0Rpc2FibGVkJiZ5ay5zdXBwb3J0c0ZpYmVyKXRyeXtMZj15ay5pbmplY3QoeGspLE1mPXlrfWNhdGNoKGEpe319ZXhwb3J0cy5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRD12aztleHBvcnRzLmNyZWF0ZVBvcnRhbD11aztcbmV4cG9ydHMuZmluZERPTU5vZGU9ZnVuY3Rpb24oYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZigxPT09YS5ub2RlVHlwZSlyZXR1cm4gYTt2YXIgYj1hLl9yZWFjdEludGVybmFscztpZih2b2lkIDA9PT1iKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5yZW5kZXIpdGhyb3cgRXJyb3IoeSgxODgpKTt0aHJvdyBFcnJvcih5KDI2OCxPYmplY3Qua2V5cyhhKSkpO31hPWNjKGIpO2E9bnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZTtyZXR1cm4gYX07ZXhwb3J0cy5mbHVzaFN5bmM9ZnVuY3Rpb24oYSxiKXt2YXIgYz1YO2lmKDAhPT0oYyY0OCkpcmV0dXJuIGEoYik7WHw9MTt0cnl7aWYoYSlyZXR1cm4gZ2coOTksYS5iaW5kKG51bGwsYikpfWZpbmFsbHl7WD1jLGlnKCl9fTtleHBvcnRzLmh5ZHJhdGU9ZnVuY3Rpb24oYSxiLGMpe2lmKCFyayhiKSl0aHJvdyBFcnJvcih5KDIwMCkpO3JldHVybiB0ayhudWxsLGEsYiwhMCxjKX07XG5leHBvcnRzLnJlbmRlcj1mdW5jdGlvbihhLGIsYyl7aWYoIXJrKGIpKXRocm93IEVycm9yKHkoMjAwKSk7cmV0dXJuIHRrKG51bGwsYSxiLCExLGMpfTtleHBvcnRzLnVubW91bnRDb21wb25lbnRBdE5vZGU9ZnVuY3Rpb24oYSl7aWYoIXJrKGEpKXRocm93IEVycm9yKHkoNDApKTtyZXR1cm4gYS5fcmVhY3RSb290Q29udGFpbmVyPyhYaihmdW5jdGlvbigpe3RrKG51bGwsbnVsbCxhLCExLGZ1bmN0aW9uKCl7YS5fcmVhY3RSb290Q29udGFpbmVyPW51bGw7YVtmZl09bnVsbH0pfSksITApOiExfTtleHBvcnRzLnVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzPVdqO2V4cG9ydHMudW5zdGFibGVfY3JlYXRlUG9ydGFsPWZ1bmN0aW9uKGEsYil7cmV0dXJuIHVrKGEsYiwyPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06bnVsbCl9O1xuZXhwb3J0cy51bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcj1mdW5jdGlvbihhLGIsYyxkKXtpZighcmsoYykpdGhyb3cgRXJyb3IoeSgyMDApKTtpZihudWxsPT1hfHx2b2lkIDA9PT1hLl9yZWFjdEludGVybmFscyl0aHJvdyBFcnJvcih5KDM4KSk7cmV0dXJuIHRrKGEsYixjLCExLGQpfTtleHBvcnRzLnZlcnNpb249XCIxNy4wLjJcIjtcbiIsIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gY2hlY2tEQ0UoKSB7XG4gIC8qIGdsb2JhbCBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gKi9cbiAgaWYgKFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gPT09ICd1bmRlZmluZWQnIHx8XG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRSAhPT0gJ2Z1bmN0aW9uJ1xuICApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBUaGlzIGJyYW5jaCBpcyB1bnJlYWNoYWJsZSBiZWNhdXNlIHRoaXMgZnVuY3Rpb24gaXMgb25seSBjYWxsZWRcbiAgICAvLyBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGNvbmRpdGlvbiBpcyB0cnVlIG9ubHkgaW4gZGV2ZWxvcG1lbnQuXG4gICAgLy8gVGhlcmVmb3JlIGlmIHRoZSBicmFuY2ggaXMgc3RpbGwgaGVyZSwgZGVhZCBjb2RlIGVsaW1pbmF0aW9uIHdhc24ndFxuICAgIC8vIHByb3Blcmx5IGFwcGxpZWQuXG4gICAgLy8gRG9uJ3QgY2hhbmdlIHRoZSBtZXNzYWdlLiBSZWFjdCBEZXZUb29scyByZWxpZXMgb24gaXQuIEFsc28gbWFrZSBzdXJlXG4gICAgLy8gdGhpcyBtZXNzYWdlIGRvZXNuJ3Qgb2NjdXIgZWxzZXdoZXJlIGluIHRoaXMgZnVuY3Rpb24sIG9yIGl0IHdpbGwgY2F1c2VcbiAgICAvLyBhIGZhbHNlIHBvc2l0aXZlLlxuICAgIHRocm93IG5ldyBFcnJvcignXl9eJyk7XG4gIH1cbiAgdHJ5IHtcbiAgICAvLyBWZXJpZnkgdGhhdCB0aGUgY29kZSBhYm92ZSBoYXMgYmVlbiBkZWFkIGNvZGUgZWxpbWluYXRlZCAoRENFJ2QpLlxuICAgIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRShjaGVja0RDRSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8vIERldlRvb2xzIHNob3VsZG4ndCBjcmFzaCBSZWFjdCwgbm8gbWF0dGVyIHdoYXQuXG4gICAgLy8gV2Ugc2hvdWxkIHN0aWxsIHJlcG9ydCBpbiBjYXNlIHdlIGJyZWFrIHRoaXMgY29kZS5cbiAgICBjb25zb2xlLmVycm9yKGVycik7XG4gIH1cbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgLy8gRENFIGNoZWNrIHNob3VsZCBoYXBwZW4gYmVmb3JlIFJlYWN0RE9NIGJ1bmRsZSBleGVjdXRlcyBzbyB0aGF0XG4gIC8vIERldlRvb2xzIGNhbiByZXBvcnQgYmFkIG1pbmlmaWNhdGlvbiBkdXJpbmcgaW5qZWN0aW9uLlxuICBjaGVja0RDRSgpO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20uZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuMTMuMVxuICogcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGI9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixjPWI/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMsZD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYsZT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyxmPWI/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LGc9Yj9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsaD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSxrPWI/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAsbD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5hc3luY19tb2RlXCIpOjYwMTExLG09Yj9TeW1ib2wuZm9yKFwicmVhY3QuY29uY3VycmVudF9tb2RlXCIpOjYwMTExLG49Yj9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIscD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyxxPWI/XG5TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VfbGlzdFwiKTo2MDEyMCxyPWI/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6NjAxMTUsdD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2LHY9Yj9TeW1ib2wuZm9yKFwicmVhY3QuYmxvY2tcIik6NjAxMjEsdz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mdW5kYW1lbnRhbFwiKTo2MDExNyx4PWI/U3ltYm9sLmZvcihcInJlYWN0LnJlc3BvbmRlclwiKTo2MDExOCx5PWI/U3ltYm9sLmZvcihcInJlYWN0LnNjb3BlXCIpOjYwMTE5O1xuZnVuY3Rpb24geihhKXtpZihcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hKXt2YXIgdT1hLiQkdHlwZW9mO3N3aXRjaCh1KXtjYXNlIGM6c3dpdGNoKGE9YS50eXBlLGEpe2Nhc2UgbDpjYXNlIG06Y2FzZSBlOmNhc2UgZzpjYXNlIGY6Y2FzZSBwOnJldHVybiBhO2RlZmF1bHQ6c3dpdGNoKGE9YSYmYS4kJHR5cGVvZixhKXtjYXNlIGs6Y2FzZSBuOmNhc2UgdDpjYXNlIHI6Y2FzZSBoOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuIHV9fWNhc2UgZDpyZXR1cm4gdX19fWZ1bmN0aW9uIEEoYSl7cmV0dXJuIHooYSk9PT1tfWV4cG9ydHMuQXN5bmNNb2RlPWw7ZXhwb3J0cy5Db25jdXJyZW50TW9kZT1tO2V4cG9ydHMuQ29udGV4dENvbnN1bWVyPWs7ZXhwb3J0cy5Db250ZXh0UHJvdmlkZXI9aDtleHBvcnRzLkVsZW1lbnQ9YztleHBvcnRzLkZvcndhcmRSZWY9bjtleHBvcnRzLkZyYWdtZW50PWU7ZXhwb3J0cy5MYXp5PXQ7ZXhwb3J0cy5NZW1vPXI7ZXhwb3J0cy5Qb3J0YWw9ZDtcbmV4cG9ydHMuUHJvZmlsZXI9ZztleHBvcnRzLlN0cmljdE1vZGU9ZjtleHBvcnRzLlN1c3BlbnNlPXA7ZXhwb3J0cy5pc0FzeW5jTW9kZT1mdW5jdGlvbihhKXtyZXR1cm4gQShhKXx8eihhKT09PWx9O2V4cG9ydHMuaXNDb25jdXJyZW50TW9kZT1BO2V4cG9ydHMuaXNDb250ZXh0Q29uc3VtZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1rfTtleHBvcnRzLmlzQ29udGV4dFByb3ZpZGVyPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09aH07ZXhwb3J0cy5pc0VsZW1lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PWN9O2V4cG9ydHMuaXNGb3J3YXJkUmVmPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09bn07ZXhwb3J0cy5pc0ZyYWdtZW50PWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09ZX07ZXhwb3J0cy5pc0xhenk9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT10fTtcbmV4cG9ydHMuaXNNZW1vPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09cn07ZXhwb3J0cy5pc1BvcnRhbD1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWR9O2V4cG9ydHMuaXNQcm9maWxlcj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWd9O2V4cG9ydHMuaXNTdHJpY3RNb2RlPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09Zn07ZXhwb3J0cy5pc1N1c3BlbnNlPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09cH07XG5leHBvcnRzLmlzVmFsaWRFbGVtZW50VHlwZT1mdW5jdGlvbihhKXtyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGF8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhfHxhPT09ZXx8YT09PW18fGE9PT1nfHxhPT09Znx8YT09PXB8fGE9PT1xfHxcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiYoYS4kJHR5cGVvZj09PXR8fGEuJCR0eXBlb2Y9PT1yfHxhLiQkdHlwZW9mPT09aHx8YS4kJHR5cGVvZj09PWt8fGEuJCR0eXBlb2Y9PT1ufHxhLiQkdHlwZW9mPT09d3x8YS4kJHR5cGVvZj09PXh8fGEuJCR0eXBlb2Y9PT15fHxhLiQkdHlwZW9mPT09dil9O2V4cG9ydHMudHlwZU9mPXo7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIm1vZHVsZS5leHBvcnRzID0gQXJyYXkuaXNBcnJheSB8fCBmdW5jdGlvbiAoYXJyKSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYXJyKSA9PSAnW29iamVjdCBBcnJheV0nO1xufTtcbiIsInZhciBpc2FycmF5ID0gcmVxdWlyZSgnaXNhcnJheScpXG5cbi8qKlxuICogRXhwb3NlIGBwYXRoVG9SZWdleHBgLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IHBhdGhUb1JlZ2V4cFxubW9kdWxlLmV4cG9ydHMucGFyc2UgPSBwYXJzZVxubW9kdWxlLmV4cG9ydHMuY29tcGlsZSA9IGNvbXBpbGVcbm1vZHVsZS5leHBvcnRzLnRva2Vuc1RvRnVuY3Rpb24gPSB0b2tlbnNUb0Z1bmN0aW9uXG5tb2R1bGUuZXhwb3J0cy50b2tlbnNUb1JlZ0V4cCA9IHRva2Vuc1RvUmVnRXhwXG5cbi8qKlxuICogVGhlIG1haW4gcGF0aCBtYXRjaGluZyByZWdleHAgdXRpbGl0eS5cbiAqXG4gKiBAdHlwZSB7UmVnRXhwfVxuICovXG52YXIgUEFUSF9SRUdFWFAgPSBuZXcgUmVnRXhwKFtcbiAgLy8gTWF0Y2ggZXNjYXBlZCBjaGFyYWN0ZXJzIHRoYXQgd291bGQgb3RoZXJ3aXNlIGFwcGVhciBpbiBmdXR1cmUgbWF0Y2hlcy5cbiAgLy8gVGhpcyBhbGxvd3MgdGhlIHVzZXIgdG8gZXNjYXBlIHNwZWNpYWwgY2hhcmFjdGVycyB0aGF0IHdvbid0IHRyYW5zZm9ybS5cbiAgJyhcXFxcXFxcXC4pJyxcbiAgLy8gTWF0Y2ggRXhwcmVzcy1zdHlsZSBwYXJhbWV0ZXJzIGFuZCB1bi1uYW1lZCBwYXJhbWV0ZXJzIHdpdGggYSBwcmVmaXhcbiAgLy8gYW5kIG9wdGlvbmFsIHN1ZmZpeGVzLiBNYXRjaGVzIGFwcGVhciBhczpcbiAgLy9cbiAgLy8gXCIvOnRlc3QoXFxcXGQrKT9cIiA9PiBbXCIvXCIsIFwidGVzdFwiLCBcIlxcZCtcIiwgdW5kZWZpbmVkLCBcIj9cIiwgdW5kZWZpbmVkXVxuICAvLyBcIi9yb3V0ZShcXFxcZCspXCIgID0+IFt1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBcIlxcZCtcIiwgdW5kZWZpbmVkLCB1bmRlZmluZWRdXG4gIC8vIFwiLypcIiAgICAgICAgICAgID0+IFtcIi9cIiwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBcIipcIl1cbiAgJyhbXFxcXC8uXSk/KD86KD86XFxcXDooXFxcXHcrKSg/OlxcXFwoKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcKCldKSspXFxcXCkpP3xcXFxcKCgoPzpcXFxcXFxcXC58W15cXFxcXFxcXCgpXSkrKVxcXFwpKShbKyo/XSk/fChcXFxcKikpJ1xuXS5qb2luKCd8JyksICdnJylcblxuLyoqXG4gKiBQYXJzZSBhIHN0cmluZyBmb3IgdGhlIHJhdyB0b2tlbnMuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgc3RyXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSBvcHRpb25zXG4gKiBAcmV0dXJuIHshQXJyYXl9XG4gKi9cbmZ1bmN0aW9uIHBhcnNlIChzdHIsIG9wdGlvbnMpIHtcbiAgdmFyIHRva2VucyA9IFtdXG4gIHZhciBrZXkgPSAwXG4gIHZhciBpbmRleCA9IDBcbiAgdmFyIHBhdGggPSAnJ1xuICB2YXIgZGVmYXVsdERlbGltaXRlciA9IG9wdGlvbnMgJiYgb3B0aW9ucy5kZWxpbWl0ZXIgfHwgJy8nXG4gIHZhciByZXNcblxuICB3aGlsZSAoKHJlcyA9IFBBVEhfUkVHRVhQLmV4ZWMoc3RyKSkgIT0gbnVsbCkge1xuICAgIHZhciBtID0gcmVzWzBdXG4gICAgdmFyIGVzY2FwZWQgPSByZXNbMV1cbiAgICB2YXIgb2Zmc2V0ID0gcmVzLmluZGV4XG4gICAgcGF0aCArPSBzdHIuc2xpY2UoaW5kZXgsIG9mZnNldClcbiAgICBpbmRleCA9IG9mZnNldCArIG0ubGVuZ3RoXG5cbiAgICAvLyBJZ25vcmUgYWxyZWFkeSBlc2NhcGVkIHNlcXVlbmNlcy5cbiAgICBpZiAoZXNjYXBlZCkge1xuICAgICAgcGF0aCArPSBlc2NhcGVkWzFdXG4gICAgICBjb250aW51ZVxuICAgIH1cblxuICAgIHZhciBuZXh0ID0gc3RyW2luZGV4XVxuICAgIHZhciBwcmVmaXggPSByZXNbMl1cbiAgICB2YXIgbmFtZSA9IHJlc1szXVxuICAgIHZhciBjYXB0dXJlID0gcmVzWzRdXG4gICAgdmFyIGdyb3VwID0gcmVzWzVdXG4gICAgdmFyIG1vZGlmaWVyID0gcmVzWzZdXG4gICAgdmFyIGFzdGVyaXNrID0gcmVzWzddXG5cbiAgICAvLyBQdXNoIHRoZSBjdXJyZW50IHBhdGggb250byB0aGUgdG9rZW5zLlxuICAgIGlmIChwYXRoKSB7XG4gICAgICB0b2tlbnMucHVzaChwYXRoKVxuICAgICAgcGF0aCA9ICcnXG4gICAgfVxuXG4gICAgdmFyIHBhcnRpYWwgPSBwcmVmaXggIT0gbnVsbCAmJiBuZXh0ICE9IG51bGwgJiYgbmV4dCAhPT0gcHJlZml4XG4gICAgdmFyIHJlcGVhdCA9IG1vZGlmaWVyID09PSAnKycgfHwgbW9kaWZpZXIgPT09ICcqJ1xuICAgIHZhciBvcHRpb25hbCA9IG1vZGlmaWVyID09PSAnPycgfHwgbW9kaWZpZXIgPT09ICcqJ1xuICAgIHZhciBkZWxpbWl0ZXIgPSByZXNbMl0gfHwgZGVmYXVsdERlbGltaXRlclxuICAgIHZhciBwYXR0ZXJuID0gY2FwdHVyZSB8fCBncm91cFxuXG4gICAgdG9rZW5zLnB1c2goe1xuICAgICAgbmFtZTogbmFtZSB8fCBrZXkrKyxcbiAgICAgIHByZWZpeDogcHJlZml4IHx8ICcnLFxuICAgICAgZGVsaW1pdGVyOiBkZWxpbWl0ZXIsXG4gICAgICBvcHRpb25hbDogb3B0aW9uYWwsXG4gICAgICByZXBlYXQ6IHJlcGVhdCxcbiAgICAgIHBhcnRpYWw6IHBhcnRpYWwsXG4gICAgICBhc3RlcmlzazogISFhc3RlcmlzayxcbiAgICAgIHBhdHRlcm46IHBhdHRlcm4gPyBlc2NhcGVHcm91cChwYXR0ZXJuKSA6IChhc3RlcmlzayA/ICcuKicgOiAnW14nICsgZXNjYXBlU3RyaW5nKGRlbGltaXRlcikgKyAnXSs/JylcbiAgICB9KVxuICB9XG5cbiAgLy8gTWF0Y2ggYW55IGNoYXJhY3RlcnMgc3RpbGwgcmVtYWluaW5nLlxuICBpZiAoaW5kZXggPCBzdHIubGVuZ3RoKSB7XG4gICAgcGF0aCArPSBzdHIuc3Vic3RyKGluZGV4KVxuICB9XG5cbiAgLy8gSWYgdGhlIHBhdGggZXhpc3RzLCBwdXNoIGl0IG9udG8gdGhlIGVuZC5cbiAgaWYgKHBhdGgpIHtcbiAgICB0b2tlbnMucHVzaChwYXRoKVxuICB9XG5cbiAgcmV0dXJuIHRva2Vuc1xufVxuXG4vKipcbiAqIENvbXBpbGUgYSBzdHJpbmcgdG8gYSB0ZW1wbGF0ZSBmdW5jdGlvbiBmb3IgdGhlIHBhdGguXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgICAgICAgICAgICBzdHJcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgICAgb3B0aW9uc1xuICogQHJldHVybiB7IWZ1bmN0aW9uKE9iamVjdD0sIE9iamVjdD0pfVxuICovXG5mdW5jdGlvbiBjb21waWxlIChzdHIsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRva2Vuc1RvRnVuY3Rpb24ocGFyc2Uoc3RyLCBvcHRpb25zKSwgb3B0aW9ucylcbn1cblxuLyoqXG4gKiBQcmV0dGllciBlbmNvZGluZyBvZiBVUkkgcGF0aCBzZWdtZW50cy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9XG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVuY29kZVVSSUNvbXBvbmVudFByZXR0eSAoc3RyKSB7XG4gIHJldHVybiBlbmNvZGVVUkkoc3RyKS5yZXBsYWNlKC9bXFwvPyNdL2csIGZ1bmN0aW9uIChjKSB7XG4gICAgcmV0dXJuICclJyArIGMuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKVxuICB9KVxufVxuXG4vKipcbiAqIEVuY29kZSB0aGUgYXN0ZXJpc2sgcGFyYW1ldGVyLiBTaW1pbGFyIHRvIGBwcmV0dHlgLCBidXQgYWxsb3dzIHNsYXNoZXMuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfVxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlbmNvZGVBc3RlcmlzayAoc3RyKSB7XG4gIHJldHVybiBlbmNvZGVVUkkoc3RyKS5yZXBsYWNlKC9bPyNdL2csIGZ1bmN0aW9uIChjKSB7XG4gICAgcmV0dXJuICclJyArIGMuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKVxuICB9KVxufVxuXG4vKipcbiAqIEV4cG9zZSBhIG1ldGhvZCBmb3IgdHJhbnNmb3JtaW5nIHRva2VucyBpbnRvIHRoZSBwYXRoIGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiB0b2tlbnNUb0Z1bmN0aW9uICh0b2tlbnMsIG9wdGlvbnMpIHtcbiAgLy8gQ29tcGlsZSBhbGwgdGhlIHRva2VucyBpbnRvIHJlZ2V4cHMuXG4gIHZhciBtYXRjaGVzID0gbmV3IEFycmF5KHRva2Vucy5sZW5ndGgpXG5cbiAgLy8gQ29tcGlsZSBhbGwgdGhlIHBhdHRlcm5zIGJlZm9yZSBjb21waWxhdGlvbi5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAodHlwZW9mIHRva2Vuc1tpXSA9PT0gJ29iamVjdCcpIHtcbiAgICAgIG1hdGNoZXNbaV0gPSBuZXcgUmVnRXhwKCdeKD86JyArIHRva2Vuc1tpXS5wYXR0ZXJuICsgJykkJywgZmxhZ3Mob3B0aW9ucykpXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChvYmosIG9wdHMpIHtcbiAgICB2YXIgcGF0aCA9ICcnXG4gICAgdmFyIGRhdGEgPSBvYmogfHwge31cbiAgICB2YXIgb3B0aW9ucyA9IG9wdHMgfHwge31cbiAgICB2YXIgZW5jb2RlID0gb3B0aW9ucy5wcmV0dHkgPyBlbmNvZGVVUklDb21wb25lbnRQcmV0dHkgOiBlbmNvZGVVUklDb21wb25lbnRcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgdG9rZW4gPSB0b2tlbnNbaV1cblxuICAgICAgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgcGF0aCArPSB0b2tlblxuXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIHZhciB2YWx1ZSA9IGRhdGFbdG9rZW4ubmFtZV1cbiAgICAgIHZhciBzZWdtZW50XG5cbiAgICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xuICAgICAgICAgIC8vIFByZXBlbmQgcGFydGlhbCBzZWdtZW50IHByZWZpeGVzLlxuICAgICAgICAgIGlmICh0b2tlbi5wYXJ0aWFsKSB7XG4gICAgICAgICAgICBwYXRoICs9IHRva2VuLnByZWZpeFxuICAgICAgICAgIH1cblxuICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBiZSBkZWZpbmVkJylcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoaXNhcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgaWYgKCF0b2tlbi5yZXBlYXQpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG5vdCByZXBlYXQsIGJ1dCByZWNlaXZlZCBgJyArIEpTT04uc3RyaW5naWZ5KHZhbHVlKSArICdgJylcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh2YWx1ZS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbm90IGJlIGVtcHR5JylcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHZhbHVlLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgc2VnbWVudCA9IGVuY29kZSh2YWx1ZVtqXSlcblxuICAgICAgICAgIGlmICghbWF0Y2hlc1tpXS50ZXN0KHNlZ21lbnQpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBhbGwgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBtYXRjaCBcIicgKyB0b2tlbi5wYXR0ZXJuICsgJ1wiLCBidXQgcmVjZWl2ZWQgYCcgKyBKU09OLnN0cmluZ2lmeShzZWdtZW50KSArICdgJylcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBwYXRoICs9IChqID09PSAwID8gdG9rZW4ucHJlZml4IDogdG9rZW4uZGVsaW1pdGVyKSArIHNlZ21lbnRcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIHNlZ21lbnQgPSB0b2tlbi5hc3RlcmlzayA/IGVuY29kZUFzdGVyaXNrKHZhbHVlKSA6IGVuY29kZSh2YWx1ZSlcblxuICAgICAgaWYgKCFtYXRjaGVzW2ldLnRlc3Qoc2VnbWVudCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBtYXRjaCBcIicgKyB0b2tlbi5wYXR0ZXJuICsgJ1wiLCBidXQgcmVjZWl2ZWQgXCInICsgc2VnbWVudCArICdcIicpXG4gICAgICB9XG5cbiAgICAgIHBhdGggKz0gdG9rZW4ucHJlZml4ICsgc2VnbWVudFxuICAgIH1cblxuICAgIHJldHVybiBwYXRoXG4gIH1cbn1cblxuLyoqXG4gKiBFc2NhcGUgYSByZWd1bGFyIGV4cHJlc3Npb24gc3RyaW5nLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gc3RyXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVzY2FwZVN0cmluZyAoc3RyKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZSgvKFsuKyo/PV4hOiR7fSgpW1xcXXxcXC9cXFxcXSkvZywgJ1xcXFwkMScpXG59XG5cbi8qKlxuICogRXNjYXBlIHRoZSBjYXB0dXJpbmcgZ3JvdXAgYnkgZXNjYXBpbmcgc3BlY2lhbCBjaGFyYWN0ZXJzIGFuZCBtZWFuaW5nLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gZ3JvdXBcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZXNjYXBlR3JvdXAgKGdyb3VwKSB7XG4gIHJldHVybiBncm91cC5yZXBsYWNlKC8oWz0hOiRcXC8oKV0pL2csICdcXFxcJDEnKVxufVxuXG4vKipcbiAqIEF0dGFjaCB0aGUga2V5cyBhcyBhIHByb3BlcnR5IG9mIHRoZSByZWdleHAuXG4gKlxuICogQHBhcmFtICB7IVJlZ0V4cH0gcmVcbiAqIEBwYXJhbSAge0FycmF5fSAgIGtleXNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIGF0dGFjaEtleXMgKHJlLCBrZXlzKSB7XG4gIHJlLmtleXMgPSBrZXlzXG4gIHJldHVybiByZVxufVxuXG4vKipcbiAqIEdldCB0aGUgZmxhZ3MgZm9yIGEgcmVnZXhwIGZyb20gdGhlIG9wdGlvbnMuXG4gKlxuICogQHBhcmFtICB7T2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGZsYWdzIChvcHRpb25zKSB7XG4gIHJldHVybiBvcHRpb25zICYmIG9wdGlvbnMuc2Vuc2l0aXZlID8gJycgOiAnaSdcbn1cblxuLyoqXG4gKiBQdWxsIG91dCBrZXlzIGZyb20gYSByZWdleHAuXG4gKlxuICogQHBhcmFtICB7IVJlZ0V4cH0gcGF0aFxuICogQHBhcmFtICB7IUFycmF5fSAga2V5c1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gcmVnZXhwVG9SZWdleHAgKHBhdGgsIGtleXMpIHtcbiAgLy8gVXNlIGEgbmVnYXRpdmUgbG9va2FoZWFkIHRvIG1hdGNoIG9ubHkgY2FwdHVyaW5nIGdyb3Vwcy5cbiAgdmFyIGdyb3VwcyA9IHBhdGguc291cmNlLm1hdGNoKC9cXCgoPyFcXD8pL2cpXG5cbiAgaWYgKGdyb3Vwcykge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZ3JvdXBzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBrZXlzLnB1c2goe1xuICAgICAgICBuYW1lOiBpLFxuICAgICAgICBwcmVmaXg6IG51bGwsXG4gICAgICAgIGRlbGltaXRlcjogbnVsbCxcbiAgICAgICAgb3B0aW9uYWw6IGZhbHNlLFxuICAgICAgICByZXBlYXQ6IGZhbHNlLFxuICAgICAgICBwYXJ0aWFsOiBmYWxzZSxcbiAgICAgICAgYXN0ZXJpc2s6IGZhbHNlLFxuICAgICAgICBwYXR0ZXJuOiBudWxsXG4gICAgICB9KVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBhdHRhY2hLZXlzKHBhdGgsIGtleXMpXG59XG5cbi8qKlxuICogVHJhbnNmb3JtIGFuIGFycmF5IGludG8gYSByZWdleHAuXG4gKlxuICogQHBhcmFtICB7IUFycmF5fSAgcGF0aFxuICogQHBhcmFtICB7QXJyYXl9ICAga2V5c1xuICogQHBhcmFtICB7IU9iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gYXJyYXlUb1JlZ2V4cCAocGF0aCwga2V5cywgb3B0aW9ucykge1xuICB2YXIgcGFydHMgPSBbXVxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcGF0aC5sZW5ndGg7IGkrKykge1xuICAgIHBhcnRzLnB1c2gocGF0aFRvUmVnZXhwKHBhdGhbaV0sIGtleXMsIG9wdGlvbnMpLnNvdXJjZSlcbiAgfVxuXG4gIHZhciByZWdleHAgPSBuZXcgUmVnRXhwKCcoPzonICsgcGFydHMuam9pbignfCcpICsgJyknLCBmbGFncyhvcHRpb25zKSlcblxuICByZXR1cm4gYXR0YWNoS2V5cyhyZWdleHAsIGtleXMpXG59XG5cbi8qKlxuICogQ3JlYXRlIGEgcGF0aCByZWdleHAgZnJvbSBzdHJpbmcgaW5wdXQuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgcGF0aFxuICogQHBhcmFtICB7IUFycmF5fSAga2V5c1xuICogQHBhcmFtICB7IU9iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gc3RyaW5nVG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRva2Vuc1RvUmVnRXhwKHBhcnNlKHBhdGgsIG9wdGlvbnMpLCBrZXlzLCBvcHRpb25zKVxufVxuXG4vKipcbiAqIEV4cG9zZSBhIGZ1bmN0aW9uIGZvciB0YWtpbmcgdG9rZW5zIGFuZCByZXR1cm5pbmcgYSBSZWdFeHAuXG4gKlxuICogQHBhcmFtICB7IUFycmF5fSAgICAgICAgICB0b2tlbnNcbiAqIEBwYXJhbSAgeyhBcnJheXxPYmplY3QpPX0ga2V5c1xuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiB0b2tlbnNUb1JlZ0V4cCAodG9rZW5zLCBrZXlzLCBvcHRpb25zKSB7XG4gIGlmICghaXNhcnJheShrZXlzKSkge1xuICAgIG9wdGlvbnMgPSAvKiogQHR5cGUgeyFPYmplY3R9ICovIChrZXlzIHx8IG9wdGlvbnMpXG4gICAga2V5cyA9IFtdXG4gIH1cblxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fVxuXG4gIHZhciBzdHJpY3QgPSBvcHRpb25zLnN0cmljdFxuICB2YXIgZW5kID0gb3B0aW9ucy5lbmQgIT09IGZhbHNlXG4gIHZhciByb3V0ZSA9ICcnXG5cbiAgLy8gSXRlcmF0ZSBvdmVyIHRoZSB0b2tlbnMgYW5kIGNyZWF0ZSBvdXIgcmVnZXhwIHN0cmluZy5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgdG9rZW4gPSB0b2tlbnNbaV1cblxuICAgIGlmICh0eXBlb2YgdG9rZW4gPT09ICdzdHJpbmcnKSB7XG4gICAgICByb3V0ZSArPSBlc2NhcGVTdHJpbmcodG9rZW4pXG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBwcmVmaXggPSBlc2NhcGVTdHJpbmcodG9rZW4ucHJlZml4KVxuICAgICAgdmFyIGNhcHR1cmUgPSAnKD86JyArIHRva2VuLnBhdHRlcm4gKyAnKSdcblxuICAgICAga2V5cy5wdXNoKHRva2VuKVxuXG4gICAgICBpZiAodG9rZW4ucmVwZWF0KSB7XG4gICAgICAgIGNhcHR1cmUgKz0gJyg/OicgKyBwcmVmaXggKyBjYXB0dXJlICsgJykqJ1xuICAgICAgfVxuXG4gICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgaWYgKCF0b2tlbi5wYXJ0aWFsKSB7XG4gICAgICAgICAgY2FwdHVyZSA9ICcoPzonICsgcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpKT8nXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY2FwdHVyZSA9IHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKT8nXG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNhcHR1cmUgPSBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJyknXG4gICAgICB9XG5cbiAgICAgIHJvdXRlICs9IGNhcHR1cmVcbiAgICB9XG4gIH1cblxuICB2YXIgZGVsaW1pdGVyID0gZXNjYXBlU3RyaW5nKG9wdGlvbnMuZGVsaW1pdGVyIHx8ICcvJylcbiAgdmFyIGVuZHNXaXRoRGVsaW1pdGVyID0gcm91dGUuc2xpY2UoLWRlbGltaXRlci5sZW5ndGgpID09PSBkZWxpbWl0ZXJcblxuICAvLyBJbiBub24tc3RyaWN0IG1vZGUgd2UgYWxsb3cgYSBzbGFzaCBhdCB0aGUgZW5kIG9mIG1hdGNoLiBJZiB0aGUgcGF0aCB0b1xuICAvLyBtYXRjaCBhbHJlYWR5IGVuZHMgd2l0aCBhIHNsYXNoLCB3ZSByZW1vdmUgaXQgZm9yIGNvbnNpc3RlbmN5LiBUaGUgc2xhc2hcbiAgLy8gaXMgdmFsaWQgYXQgdGhlIGVuZCBvZiBhIHBhdGggbWF0Y2gsIG5vdCBpbiB0aGUgbWlkZGxlLiBUaGlzIGlzIGltcG9ydGFudFxuICAvLyBpbiBub24tZW5kaW5nIG1vZGUsIHdoZXJlIFwiL3Rlc3QvXCIgc2hvdWxkbid0IG1hdGNoIFwiL3Rlc3QvL3JvdXRlXCIuXG4gIGlmICghc3RyaWN0KSB7XG4gICAgcm91dGUgPSAoZW5kc1dpdGhEZWxpbWl0ZXIgPyByb3V0ZS5zbGljZSgwLCAtZGVsaW1pdGVyLmxlbmd0aCkgOiByb3V0ZSkgKyAnKD86JyArIGRlbGltaXRlciArICcoPz0kKSk/J1xuICB9XG5cbiAgaWYgKGVuZCkge1xuICAgIHJvdXRlICs9ICckJ1xuICB9IGVsc2Uge1xuICAgIC8vIEluIG5vbi1lbmRpbmcgbW9kZSwgd2UgbmVlZCB0aGUgY2FwdHVyaW5nIGdyb3VwcyB0byBtYXRjaCBhcyBtdWNoIGFzXG4gICAgLy8gcG9zc2libGUgYnkgdXNpbmcgYSBwb3NpdGl2ZSBsb29rYWhlYWQgdG8gdGhlIGVuZCBvciBuZXh0IHBhdGggc2VnbWVudC5cbiAgICByb3V0ZSArPSBzdHJpY3QgJiYgZW5kc1dpdGhEZWxpbWl0ZXIgPyAnJyA6ICcoPz0nICsgZGVsaW1pdGVyICsgJ3wkKSdcbiAgfVxuXG4gIHJldHVybiBhdHRhY2hLZXlzKG5ldyBSZWdFeHAoJ14nICsgcm91dGUsIGZsYWdzKG9wdGlvbnMpKSwga2V5cylcbn1cblxuLyoqXG4gKiBOb3JtYWxpemUgdGhlIGdpdmVuIHBhdGggc3RyaW5nLCByZXR1cm5pbmcgYSByZWd1bGFyIGV4cHJlc3Npb24uXG4gKlxuICogQW4gZW1wdHkgYXJyYXkgY2FuIGJlIHBhc3NlZCBpbiBmb3IgdGhlIGtleXMsIHdoaWNoIHdpbGwgaG9sZCB0aGVcbiAqIHBsYWNlaG9sZGVyIGtleSBkZXNjcmlwdGlvbnMuIEZvciBleGFtcGxlLCB1c2luZyBgL3VzZXIvOmlkYCwgYGtleXNgIHdpbGxcbiAqIGNvbnRhaW4gYFt7IG5hbWU6ICdpZCcsIGRlbGltaXRlcjogJy8nLCBvcHRpb25hbDogZmFsc2UsIHJlcGVhdDogZmFsc2UgfV1gLlxuICpcbiAqIEBwYXJhbSAgeyhzdHJpbmd8UmVnRXhwfEFycmF5KX0gcGF0aFxuICogQHBhcmFtICB7KEFycmF5fE9iamVjdCk9fSAgICAgICBrZXlzXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgICAgICAgIG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHBhdGhUb1JlZ2V4cCAocGF0aCwga2V5cywgb3B0aW9ucykge1xuICBpZiAoIWlzYXJyYXkoa2V5cykpIHtcbiAgICBvcHRpb25zID0gLyoqIEB0eXBlIHshT2JqZWN0fSAqLyAoa2V5cyB8fCBvcHRpb25zKVxuICAgIGtleXMgPSBbXVxuICB9XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge31cblxuICBpZiAocGF0aCBpbnN0YW5jZW9mIFJlZ0V4cCkge1xuICAgIHJldHVybiByZWdleHBUb1JlZ2V4cChwYXRoLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpKVxuICB9XG5cbiAgaWYgKGlzYXJyYXkocGF0aCkpIHtcbiAgICByZXR1cm4gYXJyYXlUb1JlZ2V4cCgvKiogQHR5cGUgeyFBcnJheX0gKi8gKHBhdGgpLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpLCBvcHRpb25zKVxuICB9XG5cbiAgcmV0dXJuIHN0cmluZ1RvUmVnZXhwKC8qKiBAdHlwZSB7c3RyaW5nfSAqLyAocGF0aCksIC8qKiBAdHlwZSB7IUFycmF5fSAqLyAoa2V5cyksIG9wdGlvbnMpXG59XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE3LjAuMlxuICogcmVhY3QucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuJ3VzZSBzdHJpY3QnO3ZhciBsPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLG49NjAxMDMscD02MDEwNjtleHBvcnRzLkZyYWdtZW50PTYwMTA3O2V4cG9ydHMuU3RyaWN0TW9kZT02MDEwODtleHBvcnRzLlByb2ZpbGVyPTYwMTE0O3ZhciBxPTYwMTA5LHI9NjAxMTAsdD02MDExMjtleHBvcnRzLlN1c3BlbnNlPTYwMTEzO3ZhciB1PTYwMTE1LHY9NjAxMTY7XG5pZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yKXt2YXIgdz1TeW1ib2wuZm9yO249dyhcInJlYWN0LmVsZW1lbnRcIik7cD13KFwicmVhY3QucG9ydGFsXCIpO2V4cG9ydHMuRnJhZ21lbnQ9dyhcInJlYWN0LmZyYWdtZW50XCIpO2V4cG9ydHMuU3RyaWN0TW9kZT13KFwicmVhY3Quc3RyaWN0X21vZGVcIik7ZXhwb3J0cy5Qcm9maWxlcj13KFwicmVhY3QucHJvZmlsZXJcIik7cT13KFwicmVhY3QucHJvdmlkZXJcIik7cj13KFwicmVhY3QuY29udGV4dFwiKTt0PXcoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTtleHBvcnRzLlN1c3BlbnNlPXcoXCJyZWFjdC5zdXNwZW5zZVwiKTt1PXcoXCJyZWFjdC5tZW1vXCIpO3Y9dyhcInJlYWN0LmxhenlcIil9dmFyIHg9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO1xuZnVuY3Rpb24geShhKXtpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhKXJldHVybiBudWxsO2E9eCYmYVt4XXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfWZ1bmN0aW9uIHooYSl7Zm9yKHZhciBiPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxjPTE7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKyliKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjXSk7cmV0dXJuXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgXCIrYitcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCJ9XG52YXIgQT17aXNNb3VudGVkOmZ1bmN0aW9uKCl7cmV0dXJuITF9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKCl7fX0sQj17fTtmdW5jdGlvbiBDKGEsYixjKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUI7dGhpcy51cGRhdGVyPWN8fEF9Qy5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTtDLnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihhLGIpe2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJm51bGwhPWEpdGhyb3cgRXJyb3Ioeig4NSkpO3RoaXMudXBkYXRlci5lbnF1ZXVlU2V0U3RhdGUodGhpcyxhLGIsXCJzZXRTdGF0ZVwiKX07Qy5wcm90b3R5cGUuZm9yY2VVcGRhdGU9ZnVuY3Rpb24oYSl7dGhpcy51cGRhdGVyLmVucXVldWVGb3JjZVVwZGF0ZSh0aGlzLGEsXCJmb3JjZVVwZGF0ZVwiKX07XG5mdW5jdGlvbiBEKCl7fUQucHJvdG90eXBlPUMucHJvdG90eXBlO2Z1bmN0aW9uIEUoYSxiLGMpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9Qjt0aGlzLnVwZGF0ZXI9Y3x8QX12YXIgRj1FLnByb3RvdHlwZT1uZXcgRDtGLmNvbnN0cnVjdG9yPUU7bChGLEMucHJvdG90eXBlKTtGLmlzUHVyZVJlYWN0Q29tcG9uZW50PSEwO3ZhciBHPXtjdXJyZW50Om51bGx9LEg9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxJPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBKKGEsYixjKXt2YXIgZSxkPXt9LGs9bnVsbCxoPW51bGw7aWYobnVsbCE9Yilmb3IoZSBpbiB2b2lkIDAhPT1iLnJlZiYmKGg9Yi5yZWYpLHZvaWQgMCE9PWIua2V5JiYoaz1cIlwiK2Iua2V5KSxiKUguY2FsbChiLGUpJiYhSS5oYXNPd25Qcm9wZXJ0eShlKSYmKGRbZV09YltlXSk7dmFyIGc9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1nKWQuY2hpbGRyZW49YztlbHNlIGlmKDE8Zyl7Zm9yKHZhciBmPUFycmF5KGcpLG09MDttPGc7bSsrKWZbbV09YXJndW1lbnRzW20rMl07ZC5jaGlsZHJlbj1mfWlmKGEmJmEuZGVmYXVsdFByb3BzKWZvcihlIGluIGc9YS5kZWZhdWx0UHJvcHMsZyl2b2lkIDA9PT1kW2VdJiYoZFtlXT1nW2VdKTtyZXR1cm57JCR0eXBlb2Y6bix0eXBlOmEsa2V5OmsscmVmOmgscHJvcHM6ZCxfb3duZXI6Ry5jdXJyZW50fX1cbmZ1bmN0aW9uIEsoYSxiKXtyZXR1cm57JCR0eXBlb2Y6bix0eXBlOmEudHlwZSxrZXk6YixyZWY6YS5yZWYscHJvcHM6YS5wcm9wcyxfb3duZXI6YS5fb3duZXJ9fWZ1bmN0aW9uIEwoYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PW59ZnVuY3Rpb24gZXNjYXBlKGEpe3ZhciBiPXtcIj1cIjpcIj0wXCIsXCI6XCI6XCI9MlwifTtyZXR1cm5cIiRcIithLnJlcGxhY2UoL1s9Ol0vZyxmdW5jdGlvbihhKXtyZXR1cm4gYlthXX0pfXZhciBNPS9cXC8rL2c7ZnVuY3Rpb24gTihhLGIpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJm51bGwhPWEua2V5P2VzY2FwZShcIlwiK2Eua2V5KTpiLnRvU3RyaW5nKDM2KX1cbmZ1bmN0aW9uIE8oYSxiLGMsZSxkKXt2YXIgaz10eXBlb2YgYTtpZihcInVuZGVmaW5lZFwiPT09a3x8XCJib29sZWFuXCI9PT1rKWE9bnVsbDt2YXIgaD0hMTtpZihudWxsPT09YSloPSEwO2Vsc2Ugc3dpdGNoKGspe2Nhc2UgXCJzdHJpbmdcIjpjYXNlIFwibnVtYmVyXCI6aD0hMDticmVhaztjYXNlIFwib2JqZWN0XCI6c3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgbjpjYXNlIHA6aD0hMH19aWYoaClyZXR1cm4gaD1hLGQ9ZChoKSxhPVwiXCI9PT1lP1wiLlwiK04oaCwwKTplLEFycmF5LmlzQXJyYXkoZCk/KGM9XCJcIixudWxsIT1hJiYoYz1hLnJlcGxhY2UoTSxcIiQmL1wiKStcIi9cIiksTyhkLGIsYyxcIlwiLGZ1bmN0aW9uKGEpe3JldHVybiBhfSkpOm51bGwhPWQmJihMKGQpJiYoZD1LKGQsYysoIWQua2V5fHxoJiZoLmtleT09PWQua2V5P1wiXCI6KFwiXCIrZC5rZXkpLnJlcGxhY2UoTSxcIiQmL1wiKStcIi9cIikrYSkpLGIucHVzaChkKSksMTtoPTA7ZT1cIlwiPT09ZT9cIi5cIjplK1wiOlwiO2lmKEFycmF5LmlzQXJyYXkoYSkpZm9yKHZhciBnPVxuMDtnPGEubGVuZ3RoO2crKyl7az1hW2ddO3ZhciBmPWUrTihrLGcpO2grPU8oayxiLGMsZixkKX1lbHNlIGlmKGY9eShhKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZilmb3IoYT1mLmNhbGwoYSksZz0wOyEoaz1hLm5leHQoKSkuZG9uZTspaz1rLnZhbHVlLGY9ZStOKGssZysrKSxoKz1PKGssYixjLGYsZCk7ZWxzZSBpZihcIm9iamVjdFwiPT09ayl0aHJvdyBiPVwiXCIrYSxFcnJvcih6KDMxLFwiW29iamVjdCBPYmplY3RdXCI9PT1iP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYSkuam9pbihcIiwgXCIpK1wifVwiOmIpKTtyZXR1cm4gaH1mdW5jdGlvbiBQKGEsYixjKXtpZihudWxsPT1hKXJldHVybiBhO3ZhciBlPVtdLGQ9MDtPKGEsZSxcIlwiLFwiXCIsZnVuY3Rpb24oYSl7cmV0dXJuIGIuY2FsbChjLGEsZCsrKX0pO3JldHVybiBlfVxuZnVuY3Rpb24gUShhKXtpZigtMT09PWEuX3N0YXR1cyl7dmFyIGI9YS5fcmVzdWx0O2I9YigpO2EuX3N0YXR1cz0wO2EuX3Jlc3VsdD1iO2IudGhlbihmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYj1iLmRlZmF1bHQsYS5fc3RhdHVzPTEsYS5fcmVzdWx0PWIpfSxmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYS5fc3RhdHVzPTIsYS5fcmVzdWx0PWIpfSl9aWYoMT09PWEuX3N0YXR1cylyZXR1cm4gYS5fcmVzdWx0O3Rocm93IGEuX3Jlc3VsdDt9dmFyIFI9e2N1cnJlbnQ6bnVsbH07ZnVuY3Rpb24gUygpe3ZhciBhPVIuY3VycmVudDtpZihudWxsPT09YSl0aHJvdyBFcnJvcih6KDMyMSkpO3JldHVybiBhfXZhciBUPXtSZWFjdEN1cnJlbnREaXNwYXRjaGVyOlIsUmVhY3RDdXJyZW50QmF0Y2hDb25maWc6e3RyYW5zaXRpb246MH0sUmVhY3RDdXJyZW50T3duZXI6RyxJc1NvbWVSZW5kZXJlckFjdGluZzp7Y3VycmVudDohMX0sYXNzaWduOmx9O1xuZXhwb3J0cy5DaGlsZHJlbj17bWFwOlAsZm9yRWFjaDpmdW5jdGlvbihhLGIsYyl7UChhLGZ1bmN0aW9uKCl7Yi5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LGMpfSxjb3VudDpmdW5jdGlvbihhKXt2YXIgYj0wO1AoYSxmdW5jdGlvbigpe2IrK30pO3JldHVybiBifSx0b0FycmF5OmZ1bmN0aW9uKGEpe3JldHVybiBQKGEsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KXx8W119LG9ubHk6ZnVuY3Rpb24oYSl7aWYoIUwoYSkpdGhyb3cgRXJyb3IoeigxNDMpKTtyZXR1cm4gYX19O2V4cG9ydHMuQ29tcG9uZW50PUM7ZXhwb3J0cy5QdXJlQ29tcG9uZW50PUU7ZXhwb3J0cy5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRD1UO1xuZXhwb3J0cy5jbG9uZUVsZW1lbnQ9ZnVuY3Rpb24oYSxiLGMpe2lmKG51bGw9PT1hfHx2b2lkIDA9PT1hKXRocm93IEVycm9yKHooMjY3LGEpKTt2YXIgZT1sKHt9LGEucHJvcHMpLGQ9YS5rZXksaz1hLnJlZixoPWEuX293bmVyO2lmKG51bGwhPWIpe3ZvaWQgMCE9PWIucmVmJiYoaz1iLnJlZixoPUcuY3VycmVudCk7dm9pZCAwIT09Yi5rZXkmJihkPVwiXCIrYi5rZXkpO2lmKGEudHlwZSYmYS50eXBlLmRlZmF1bHRQcm9wcyl2YXIgZz1hLnR5cGUuZGVmYXVsdFByb3BzO2ZvcihmIGluIGIpSC5jYWxsKGIsZikmJiFJLmhhc093blByb3BlcnR5KGYpJiYoZVtmXT12b2lkIDA9PT1iW2ZdJiZ2b2lkIDAhPT1nP2dbZl06YltmXSl9dmFyIGY9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1mKWUuY2hpbGRyZW49YztlbHNlIGlmKDE8Zil7Zz1BcnJheShmKTtmb3IodmFyIG09MDttPGY7bSsrKWdbbV09YXJndW1lbnRzW20rMl07ZS5jaGlsZHJlbj1nfXJldHVybnskJHR5cGVvZjpuLHR5cGU6YS50eXBlLFxua2V5OmQscmVmOmsscHJvcHM6ZSxfb3duZXI6aH19O2V4cG9ydHMuY3JlYXRlQ29udGV4dD1mdW5jdGlvbihhLGIpe3ZvaWQgMD09PWImJihiPW51bGwpO2E9eyQkdHlwZW9mOnIsX2NhbGN1bGF0ZUNoYW5nZWRCaXRzOmIsX2N1cnJlbnRWYWx1ZTphLF9jdXJyZW50VmFsdWUyOmEsX3RocmVhZENvdW50OjAsUHJvdmlkZXI6bnVsbCxDb25zdW1lcjpudWxsfTthLlByb3ZpZGVyPXskJHR5cGVvZjpxLF9jb250ZXh0OmF9O3JldHVybiBhLkNvbnN1bWVyPWF9O2V4cG9ydHMuY3JlYXRlRWxlbWVudD1KO2V4cG9ydHMuY3JlYXRlRmFjdG9yeT1mdW5jdGlvbihhKXt2YXIgYj1KLmJpbmQobnVsbCxhKTtiLnR5cGU9YTtyZXR1cm4gYn07ZXhwb3J0cy5jcmVhdGVSZWY9ZnVuY3Rpb24oKXtyZXR1cm57Y3VycmVudDpudWxsfX07ZXhwb3J0cy5mb3J3YXJkUmVmPWZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjp0LHJlbmRlcjphfX07ZXhwb3J0cy5pc1ZhbGlkRWxlbWVudD1MO1xuZXhwb3J0cy5sYXp5PWZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjp2LF9wYXlsb2FkOntfc3RhdHVzOi0xLF9yZXN1bHQ6YX0sX2luaXQ6UX19O2V4cG9ydHMubWVtbz1mdW5jdGlvbihhLGIpe3JldHVybnskJHR5cGVvZjp1LHR5cGU6YSxjb21wYXJlOnZvaWQgMD09PWI/bnVsbDpifX07ZXhwb3J0cy51c2VDYWxsYmFjaz1mdW5jdGlvbihhLGIpe3JldHVybiBTKCkudXNlQ2FsbGJhY2soYSxiKX07ZXhwb3J0cy51c2VDb250ZXh0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFMoKS51c2VDb250ZXh0KGEsYil9O2V4cG9ydHMudXNlRGVidWdWYWx1ZT1mdW5jdGlvbigpe307ZXhwb3J0cy51c2VFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gUygpLnVzZUVmZmVjdChhLGIpfTtleHBvcnRzLnVzZUltcGVyYXRpdmVIYW5kbGU9ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBTKCkudXNlSW1wZXJhdGl2ZUhhbmRsZShhLGIsYyl9O1xuZXhwb3J0cy51c2VMYXlvdXRFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gUygpLnVzZUxheW91dEVmZmVjdChhLGIpfTtleHBvcnRzLnVzZU1lbW89ZnVuY3Rpb24oYSxiKXtyZXR1cm4gUygpLnVzZU1lbW8oYSxiKX07ZXhwb3J0cy51c2VSZWR1Y2VyPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gUygpLnVzZVJlZHVjZXIoYSxiLGMpfTtleHBvcnRzLnVzZVJlZj1mdW5jdGlvbihhKXtyZXR1cm4gUygpLnVzZVJlZihhKX07ZXhwb3J0cy51c2VTdGF0ZT1mdW5jdGlvbihhKXtyZXR1cm4gUygpLnVzZVN0YXRlKGEpfTtleHBvcnRzLnZlcnNpb249XCIxNy4wLjJcIjtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYwLjIwLjJcbiAqIHNjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG4ndXNlIHN0cmljdCc7dmFyIGYsZyxoLGs7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBwZXJmb3JtYW5jZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHBlcmZvcm1hbmNlLm5vdyl7dmFyIGw9cGVyZm9ybWFuY2U7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gbC5ub3coKX19ZWxzZXt2YXIgcD1EYXRlLHE9cC5ub3coKTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiBwLm5vdygpLXF9fVxuaWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBNZXNzYWdlQ2hhbm5lbCl7dmFyIHQ9bnVsbCx1PW51bGwsdz1mdW5jdGlvbigpe2lmKG51bGwhPT10KXRyeXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO3QoITAsYSk7dD1udWxsfWNhdGNoKGIpe3Rocm93IHNldFRpbWVvdXQodywwKSxiO319O2Y9ZnVuY3Rpb24oYSl7bnVsbCE9PXQ/c2V0VGltZW91dChmLDAsYSk6KHQ9YSxzZXRUaW1lb3V0KHcsMCkpfTtnPWZ1bmN0aW9uKGEsYil7dT1zZXRUaW1lb3V0KGEsYil9O2g9ZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQodSl9O2V4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQ9ZnVuY3Rpb24oKXtyZXR1cm4hMX07az1leHBvcnRzLnVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlPWZ1bmN0aW9uKCl7fX1lbHNle3ZhciB4PXdpbmRvdy5zZXRUaW1lb3V0LHk9d2luZG93LmNsZWFyVGltZW91dDtpZihcInVuZGVmaW5lZFwiIT09dHlwZW9mIGNvbnNvbGUpe3ZhciB6PVxud2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCByZXF1ZXN0QW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vcmVhY3Rqcy5vcmcvbGluay9yZWFjdC1wb2x5ZmlsbHNcIik7XCJmdW5jdGlvblwiIT09dHlwZW9mIHomJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IGNhbmNlbEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL3JlYWN0anMub3JnL2xpbmsvcmVhY3QtcG9seWZpbGxzXCIpfXZhciBBPSExLEI9bnVsbCxDPS0xLEQ9NSxFPTA7ZXhwb3J0cy51bnN0YWJsZV9zaG91bGRZaWVsZD1mdW5jdGlvbigpe3JldHVybiBleHBvcnRzLnVuc3RhYmxlX25vdygpPj1cbkV9O2s9ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfZm9yY2VGcmFtZVJhdGU9ZnVuY3Rpb24oYSl7MD5hfHwxMjU8YT9jb25zb2xlLmVycm9yKFwiZm9yY2VGcmFtZVJhdGUgdGFrZXMgYSBwb3NpdGl2ZSBpbnQgYmV0d2VlbiAwIGFuZCAxMjUsIGZvcmNpbmcgZnJhbWUgcmF0ZXMgaGlnaGVyIHRoYW4gMTI1IGZwcyBpcyBub3Qgc3VwcG9ydGVkXCIpOkQ9MDxhP01hdGguZmxvb3IoMUUzL2EpOjV9O3ZhciBGPW5ldyBNZXNzYWdlQ2hhbm5lbCxHPUYucG9ydDI7Ri5wb3J0MS5vbm1lc3NhZ2U9ZnVuY3Rpb24oKXtpZihudWxsIT09Qil7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtFPWErRDt0cnl7QighMCxhKT9HLnBvc3RNZXNzYWdlKG51bGwpOihBPSExLEI9bnVsbCl9Y2F0Y2goYil7dGhyb3cgRy5wb3N0TWVzc2FnZShudWxsKSxiO319ZWxzZSBBPSExfTtmPWZ1bmN0aW9uKGEpe0I9YTtBfHwoQT0hMCxHLnBvc3RNZXNzYWdlKG51bGwpKX07Zz1mdW5jdGlvbihhLGIpe0M9XG54KGZ1bmN0aW9uKCl7YShleHBvcnRzLnVuc3RhYmxlX25vdygpKX0sYil9O2g9ZnVuY3Rpb24oKXt5KEMpO0M9LTF9fWZ1bmN0aW9uIEgoYSxiKXt2YXIgYz1hLmxlbmd0aDthLnB1c2goYik7YTpmb3IoOzspe3ZhciBkPWMtMT4+PjEsZT1hW2RdO2lmKHZvaWQgMCE9PWUmJjA8SShlLGIpKWFbZF09YixhW2NdPWUsYz1kO2Vsc2UgYnJlYWsgYX19ZnVuY3Rpb24gSihhKXthPWFbMF07cmV0dXJuIHZvaWQgMD09PWE/bnVsbDphfVxuZnVuY3Rpb24gSyhhKXt2YXIgYj1hWzBdO2lmKHZvaWQgMCE9PWIpe3ZhciBjPWEucG9wKCk7aWYoYyE9PWIpe2FbMF09YzthOmZvcih2YXIgZD0wLGU9YS5sZW5ndGg7ZDxlOyl7dmFyIG09MiooZCsxKS0xLG49YVttXSx2PW0rMSxyPWFbdl07aWYodm9pZCAwIT09biYmMD5JKG4sYykpdm9pZCAwIT09ciYmMD5JKHIsbik/KGFbZF09cixhW3ZdPWMsZD12KTooYVtkXT1uLGFbbV09YyxkPW0pO2Vsc2UgaWYodm9pZCAwIT09ciYmMD5JKHIsYykpYVtkXT1yLGFbdl09YyxkPXY7ZWxzZSBicmVhayBhfX1yZXR1cm4gYn1yZXR1cm4gbnVsbH1mdW5jdGlvbiBJKGEsYil7dmFyIGM9YS5zb3J0SW5kZXgtYi5zb3J0SW5kZXg7cmV0dXJuIDAhPT1jP2M6YS5pZC1iLmlkfXZhciBMPVtdLE09W10sTj0xLE89bnVsbCxQPTMsUT0hMSxSPSExLFM9ITE7XG5mdW5jdGlvbiBUKGEpe2Zvcih2YXIgYj1KKE0pO251bGwhPT1iOyl7aWYobnVsbD09PWIuY2FsbGJhY2spSyhNKTtlbHNlIGlmKGIuc3RhcnRUaW1lPD1hKUsoTSksYi5zb3J0SW5kZXg9Yi5leHBpcmF0aW9uVGltZSxIKEwsYik7ZWxzZSBicmVhaztiPUooTSl9fWZ1bmN0aW9uIFUoYSl7Uz0hMTtUKGEpO2lmKCFSKWlmKG51bGwhPT1KKEwpKVI9ITAsZihWKTtlbHNle3ZhciBiPUooTSk7bnVsbCE9PWImJmcoVSxiLnN0YXJ0VGltZS1hKX19XG5mdW5jdGlvbiBWKGEsYil7Uj0hMTtTJiYoUz0hMSxoKCkpO1E9ITA7dmFyIGM9UDt0cnl7VChiKTtmb3IoTz1KKEwpO251bGwhPT1PJiYoIShPLmV4cGlyYXRpb25UaW1lPmIpfHxhJiYhZXhwb3J0cy51bnN0YWJsZV9zaG91bGRZaWVsZCgpKTspe3ZhciBkPU8uY2FsbGJhY2s7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe08uY2FsbGJhY2s9bnVsbDtQPU8ucHJpb3JpdHlMZXZlbDt2YXIgZT1kKE8uZXhwaXJhdGlvblRpbWU8PWIpO2I9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZT9PLmNhbGxiYWNrPWU6Tz09PUooTCkmJksoTCk7VChiKX1lbHNlIEsoTCk7Tz1KKEwpfWlmKG51bGwhPT1PKXZhciBtPSEwO2Vsc2V7dmFyIG49SihNKTtudWxsIT09biYmZyhVLG4uc3RhcnRUaW1lLWIpO209ITF9cmV0dXJuIG19ZmluYWxseXtPPW51bGwsUD1jLFE9ITF9fXZhciBXPWs7ZXhwb3J0cy51bnN0YWJsZV9JZGxlUHJpb3JpdHk9NTtcbmV4cG9ydHMudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHk9MTtleHBvcnRzLnVuc3RhYmxlX0xvd1ByaW9yaXR5PTQ7ZXhwb3J0cy51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eT0zO2V4cG9ydHMudW5zdGFibGVfUHJvZmlsaW5nPW51bGw7ZXhwb3J0cy51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eT0yO2V4cG9ydHMudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7YS5jYWxsYmFjaz1udWxsfTtleHBvcnRzLnVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7Unx8UXx8KFI9ITAsZihWKSl9O2V4cG9ydHMudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWw9ZnVuY3Rpb24oKXtyZXR1cm4gUH07ZXhwb3J0cy51bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZT1mdW5jdGlvbigpe3JldHVybiBKKEwpfTtcbmV4cG9ydHMudW5zdGFibGVfbmV4dD1mdW5jdGlvbihhKXtzd2l0Y2goUCl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6dmFyIGI9MzticmVhaztkZWZhdWx0OmI9UH12YXIgYz1QO1A9Yjt0cnl7cmV0dXJuIGEoKX1maW5hbGx5e1A9Y319O2V4cG9ydHMudW5zdGFibGVfcGF1c2VFeGVjdXRpb249ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfcmVxdWVzdFBhaW50PVc7ZXhwb3J0cy51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHk9ZnVuY3Rpb24oYSxiKXtzd2l0Y2goYSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6Y2FzZSA0OmNhc2UgNTpicmVhaztkZWZhdWx0OmE9M312YXIgYz1QO1A9YTt0cnl7cmV0dXJuIGIoKX1maW5hbGx5e1A9Y319O1xuZXhwb3J0cy51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1leHBvcnRzLnVuc3RhYmxlX25vdygpO1wib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWM/KGM9Yy5kZWxheSxjPVwibnVtYmVyXCI9PT10eXBlb2YgYyYmMDxjP2QrYzpkKTpjPWQ7c3dpdGNoKGEpe2Nhc2UgMTp2YXIgZT0tMTticmVhaztjYXNlIDI6ZT0yNTA7YnJlYWs7Y2FzZSA1OmU9MTA3Mzc0MTgyMzticmVhaztjYXNlIDQ6ZT0xRTQ7YnJlYWs7ZGVmYXVsdDplPTVFM31lPWMrZTthPXtpZDpOKyssY2FsbGJhY2s6Yixwcmlvcml0eUxldmVsOmEsc3RhcnRUaW1lOmMsZXhwaXJhdGlvblRpbWU6ZSxzb3J0SW5kZXg6LTF9O2M+ZD8oYS5zb3J0SW5kZXg9YyxIKE0sYSksbnVsbD09PUooTCkmJmE9PT1KKE0pJiYoUz9oKCk6Uz0hMCxnKFUsYy1kKSkpOihhLnNvcnRJbmRleD1lLEgoTCxhKSxSfHxRfHwoUj0hMCxmKFYpKSk7cmV0dXJuIGF9O1xuZXhwb3J0cy51bnN0YWJsZV93cmFwQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7dmFyIGI9UDtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgYz1QO1A9Yjt0cnl7cmV0dXJuIGEuYXBwbHkodGhpcyxhcmd1bWVudHMpfWZpbmFsbHl7UD1jfX19O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSAoc3RyaW5nLCBzZXBhcmF0b3IpID0+IHtcblx0aWYgKCEodHlwZW9mIHN0cmluZyA9PT0gJ3N0cmluZycgJiYgdHlwZW9mIHNlcGFyYXRvciA9PT0gJ3N0cmluZycpKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgdGhlIGFyZ3VtZW50cyB0byBiZSBvZiB0eXBlIGBzdHJpbmdgJyk7XG5cdH1cblxuXHRpZiAoc2VwYXJhdG9yID09PSAnJykge1xuXHRcdHJldHVybiBbc3RyaW5nXTtcblx0fVxuXG5cdGNvbnN0IHNlcGFyYXRvckluZGV4ID0gc3RyaW5nLmluZGV4T2Yoc2VwYXJhdG9yKTtcblxuXHRpZiAoc2VwYXJhdG9ySW5kZXggPT09IC0xKSB7XG5cdFx0cmV0dXJuIFtzdHJpbmddO1xuXHR9XG5cblx0cmV0dXJuIFtcblx0XHRzdHJpbmcuc2xpY2UoMCwgc2VwYXJhdG9ySW5kZXgpLFxuXHRcdHN0cmluZy5zbGljZShzZXBhcmF0b3JJbmRleCArIHNlcGFyYXRvci5sZW5ndGgpXG5cdF07XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xubW9kdWxlLmV4cG9ydHMgPSBzdHIgPT4gZW5jb2RlVVJJQ29tcG9uZW50KHN0cikucmVwbGFjZSgvWyEnKCkqXS9nLCB4ID0+IGAlJHt4LmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKCl9YCk7XG4iLCJpbXBvcnQgYXBpIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICAgICAgICBpbXBvcnQgY29udGVudCBmcm9tIFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbGVzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMl0udXNlWzJdIS4vc3R5bGUubGVzc1wiO1xuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5pZiAobW9kdWxlLmhvdCkge1xuICBpZiAoIWNvbnRlbnQubG9jYWxzIHx8IG1vZHVsZS5ob3QuaW52YWxpZGF0ZSkge1xuICAgIHZhciBpc0VxdWFsTG9jYWxzID0gZnVuY3Rpb24gaXNFcXVhbExvY2FscyhhLCBiLCBpc05hbWVkRXhwb3J0KSB7XG4gIGlmICghYSAmJiBiIHx8IGEgJiYgIWIpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICB2YXIgcDtcblxuICBmb3IgKHAgaW4gYSkge1xuICAgIGlmIChpc05hbWVkRXhwb3J0ICYmIHAgPT09ICdkZWZhdWx0Jykge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnRpbnVlXG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICBpZiAoYVtwXSAhPT0gYltwXSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIGZvciAocCBpbiBiKSB7XG4gICAgaWYgKGlzTmFtZWRFeHBvcnQgJiYgcCA9PT0gJ2RlZmF1bHQnKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29udGludWVcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIGlmICghYVtwXSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufTtcbiAgICB2YXIgb2xkTG9jYWxzID0gY29udGVudC5sb2NhbHM7XG5cbiAgICBtb2R1bGUuaG90LmFjY2VwdChcbiAgICAgIFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbGVzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMl0udXNlWzJdIS4vc3R5bGUubGVzc1wiLFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoIWlzRXF1YWxMb2NhbHMob2xkTG9jYWxzLCBjb250ZW50LmxvY2FscywgdW5kZWZpbmVkKSkge1xuICAgICAgICAgICAgICAgIG1vZHVsZS5ob3QuaW52YWxpZGF0ZSgpO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgb2xkTG9jYWxzID0gY29udGVudC5sb2NhbHM7XG5cbiAgICAgICAgICAgICAgdXBkYXRlKGNvbnRlbnQpO1xuICAgICAgfVxuICAgIClcbiAgfVxuXG4gIG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHtcbiAgICB1cGRhdGUoKTtcbiAgfSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNvbnRlbnQubG9jYWxzIHx8IHt9OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgaXNPbGRJRSA9IGZ1bmN0aW9uIGlzT2xkSUUoKSB7XG4gIHZhciBtZW1vO1xuICByZXR1cm4gZnVuY3Rpb24gbWVtb3JpemUoKSB7XG4gICAgaWYgKHR5cGVvZiBtZW1vID09PSAndW5kZWZpbmVkJykge1xuICAgICAgLy8gVGVzdCBmb3IgSUUgPD0gOSBhcyBwcm9wb3NlZCBieSBCcm93c2VyaGFja3NcbiAgICAgIC8vIEBzZWUgaHR0cDovL2Jyb3dzZXJoYWNrcy5jb20vI2hhY2stZTcxZDg2OTJmNjUzMzQxNzNmZWU3MTVjMjIyY2I4MDVcbiAgICAgIC8vIFRlc3RzIGZvciBleGlzdGVuY2Ugb2Ygc3RhbmRhcmQgZ2xvYmFscyBpcyB0byBhbGxvdyBzdHlsZS1sb2FkZXJcbiAgICAgIC8vIHRvIG9wZXJhdGUgY29ycmVjdGx5IGludG8gbm9uLXN0YW5kYXJkIGVudmlyb25tZW50c1xuICAgICAgLy8gQHNlZSBodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay1jb250cmliL3N0eWxlLWxvYWRlci9pc3N1ZXMvMTc3XG4gICAgICBtZW1vID0gQm9vbGVhbih3aW5kb3cgJiYgZG9jdW1lbnQgJiYgZG9jdW1lbnQuYWxsICYmICF3aW5kb3cuYXRvYik7XG4gICAgfVxuXG4gICAgcmV0dXJuIG1lbW87XG4gIH07XG59KCk7XG5cbnZhciBnZXRUYXJnZXQgPSBmdW5jdGlvbiBnZXRUYXJnZXQoKSB7XG4gIHZhciBtZW1vID0ge307XG4gIHJldHVybiBmdW5jdGlvbiBtZW1vcml6ZSh0YXJnZXQpIHtcbiAgICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbiAgfTtcbn0oKTtcblxudmFyIHN0eWxlc0luRG9tID0gW107XG5cbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5Eb20ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5Eb21baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXggIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRvbVtpbmRleF0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3R5bGVzSW5Eb20ucHVzaCh7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IGFkZFN0eWxlKG9iaiwgb3B0aW9ucyksXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cblxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7XG4gIHZhciBhdHRyaWJ1dGVzID0gb3B0aW9ucy5hdHRyaWJ1dGVzIHx8IHt9O1xuXG4gIGlmICh0eXBlb2YgYXR0cmlidXRlcy5ub25jZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09ICd1bmRlZmluZWQnID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuXG4gICAgaWYgKG5vbmNlKSB7XG4gICAgICBhdHRyaWJ1dGVzLm5vbmNlID0gbm9uY2U7XG4gICAgfVxuICB9XG5cbiAgT2JqZWN0LmtleXMoYXR0cmlidXRlcykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgc3R5bGUuc2V0QXR0cmlidXRlKGtleSwgYXR0cmlidXRlc1trZXldKTtcbiAgfSk7XG5cbiAgaWYgKHR5cGVvZiBvcHRpb25zLmluc2VydCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIG9wdGlvbnMuaW5zZXJ0KHN0eWxlKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KG9wdGlvbnMuaW5zZXJ0IHx8ICdoZWFkJyk7XG5cbiAgICBpZiAoIXRhcmdldCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgICB9XG5cbiAgICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuICB9XG5cbiAgcmV0dXJuIHN0eWxlO1xufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGUpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZS5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZSk7XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG52YXIgcmVwbGFjZVRleHQgPSBmdW5jdGlvbiByZXBsYWNlVGV4dCgpIHtcbiAgdmFyIHRleHRTdG9yZSA9IFtdO1xuICByZXR1cm4gZnVuY3Rpb24gcmVwbGFjZShpbmRleCwgcmVwbGFjZW1lbnQpIHtcbiAgICB0ZXh0U3RvcmVbaW5kZXhdID0gcmVwbGFjZW1lbnQ7XG4gICAgcmV0dXJuIHRleHRTdG9yZS5maWx0ZXIoQm9vbGVhbikuam9pbignXFxuJyk7XG4gIH07XG59KCk7XG5cbmZ1bmN0aW9uIGFwcGx5VG9TaW5nbGV0b25UYWcoc3R5bGUsIGluZGV4LCByZW1vdmUsIG9iaikge1xuICB2YXIgY3NzID0gcmVtb3ZlID8gJycgOiBvYmoubWVkaWEgPyBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpLmNvbmNhdChvYmouY3NzLCBcIn1cIikgOiBvYmouY3NzOyAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG4gIGlmIChzdHlsZS5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGUuc3R5bGVTaGVldC5jc3NUZXh0ID0gcmVwbGFjZVRleHQoaW5kZXgsIGNzcyk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIGNzc05vZGUgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpO1xuICAgIHZhciBjaGlsZE5vZGVzID0gc3R5bGUuY2hpbGROb2RlcztcblxuICAgIGlmIChjaGlsZE5vZGVzW2luZGV4XSkge1xuICAgICAgc3R5bGUucmVtb3ZlQ2hpbGQoY2hpbGROb2Rlc1tpbmRleF0pO1xuICAgIH1cblxuICAgIGlmIChjaGlsZE5vZGVzLmxlbmd0aCkge1xuICAgICAgc3R5bGUuaW5zZXJ0QmVmb3JlKGNzc05vZGUsIGNoaWxkTm9kZXNbaW5kZXhdKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3R5bGUuYXBwZW5kQ2hpbGQoY3NzTm9kZSk7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGFwcGx5VG9UYWcoc3R5bGUsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gb2JqLmNzcztcbiAgdmFyIG1lZGlhID0gb2JqLm1lZGlhO1xuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuICBpZiAobWVkaWEpIHtcbiAgICBzdHlsZS5zZXRBdHRyaWJ1dGUoJ21lZGlhJywgbWVkaWEpO1xuICB9IGVsc2Uge1xuICAgIHN0eWxlLnJlbW92ZUF0dHJpYnV0ZSgnbWVkaWEnKTtcbiAgfVxuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH0gLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuXG4gIGlmIChzdHlsZS5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGUuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZS5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZS5yZW1vdmVDaGlsZChzdHlsZS5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxuXG52YXIgc2luZ2xldG9uID0gbnVsbDtcbnZhciBzaW5nbGV0b25Db3VudGVyID0gMDtcblxuZnVuY3Rpb24gYWRkU3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBzdHlsZTtcbiAgdmFyIHVwZGF0ZTtcbiAgdmFyIHJlbW92ZTtcblxuICBpZiAob3B0aW9ucy5zaW5nbGV0b24pIHtcbiAgICB2YXIgc3R5bGVJbmRleCA9IHNpbmdsZXRvbkNvdW50ZXIrKztcbiAgICBzdHlsZSA9IHNpbmdsZXRvbiB8fCAoc2luZ2xldG9uID0gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpKTtcbiAgICB1cGRhdGUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIGZhbHNlKTtcbiAgICByZW1vdmUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIHRydWUpO1xuICB9IGVsc2Uge1xuICAgIHN0eWxlID0gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICAgIHVwZGF0ZSA9IGFwcGx5VG9UYWcuYmluZChudWxsLCBzdHlsZSwgb3B0aW9ucyk7XG5cbiAgICByZW1vdmUgPSBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGUpO1xuICAgIH07XG4gIH1cblxuICB1cGRhdGUob2JqKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZVN0eWxlKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXApIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB1cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVtb3ZlKCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9OyAvLyBGb3JjZSBzaW5nbGUtdGFnIHNvbHV0aW9uIG9uIElFNi05LCB3aGljaCBoYXMgYSBoYXJkIGxpbWl0IG9uIHRoZSAjIG9mIDxzdHlsZT5cbiAgLy8gdGFncyBpdCB3aWxsIGFsbG93IG9uIGEgcGFnZVxuXG4gIGlmICghb3B0aW9ucy5zaW5nbGV0b24gJiYgdHlwZW9mIG9wdGlvbnMuc2luZ2xldG9uICE9PSAnYm9vbGVhbicpIHtcbiAgICBvcHRpb25zLnNpbmdsZXRvbiA9IGlzT2xkSUUoKTtcbiAgfVxuXG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcblxuICAgIGlmIChPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobmV3TGlzdCkgIT09ICdbb2JqZWN0IEFycmF5XScpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRG9tW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5Eb21bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRG9tW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRG9tLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdGlmIChjYWNoZWRNb2R1bGUuZXJyb3IgIT09IHVuZGVmaW5lZCkgdGhyb3cgY2FjaGVkTW9kdWxlLmVycm9yO1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHR0cnkge1xuXHRcdHZhciBleGVjT3B0aW9ucyA9IHsgaWQ6IG1vZHVsZUlkLCBtb2R1bGU6IG1vZHVsZSwgZmFjdG9yeTogX193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0sIHJlcXVpcmU6IF9fd2VicGFja19yZXF1aXJlX18gfTtcblx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmkuZm9yRWFjaChmdW5jdGlvbihoYW5kbGVyKSB7IGhhbmRsZXIoZXhlY09wdGlvbnMpOyB9KTtcblx0XHRtb2R1bGUgPSBleGVjT3B0aW9ucy5tb2R1bGU7XG5cdFx0ZXhlY09wdGlvbnMuZmFjdG9yeS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBleGVjT3B0aW9ucy5yZXF1aXJlKTtcblx0fSBjYXRjaChlKSB7XG5cdFx0bW9kdWxlLmVycm9yID0gZTtcblx0XHR0aHJvdyBlO1xuXHR9XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4vLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuX193ZWJwYWNrX3JlcXVpcmVfXy5tID0gX193ZWJwYWNrX21vZHVsZXNfXztcblxuLy8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbl9fd2VicGFja19yZXF1aXJlX18uYyA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfXztcblxuLy8gZXhwb3NlIHRoZSBtb2R1bGUgZXhlY3V0aW9uIGludGVyY2VwdG9yXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmkgPSBbXTtcblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCIvLyBUaGlzIGZ1bmN0aW9uIGFsbG93IHRvIHJlZmVyZW5jZSBhbGwgY2h1bmtzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmh1ID0gKGNodW5rSWQpID0+IHtcblx0Ly8gcmV0dXJuIHVybCBmb3IgZmlsZW5hbWVzIGJhc2VkIG9uIHRlbXBsYXRlXG5cdHJldHVybiBcIlwiICsgY2h1bmtJZCArIFwiLlwiICsgX193ZWJwYWNrX3JlcXVpcmVfXy5oKCkgKyBcIi5ob3QtdXBkYXRlLmpzXCI7XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uaG1yRiA9ICgpID0+IChcIm1haW4uXCIgKyBfX3dlYnBhY2tfcmVxdWlyZV9fLmgoKSArIFwiLmhvdC11cGRhdGUuanNvblwiKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmggPSAoKSA9PiAoXCI3YTE0MjU3ZDIxNTA1YTY3NDEyM1wiKSIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIi8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uciA9IChleHBvcnRzKSA9PiB7XG5cdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXHR9XG5cdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG59OyIsInZhciBjdXJyZW50TW9kdWxlRGF0YSA9IHt9O1xudmFyIGluc3RhbGxlZE1vZHVsZXMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmM7XG5cbi8vIG1vZHVsZSBhbmQgcmVxdWlyZSBjcmVhdGlvblxudmFyIGN1cnJlbnRDaGlsZE1vZHVsZTtcbnZhciBjdXJyZW50UGFyZW50cyA9IFtdO1xuXG4vLyBzdGF0dXNcbnZhciByZWdpc3RlcmVkU3RhdHVzSGFuZGxlcnMgPSBbXTtcbnZhciBjdXJyZW50U3RhdHVzID0gXCJpZGxlXCI7XG5cbi8vIHdoaWxlIGRvd25sb2FkaW5nXG52YXIgYmxvY2tpbmdQcm9taXNlcztcblxuLy8gVGhlIHVwZGF0ZSBpbmZvXG52YXIgY3VycmVudFVwZGF0ZUFwcGx5SGFuZGxlcnM7XG52YXIgcXVldWVkSW52YWxpZGF0ZWRNb2R1bGVzO1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnNcbl9fd2VicGFja19yZXF1aXJlX18uaG1yRCA9IGN1cnJlbnRNb2R1bGVEYXRhO1xuXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmkucHVzaChmdW5jdGlvbiAob3B0aW9ucykge1xuXHR2YXIgbW9kdWxlID0gb3B0aW9ucy5tb2R1bGU7XG5cdHZhciByZXF1aXJlID0gY3JlYXRlUmVxdWlyZShvcHRpb25zLnJlcXVpcmUsIG9wdGlvbnMuaWQpO1xuXHRtb2R1bGUuaG90ID0gY3JlYXRlTW9kdWxlSG90T2JqZWN0KG9wdGlvbnMuaWQsIG1vZHVsZSk7XG5cdG1vZHVsZS5wYXJlbnRzID0gY3VycmVudFBhcmVudHM7XG5cdG1vZHVsZS5jaGlsZHJlbiA9IFtdO1xuXHRjdXJyZW50UGFyZW50cyA9IFtdO1xuXHRvcHRpb25zLnJlcXVpcmUgPSByZXF1aXJlO1xufSk7XG5cbl9fd2VicGFja19yZXF1aXJlX18uaG1yQyA9IHt9O1xuX193ZWJwYWNrX3JlcXVpcmVfXy5obXJJID0ge307XG5cbmZ1bmN0aW9uIGNyZWF0ZVJlcXVpcmUocmVxdWlyZSwgbW9kdWxlSWQpIHtcblx0dmFyIG1lID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF07XG5cdGlmICghbWUpIHJldHVybiByZXF1aXJlO1xuXHR2YXIgZm4gPSBmdW5jdGlvbiAocmVxdWVzdCkge1xuXHRcdGlmIChtZS5ob3QuYWN0aXZlKSB7XG5cdFx0XHRpZiAoaW5zdGFsbGVkTW9kdWxlc1tyZXF1ZXN0XSkge1xuXHRcdFx0XHR2YXIgcGFyZW50cyA9IGluc3RhbGxlZE1vZHVsZXNbcmVxdWVzdF0ucGFyZW50cztcblx0XHRcdFx0aWYgKHBhcmVudHMuaW5kZXhPZihtb2R1bGVJZCkgPT09IC0xKSB7XG5cdFx0XHRcdFx0cGFyZW50cy5wdXNoKG1vZHVsZUlkKTtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0Y3VycmVudFBhcmVudHMgPSBbbW9kdWxlSWRdO1xuXHRcdFx0XHRjdXJyZW50Q2hpbGRNb2R1bGUgPSByZXF1ZXN0O1xuXHRcdFx0fVxuXHRcdFx0aWYgKG1lLmNoaWxkcmVuLmluZGV4T2YocmVxdWVzdCkgPT09IC0xKSB7XG5cdFx0XHRcdG1lLmNoaWxkcmVuLnB1c2gocmVxdWVzdCk7XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdGNvbnNvbGUud2Fybihcblx0XHRcdFx0XCJbSE1SXSB1bmV4cGVjdGVkIHJlcXVpcmUoXCIgK1xuXHRcdFx0XHRcdHJlcXVlc3QgK1xuXHRcdFx0XHRcdFwiKSBmcm9tIGRpc3Bvc2VkIG1vZHVsZSBcIiArXG5cdFx0XHRcdFx0bW9kdWxlSWRcblx0XHRcdCk7XG5cdFx0XHRjdXJyZW50UGFyZW50cyA9IFtdO1xuXHRcdH1cblx0XHRyZXR1cm4gcmVxdWlyZShyZXF1ZXN0KTtcblx0fTtcblx0dmFyIGNyZWF0ZVByb3BlcnR5RGVzY3JpcHRvciA9IGZ1bmN0aW9uIChuYW1lKSB7XG5cdFx0cmV0dXJuIHtcblx0XHRcdGNvbmZpZ3VyYWJsZTogdHJ1ZSxcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0cmV0dXJuIHJlcXVpcmVbbmFtZV07XG5cdFx0XHR9LFxuXHRcdFx0c2V0OiBmdW5jdGlvbiAodmFsdWUpIHtcblx0XHRcdFx0cmVxdWlyZVtuYW1lXSA9IHZhbHVlO1xuXHRcdFx0fVxuXHRcdH07XG5cdH07XG5cdGZvciAodmFyIG5hbWUgaW4gcmVxdWlyZSkge1xuXHRcdGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocmVxdWlyZSwgbmFtZSkgJiYgbmFtZSAhPT0gXCJlXCIpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShmbiwgbmFtZSwgY3JlYXRlUHJvcGVydHlEZXNjcmlwdG9yKG5hbWUpKTtcblx0XHR9XG5cdH1cblx0Zm4uZSA9IGZ1bmN0aW9uIChjaHVua0lkKSB7XG5cdFx0cmV0dXJuIHRyYWNrQmxvY2tpbmdQcm9taXNlKHJlcXVpcmUuZShjaHVua0lkKSk7XG5cdH07XG5cdHJldHVybiBmbjtcbn1cblxuZnVuY3Rpb24gY3JlYXRlTW9kdWxlSG90T2JqZWN0KG1vZHVsZUlkLCBtZSkge1xuXHR2YXIgX21haW4gPSBjdXJyZW50Q2hpbGRNb2R1bGUgIT09IG1vZHVsZUlkO1xuXHR2YXIgaG90ID0ge1xuXHRcdC8vIHByaXZhdGUgc3R1ZmZcblx0XHRfYWNjZXB0ZWREZXBlbmRlbmNpZXM6IHt9LFxuXHRcdF9hY2NlcHRlZEVycm9ySGFuZGxlcnM6IHt9LFxuXHRcdF9kZWNsaW5lZERlcGVuZGVuY2llczoge30sXG5cdFx0X3NlbGZBY2NlcHRlZDogZmFsc2UsXG5cdFx0X3NlbGZEZWNsaW5lZDogZmFsc2UsXG5cdFx0X3NlbGZJbnZhbGlkYXRlZDogZmFsc2UsXG5cdFx0X2Rpc3Bvc2VIYW5kbGVyczogW10sXG5cdFx0X21haW46IF9tYWluLFxuXHRcdF9yZXF1aXJlU2VsZjogZnVuY3Rpb24gKCkge1xuXHRcdFx0Y3VycmVudFBhcmVudHMgPSBtZS5wYXJlbnRzLnNsaWNlKCk7XG5cdFx0XHRjdXJyZW50Q2hpbGRNb2R1bGUgPSBfbWFpbiA/IHVuZGVmaW5lZCA6IG1vZHVsZUlkO1xuXHRcdFx0X193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCk7XG5cdFx0fSxcblxuXHRcdC8vIE1vZHVsZSBBUElcblx0XHRhY3RpdmU6IHRydWUsXG5cdFx0YWNjZXB0OiBmdW5jdGlvbiAoZGVwLCBjYWxsYmFjaywgZXJyb3JIYW5kbGVyKSB7XG5cdFx0XHRpZiAoZGVwID09PSB1bmRlZmluZWQpIGhvdC5fc2VsZkFjY2VwdGVkID0gdHJ1ZTtcblx0XHRcdGVsc2UgaWYgKHR5cGVvZiBkZXAgPT09IFwiZnVuY3Rpb25cIikgaG90Ll9zZWxmQWNjZXB0ZWQgPSBkZXA7XG5cdFx0XHRlbHNlIGlmICh0eXBlb2YgZGVwID09PSBcIm9iamVjdFwiICYmIGRlcCAhPT0gbnVsbCkge1xuXHRcdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGRlcC5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRcdGhvdC5fYWNjZXB0ZWREZXBlbmRlbmNpZXNbZGVwW2ldXSA9IGNhbGxiYWNrIHx8IGZ1bmN0aW9uICgpIHt9O1xuXHRcdFx0XHRcdGhvdC5fYWNjZXB0ZWRFcnJvckhhbmRsZXJzW2RlcFtpXV0gPSBlcnJvckhhbmRsZXI7XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGhvdC5fYWNjZXB0ZWREZXBlbmRlbmNpZXNbZGVwXSA9IGNhbGxiYWNrIHx8IGZ1bmN0aW9uICgpIHt9O1xuXHRcdFx0XHRob3QuX2FjY2VwdGVkRXJyb3JIYW5kbGVyc1tkZXBdID0gZXJyb3JIYW5kbGVyO1xuXHRcdFx0fVxuXHRcdH0sXG5cdFx0ZGVjbGluZTogZnVuY3Rpb24gKGRlcCkge1xuXHRcdFx0aWYgKGRlcCA9PT0gdW5kZWZpbmVkKSBob3QuX3NlbGZEZWNsaW5lZCA9IHRydWU7XG5cdFx0XHRlbHNlIGlmICh0eXBlb2YgZGVwID09PSBcIm9iamVjdFwiICYmIGRlcCAhPT0gbnVsbClcblx0XHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBkZXAubGVuZ3RoOyBpKyspXG5cdFx0XHRcdFx0aG90Ll9kZWNsaW5lZERlcGVuZGVuY2llc1tkZXBbaV1dID0gdHJ1ZTtcblx0XHRcdGVsc2UgaG90Ll9kZWNsaW5lZERlcGVuZGVuY2llc1tkZXBdID0gdHJ1ZTtcblx0XHR9LFxuXHRcdGRpc3Bvc2U6IGZ1bmN0aW9uIChjYWxsYmFjaykge1xuXHRcdFx0aG90Ll9kaXNwb3NlSGFuZGxlcnMucHVzaChjYWxsYmFjayk7XG5cdFx0fSxcblx0XHRhZGREaXNwb3NlSGFuZGxlcjogZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG5cdFx0XHRob3QuX2Rpc3Bvc2VIYW5kbGVycy5wdXNoKGNhbGxiYWNrKTtcblx0XHR9LFxuXHRcdHJlbW92ZURpc3Bvc2VIYW5kbGVyOiBmdW5jdGlvbiAoY2FsbGJhY2spIHtcblx0XHRcdHZhciBpZHggPSBob3QuX2Rpc3Bvc2VIYW5kbGVycy5pbmRleE9mKGNhbGxiYWNrKTtcblx0XHRcdGlmIChpZHggPj0gMCkgaG90Ll9kaXNwb3NlSGFuZGxlcnMuc3BsaWNlKGlkeCwgMSk7XG5cdFx0fSxcblx0XHRpbnZhbGlkYXRlOiBmdW5jdGlvbiAoKSB7XG5cdFx0XHR0aGlzLl9zZWxmSW52YWxpZGF0ZWQgPSB0cnVlO1xuXHRcdFx0c3dpdGNoIChjdXJyZW50U3RhdHVzKSB7XG5cdFx0XHRcdGNhc2UgXCJpZGxlXCI6XG5cdFx0XHRcdFx0Y3VycmVudFVwZGF0ZUFwcGx5SGFuZGxlcnMgPSBbXTtcblx0XHRcdFx0XHRPYmplY3Qua2V5cyhfX3dlYnBhY2tfcmVxdWlyZV9fLmhtckkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuXHRcdFx0XHRcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5obXJJW2tleV0oXG5cdFx0XHRcdFx0XHRcdG1vZHVsZUlkLFxuXHRcdFx0XHRcdFx0XHRjdXJyZW50VXBkYXRlQXBwbHlIYW5kbGVyc1xuXHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRzZXRTdGF0dXMoXCJyZWFkeVwiKTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSBcInJlYWR5XCI6XG5cdFx0XHRcdFx0T2JqZWN0LmtleXMoX193ZWJwYWNrX3JlcXVpcmVfXy5obXJJKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcblx0XHRcdFx0XHRcdF9fd2VicGFja19yZXF1aXJlX18uaG1ySVtrZXldKFxuXHRcdFx0XHRcdFx0XHRtb2R1bGVJZCxcblx0XHRcdFx0XHRcdFx0Y3VycmVudFVwZGF0ZUFwcGx5SGFuZGxlcnNcblx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgXCJwcmVwYXJlXCI6XG5cdFx0XHRcdGNhc2UgXCJjaGVja1wiOlxuXHRcdFx0XHRjYXNlIFwiZGlzcG9zZVwiOlxuXHRcdFx0XHRjYXNlIFwiYXBwbHlcIjpcblx0XHRcdFx0XHQocXVldWVkSW52YWxpZGF0ZWRNb2R1bGVzID0gcXVldWVkSW52YWxpZGF0ZWRNb2R1bGVzIHx8IFtdKS5wdXNoKFxuXHRcdFx0XHRcdFx0bW9kdWxlSWRcblx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHRcdC8vIGlnbm9yZSByZXF1ZXN0cyBpbiBlcnJvciBzdGF0ZXNcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0Ly8gTWFuYWdlbWVudCBBUElcblx0XHRjaGVjazogaG90Q2hlY2ssXG5cdFx0YXBwbHk6IGhvdEFwcGx5LFxuXHRcdHN0YXR1czogZnVuY3Rpb24gKGwpIHtcblx0XHRcdGlmICghbCkgcmV0dXJuIGN1cnJlbnRTdGF0dXM7XG5cdFx0XHRyZWdpc3RlcmVkU3RhdHVzSGFuZGxlcnMucHVzaChsKTtcblx0XHR9LFxuXHRcdGFkZFN0YXR1c0hhbmRsZXI6IGZ1bmN0aW9uIChsKSB7XG5cdFx0XHRyZWdpc3RlcmVkU3RhdHVzSGFuZGxlcnMucHVzaChsKTtcblx0XHR9LFxuXHRcdHJlbW92ZVN0YXR1c0hhbmRsZXI6IGZ1bmN0aW9uIChsKSB7XG5cdFx0XHR2YXIgaWR4ID0gcmVnaXN0ZXJlZFN0YXR1c0hhbmRsZXJzLmluZGV4T2YobCk7XG5cdFx0XHRpZiAoaWR4ID49IDApIHJlZ2lzdGVyZWRTdGF0dXNIYW5kbGVycy5zcGxpY2UoaWR4LCAxKTtcblx0XHR9LFxuXG5cdFx0Ly9pbmhlcml0IGZyb20gcHJldmlvdXMgZGlzcG9zZSBjYWxsXG5cdFx0ZGF0YTogY3VycmVudE1vZHVsZURhdGFbbW9kdWxlSWRdXG5cdH07XG5cdGN1cnJlbnRDaGlsZE1vZHVsZSA9IHVuZGVmaW5lZDtcblx0cmV0dXJuIGhvdDtcbn1cblxuZnVuY3Rpb24gc2V0U3RhdHVzKG5ld1N0YXR1cykge1xuXHRjdXJyZW50U3RhdHVzID0gbmV3U3RhdHVzO1xuXHRmb3IgKHZhciBpID0gMDsgaSA8IHJlZ2lzdGVyZWRTdGF0dXNIYW5kbGVycy5sZW5ndGg7IGkrKylcblx0XHRyZWdpc3RlcmVkU3RhdHVzSGFuZGxlcnNbaV0uY2FsbChudWxsLCBuZXdTdGF0dXMpO1xufVxuXG5mdW5jdGlvbiB0cmFja0Jsb2NraW5nUHJvbWlzZShwcm9taXNlKSB7XG5cdHN3aXRjaCAoY3VycmVudFN0YXR1cykge1xuXHRcdGNhc2UgXCJyZWFkeVwiOlxuXHRcdFx0c2V0U3RhdHVzKFwicHJlcGFyZVwiKTtcblx0XHRcdGJsb2NraW5nUHJvbWlzZXMucHVzaChwcm9taXNlKTtcblx0XHRcdHdhaXRGb3JCbG9ja2luZ1Byb21pc2VzKGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0c2V0U3RhdHVzKFwicmVhZHlcIik7XG5cdFx0XHR9KTtcblx0XHRcdHJldHVybiBwcm9taXNlO1xuXHRcdGNhc2UgXCJwcmVwYXJlXCI6XG5cdFx0XHRibG9ja2luZ1Byb21pc2VzLnB1c2gocHJvbWlzZSk7XG5cdFx0XHRyZXR1cm4gcHJvbWlzZTtcblx0XHRkZWZhdWx0OlxuXHRcdFx0cmV0dXJuIHByb21pc2U7XG5cdH1cbn1cblxuZnVuY3Rpb24gd2FpdEZvckJsb2NraW5nUHJvbWlzZXMoZm4pIHtcblx0aWYgKGJsb2NraW5nUHJvbWlzZXMubGVuZ3RoID09PSAwKSByZXR1cm4gZm4oKTtcblx0dmFyIGJsb2NrZXIgPSBibG9ja2luZ1Byb21pc2VzO1xuXHRibG9ja2luZ1Byb21pc2VzID0gW107XG5cdHJldHVybiBQcm9taXNlLmFsbChibG9ja2VyKS50aGVuKGZ1bmN0aW9uICgpIHtcblx0XHRyZXR1cm4gd2FpdEZvckJsb2NraW5nUHJvbWlzZXMoZm4pO1xuXHR9KTtcbn1cblxuZnVuY3Rpb24gaG90Q2hlY2soYXBwbHlPblVwZGF0ZSkge1xuXHRpZiAoY3VycmVudFN0YXR1cyAhPT0gXCJpZGxlXCIpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJjaGVjaygpIGlzIG9ubHkgYWxsb3dlZCBpbiBpZGxlIHN0YXR1c1wiKTtcblx0fVxuXHRzZXRTdGF0dXMoXCJjaGVja1wiKTtcblx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18uaG1yTSgpLnRoZW4oZnVuY3Rpb24gKHVwZGF0ZSkge1xuXHRcdGlmICghdXBkYXRlKSB7XG5cdFx0XHRzZXRTdGF0dXMoYXBwbHlJbnZhbGlkYXRlZE1vZHVsZXMoKSA/IFwicmVhZHlcIiA6IFwiaWRsZVwiKTtcblx0XHRcdHJldHVybiBudWxsO1xuXHRcdH1cblxuXHRcdHNldFN0YXR1cyhcInByZXBhcmVcIik7XG5cblx0XHR2YXIgdXBkYXRlZE1vZHVsZXMgPSBbXTtcblx0XHRibG9ja2luZ1Byb21pc2VzID0gW107XG5cdFx0Y3VycmVudFVwZGF0ZUFwcGx5SGFuZGxlcnMgPSBbXTtcblxuXHRcdHJldHVybiBQcm9taXNlLmFsbChcblx0XHRcdE9iamVjdC5rZXlzKF9fd2VicGFja19yZXF1aXJlX18uaG1yQykucmVkdWNlKGZ1bmN0aW9uIChcblx0XHRcdFx0cHJvbWlzZXMsXG5cdFx0XHRcdGtleVxuXHRcdFx0KSB7XG5cdFx0XHRcdF9fd2VicGFja19yZXF1aXJlX18uaG1yQ1trZXldKFxuXHRcdFx0XHRcdHVwZGF0ZS5jLFxuXHRcdFx0XHRcdHVwZGF0ZS5yLFxuXHRcdFx0XHRcdHVwZGF0ZS5tLFxuXHRcdFx0XHRcdHByb21pc2VzLFxuXHRcdFx0XHRcdGN1cnJlbnRVcGRhdGVBcHBseUhhbmRsZXJzLFxuXHRcdFx0XHRcdHVwZGF0ZWRNb2R1bGVzXG5cdFx0XHRcdCk7XG5cdFx0XHRcdHJldHVybiBwcm9taXNlcztcblx0XHRcdH0sXG5cdFx0XHRbXSlcblx0XHQpLnRoZW4oZnVuY3Rpb24gKCkge1xuXHRcdFx0cmV0dXJuIHdhaXRGb3JCbG9ja2luZ1Byb21pc2VzKGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0aWYgKGFwcGx5T25VcGRhdGUpIHtcblx0XHRcdFx0XHRyZXR1cm4gaW50ZXJuYWxBcHBseShhcHBseU9uVXBkYXRlKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRzZXRTdGF0dXMoXCJyZWFkeVwiKTtcblxuXHRcdFx0XHRcdHJldHVybiB1cGRhdGVkTW9kdWxlcztcblx0XHRcdFx0fVxuXHRcdFx0fSk7XG5cdFx0fSk7XG5cdH0pO1xufVxuXG5mdW5jdGlvbiBob3RBcHBseShvcHRpb25zKSB7XG5cdGlmIChjdXJyZW50U3RhdHVzICE9PSBcInJlYWR5XCIpIHtcblx0XHRyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCkudGhlbihmdW5jdGlvbiAoKSB7XG5cdFx0XHR0aHJvdyBuZXcgRXJyb3IoXCJhcHBseSgpIGlzIG9ubHkgYWxsb3dlZCBpbiByZWFkeSBzdGF0dXNcIik7XG5cdFx0fSk7XG5cdH1cblx0cmV0dXJuIGludGVybmFsQXBwbHkob3B0aW9ucyk7XG59XG5cbmZ1bmN0aW9uIGludGVybmFsQXBwbHkob3B0aW9ucykge1xuXHRvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuXHRhcHBseUludmFsaWRhdGVkTW9kdWxlcygpO1xuXG5cdHZhciByZXN1bHRzID0gY3VycmVudFVwZGF0ZUFwcGx5SGFuZGxlcnMubWFwKGZ1bmN0aW9uIChoYW5kbGVyKSB7XG5cdFx0cmV0dXJuIGhhbmRsZXIob3B0aW9ucyk7XG5cdH0pO1xuXHRjdXJyZW50VXBkYXRlQXBwbHlIYW5kbGVycyA9IHVuZGVmaW5lZDtcblxuXHR2YXIgZXJyb3JzID0gcmVzdWx0c1xuXHRcdC5tYXAoZnVuY3Rpb24gKHIpIHtcblx0XHRcdHJldHVybiByLmVycm9yO1xuXHRcdH0pXG5cdFx0LmZpbHRlcihCb29sZWFuKTtcblxuXHRpZiAoZXJyb3JzLmxlbmd0aCA+IDApIHtcblx0XHRzZXRTdGF0dXMoXCJhYm9ydFwiKTtcblx0XHRyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCkudGhlbihmdW5jdGlvbiAoKSB7XG5cdFx0XHR0aHJvdyBlcnJvcnNbMF07XG5cdFx0fSk7XG5cdH1cblxuXHQvLyBOb3cgaW4gXCJkaXNwb3NlXCIgcGhhc2Vcblx0c2V0U3RhdHVzKFwiZGlzcG9zZVwiKTtcblxuXHRyZXN1bHRzLmZvckVhY2goZnVuY3Rpb24gKHJlc3VsdCkge1xuXHRcdGlmIChyZXN1bHQuZGlzcG9zZSkgcmVzdWx0LmRpc3Bvc2UoKTtcblx0fSk7XG5cblx0Ly8gTm93IGluIFwiYXBwbHlcIiBwaGFzZVxuXHRzZXRTdGF0dXMoXCJhcHBseVwiKTtcblxuXHR2YXIgZXJyb3I7XG5cdHZhciByZXBvcnRFcnJvciA9IGZ1bmN0aW9uIChlcnIpIHtcblx0XHRpZiAoIWVycm9yKSBlcnJvciA9IGVycjtcblx0fTtcblxuXHR2YXIgb3V0ZGF0ZWRNb2R1bGVzID0gW107XG5cdHJlc3VsdHMuZm9yRWFjaChmdW5jdGlvbiAocmVzdWx0KSB7XG5cdFx0aWYgKHJlc3VsdC5hcHBseSkge1xuXHRcdFx0dmFyIG1vZHVsZXMgPSByZXN1bHQuYXBwbHkocmVwb3J0RXJyb3IpO1xuXHRcdFx0aWYgKG1vZHVsZXMpIHtcblx0XHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBtb2R1bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdFx0b3V0ZGF0ZWRNb2R1bGVzLnB1c2gobW9kdWxlc1tpXSk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH0pO1xuXG5cdC8vIGhhbmRsZSBlcnJvcnMgaW4gYWNjZXB0IGhhbmRsZXJzIGFuZCBzZWxmIGFjY2VwdGVkIG1vZHVsZSBsb2FkXG5cdGlmIChlcnJvcikge1xuXHRcdHNldFN0YXR1cyhcImZhaWxcIik7XG5cdFx0cmV0dXJuIFByb21pc2UucmVzb2x2ZSgpLnRoZW4oZnVuY3Rpb24gKCkge1xuXHRcdFx0dGhyb3cgZXJyb3I7XG5cdFx0fSk7XG5cdH1cblxuXHRpZiAocXVldWVkSW52YWxpZGF0ZWRNb2R1bGVzKSB7XG5cdFx0cmV0dXJuIGludGVybmFsQXBwbHkob3B0aW9ucykudGhlbihmdW5jdGlvbiAobGlzdCkge1xuXHRcdFx0b3V0ZGF0ZWRNb2R1bGVzLmZvckVhY2goZnVuY3Rpb24gKG1vZHVsZUlkKSB7XG5cdFx0XHRcdGlmIChsaXN0LmluZGV4T2YobW9kdWxlSWQpIDwgMCkgbGlzdC5wdXNoKG1vZHVsZUlkKTtcblx0XHRcdH0pO1xuXHRcdFx0cmV0dXJuIGxpc3Q7XG5cdFx0fSk7XG5cdH1cblxuXHRzZXRTdGF0dXMoXCJpZGxlXCIpO1xuXHRyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG91dGRhdGVkTW9kdWxlcyk7XG59XG5cbmZ1bmN0aW9uIGFwcGx5SW52YWxpZGF0ZWRNb2R1bGVzKCkge1xuXHRpZiAocXVldWVkSW52YWxpZGF0ZWRNb2R1bGVzKSB7XG5cdFx0aWYgKCFjdXJyZW50VXBkYXRlQXBwbHlIYW5kbGVycykgY3VycmVudFVwZGF0ZUFwcGx5SGFuZGxlcnMgPSBbXTtcblx0XHRPYmplY3Qua2V5cyhfX3dlYnBhY2tfcmVxdWlyZV9fLmhtckkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuXHRcdFx0cXVldWVkSW52YWxpZGF0ZWRNb2R1bGVzLmZvckVhY2goZnVuY3Rpb24gKG1vZHVsZUlkKSB7XG5cdFx0XHRcdF9fd2VicGFja19yZXF1aXJlX18uaG1ySVtrZXldKFxuXHRcdFx0XHRcdG1vZHVsZUlkLFxuXHRcdFx0XHRcdGN1cnJlbnRVcGRhdGVBcHBseUhhbmRsZXJzXG5cdFx0XHRcdCk7XG5cdFx0XHR9KTtcblx0XHR9KTtcblx0XHRxdWV1ZWRJbnZhbGlkYXRlZE1vZHVsZXMgPSB1bmRlZmluZWQ7XG5cdFx0cmV0dXJuIHRydWU7XG5cdH1cbn0iLCJ2YXIgc2NyaXB0VXJsO1xuaWYgKF9fd2VicGFja19yZXF1aXJlX18uZy5pbXBvcnRTY3JpcHRzKSBzY3JpcHRVcmwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcubG9jYXRpb24gKyBcIlwiO1xudmFyIGRvY3VtZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmRvY3VtZW50O1xuaWYgKCFzY3JpcHRVcmwgJiYgZG9jdW1lbnQpIHtcblx0aWYgKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpXG5cdFx0c2NyaXB0VXJsID0gZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmNcblx0aWYgKCFzY3JpcHRVcmwpIHtcblx0XHR2YXIgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xuXHRcdGlmKHNjcmlwdHMubGVuZ3RoKSBzY3JpcHRVcmwgPSBzY3JpcHRzW3NjcmlwdHMubGVuZ3RoIC0gMV0uc3JjXG5cdH1cbn1cbi8vIFdoZW4gc3VwcG9ydGluZyBicm93c2VycyB3aGVyZSBhbiBhdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIHlvdSBtdXN0IHNwZWNpZnkgYW4gb3V0cHV0LnB1YmxpY1BhdGggbWFudWFsbHkgdmlhIGNvbmZpZ3VyYXRpb25cbi8vIG9yIHBhc3MgYW4gZW1wdHkgc3RyaW5nIChcIlwiKSBhbmQgc2V0IHRoZSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyB2YXJpYWJsZSBmcm9tIHlvdXIgY29kZSB0byB1c2UgeW91ciBvd24gbG9naWMuXG5pZiAoIXNjcmlwdFVybCkgdGhyb3cgbmV3IEVycm9yKFwiQXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7XG5zY3JpcHRVcmwgPSBzY3JpcHRVcmwucmVwbGFjZSgvIy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcPy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcL1teXFwvXSskLywgXCIvXCIpO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gc2NyaXB0VXJsOyIsIi8vIG5vIGJhc2VVUklcblxuLy8gb2JqZWN0IHRvIHN0b3JlIGxvYWRlZCBhbmQgbG9hZGluZyBjaHVua3Ncbi8vIHVuZGVmaW5lZCA9IGNodW5rIG5vdCBsb2FkZWQsIG51bGwgPSBjaHVuayBwcmVsb2FkZWQvcHJlZmV0Y2hlZFxuLy8gW3Jlc29sdmUsIHJlamVjdCwgUHJvbWlzZV0gPSBjaHVuayBsb2FkaW5nLCAwID0gY2h1bmsgbG9hZGVkXG52YXIgaW5zdGFsbGVkQ2h1bmtzID0ge1xuXHQxNzk6IDBcbn07XG5cbi8vIG5vIGNodW5rIG9uIGRlbWFuZCBsb2FkaW5nXG5cbi8vIG5vIHByZWZldGNoaW5nXG5cbi8vIG5vIHByZWxvYWRlZFxuXG52YXIgY3VycmVudFVwZGF0ZWRNb2R1bGVzTGlzdDtcbnZhciB3YWl0aW5nVXBkYXRlUmVzb2x2ZXMgPSB7fTtcbmZ1bmN0aW9uIGxvYWRVcGRhdGVDaHVuayhjaHVua0lkKSB7XG5cdHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG5cdFx0d2FpdGluZ1VwZGF0ZVJlc29sdmVzW2NodW5rSWRdID0gcmVzb2x2ZTtcblx0XHQvLyBzdGFydCB1cGRhdGUgY2h1bmsgbG9hZGluZ1xuXHRcdHZhciB1cmwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLnAgKyBfX3dlYnBhY2tfcmVxdWlyZV9fLmh1KGNodW5rSWQpO1xuXHRcdC8vIGNyZWF0ZSBlcnJvciBiZWZvcmUgc3RhY2sgdW53b3VuZCB0byBnZXQgdXNlZnVsIHN0YWNrdHJhY2UgbGF0ZXJcblx0XHR2YXIgZXJyb3IgPSBuZXcgRXJyb3IoKTtcblx0XHR2YXIgbG9hZGluZ0VuZGVkID0gKGV2ZW50KSA9PiB7XG5cdFx0XHRpZih3YWl0aW5nVXBkYXRlUmVzb2x2ZXNbY2h1bmtJZF0pIHtcblx0XHRcdFx0d2FpdGluZ1VwZGF0ZVJlc29sdmVzW2NodW5rSWRdID0gdW5kZWZpbmVkXG5cdFx0XHRcdHZhciBlcnJvclR5cGUgPSBldmVudCAmJiAoZXZlbnQudHlwZSA9PT0gJ2xvYWQnID8gJ21pc3NpbmcnIDogZXZlbnQudHlwZSk7XG5cdFx0XHRcdHZhciByZWFsU3JjID0gZXZlbnQgJiYgZXZlbnQudGFyZ2V0ICYmIGV2ZW50LnRhcmdldC5zcmM7XG5cdFx0XHRcdGVycm9yLm1lc3NhZ2UgPSAnTG9hZGluZyBob3QgdXBkYXRlIGNodW5rICcgKyBjaHVua0lkICsgJyBmYWlsZWQuXFxuKCcgKyBlcnJvclR5cGUgKyAnOiAnICsgcmVhbFNyYyArICcpJztcblx0XHRcdFx0ZXJyb3IubmFtZSA9ICdDaHVua0xvYWRFcnJvcic7XG5cdFx0XHRcdGVycm9yLnR5cGUgPSBlcnJvclR5cGU7XG5cdFx0XHRcdGVycm9yLnJlcXVlc3QgPSByZWFsU3JjO1xuXHRcdFx0XHRyZWplY3QoZXJyb3IpO1xuXHRcdFx0fVxuXHRcdH07XG5cdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5sKHVybCwgbG9hZGluZ0VuZGVkKTtcblx0fSk7XG59XG5cbnNlbGZbXCJ3ZWJwYWNrSG90VXBkYXRldHlwZXNjcmlwdERvY3NcIl0gPSAoY2h1bmtJZCwgbW9yZU1vZHVsZXMsIHJ1bnRpbWUpID0+IHtcblx0Zm9yKHZhciBtb2R1bGVJZCBpbiBtb3JlTW9kdWxlcykge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhtb3JlTW9kdWxlcywgbW9kdWxlSWQpKSB7XG5cdFx0XHRjdXJyZW50VXBkYXRlW21vZHVsZUlkXSA9IG1vcmVNb2R1bGVzW21vZHVsZUlkXTtcblx0XHRcdGlmKGN1cnJlbnRVcGRhdGVkTW9kdWxlc0xpc3QpIGN1cnJlbnRVcGRhdGVkTW9kdWxlc0xpc3QucHVzaChtb2R1bGVJZCk7XG5cdFx0fVxuXHR9XG5cdGlmKHJ1bnRpbWUpIGN1cnJlbnRVcGRhdGVSdW50aW1lLnB1c2gocnVudGltZSk7XG5cdGlmKHdhaXRpbmdVcGRhdGVSZXNvbHZlc1tjaHVua0lkXSkge1xuXHRcdHdhaXRpbmdVcGRhdGVSZXNvbHZlc1tjaHVua0lkXSgpO1xuXHRcdHdhaXRpbmdVcGRhdGVSZXNvbHZlc1tjaHVua0lkXSA9IHVuZGVmaW5lZDtcblx0fVxufTtcblxudmFyIGN1cnJlbnRVcGRhdGVDaHVua3M7XG52YXIgY3VycmVudFVwZGF0ZTtcbnZhciBjdXJyZW50VXBkYXRlUmVtb3ZlZENodW5rcztcbnZhciBjdXJyZW50VXBkYXRlUnVudGltZTtcbmZ1bmN0aW9uIGFwcGx5SGFuZGxlcihvcHRpb25zKSB7XG5cdGlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLmYpIGRlbGV0ZSBfX3dlYnBhY2tfcmVxdWlyZV9fLmYuanNvbnBIbXI7XG5cdGN1cnJlbnRVcGRhdGVDaHVua3MgPSB1bmRlZmluZWQ7XG5cdGZ1bmN0aW9uIGdldEFmZmVjdGVkTW9kdWxlRWZmZWN0cyh1cGRhdGVNb2R1bGVJZCkge1xuXHRcdHZhciBvdXRkYXRlZE1vZHVsZXMgPSBbdXBkYXRlTW9kdWxlSWRdO1xuXHRcdHZhciBvdXRkYXRlZERlcGVuZGVuY2llcyA9IHt9O1xuXG5cdFx0dmFyIHF1ZXVlID0gb3V0ZGF0ZWRNb2R1bGVzLm1hcChmdW5jdGlvbiAoaWQpIHtcblx0XHRcdHJldHVybiB7XG5cdFx0XHRcdGNoYWluOiBbaWRdLFxuXHRcdFx0XHRpZDogaWRcblx0XHRcdH07XG5cdFx0fSk7XG5cdFx0d2hpbGUgKHF1ZXVlLmxlbmd0aCA+IDApIHtcblx0XHRcdHZhciBxdWV1ZUl0ZW0gPSBxdWV1ZS5wb3AoKTtcblx0XHRcdHZhciBtb2R1bGVJZCA9IHF1ZXVlSXRlbS5pZDtcblx0XHRcdHZhciBjaGFpbiA9IHF1ZXVlSXRlbS5jaGFpbjtcblx0XHRcdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmNbbW9kdWxlSWRdO1xuXHRcdFx0aWYgKFxuXHRcdFx0XHQhbW9kdWxlIHx8XG5cdFx0XHRcdChtb2R1bGUuaG90Ll9zZWxmQWNjZXB0ZWQgJiYgIW1vZHVsZS5ob3QuX3NlbGZJbnZhbGlkYXRlZClcblx0XHRcdClcblx0XHRcdFx0Y29udGludWU7XG5cdFx0XHRpZiAobW9kdWxlLmhvdC5fc2VsZkRlY2xpbmVkKSB7XG5cdFx0XHRcdHJldHVybiB7XG5cdFx0XHRcdFx0dHlwZTogXCJzZWxmLWRlY2xpbmVkXCIsXG5cdFx0XHRcdFx0Y2hhaW46IGNoYWluLFxuXHRcdFx0XHRcdG1vZHVsZUlkOiBtb2R1bGVJZFxuXHRcdFx0XHR9O1xuXHRcdFx0fVxuXHRcdFx0aWYgKG1vZHVsZS5ob3QuX21haW4pIHtcblx0XHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0XHR0eXBlOiBcInVuYWNjZXB0ZWRcIixcblx0XHRcdFx0XHRjaGFpbjogY2hhaW4sXG5cdFx0XHRcdFx0bW9kdWxlSWQ6IG1vZHVsZUlkXG5cdFx0XHRcdH07XG5cdFx0XHR9XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IG1vZHVsZS5wYXJlbnRzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdHZhciBwYXJlbnRJZCA9IG1vZHVsZS5wYXJlbnRzW2ldO1xuXHRcdFx0XHR2YXIgcGFyZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5jW3BhcmVudElkXTtcblx0XHRcdFx0aWYgKCFwYXJlbnQpIGNvbnRpbnVlO1xuXHRcdFx0XHRpZiAocGFyZW50LmhvdC5fZGVjbGluZWREZXBlbmRlbmNpZXNbbW9kdWxlSWRdKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0XHRcdHR5cGU6IFwiZGVjbGluZWRcIixcblx0XHRcdFx0XHRcdGNoYWluOiBjaGFpbi5jb25jYXQoW3BhcmVudElkXSksXG5cdFx0XHRcdFx0XHRtb2R1bGVJZDogbW9kdWxlSWQsXG5cdFx0XHRcdFx0XHRwYXJlbnRJZDogcGFyZW50SWRcblx0XHRcdFx0XHR9O1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmIChvdXRkYXRlZE1vZHVsZXMuaW5kZXhPZihwYXJlbnRJZCkgIT09IC0xKSBjb250aW51ZTtcblx0XHRcdFx0aWYgKHBhcmVudC5ob3QuX2FjY2VwdGVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXSkge1xuXHRcdFx0XHRcdGlmICghb3V0ZGF0ZWREZXBlbmRlbmNpZXNbcGFyZW50SWRdKVxuXHRcdFx0XHRcdFx0b3V0ZGF0ZWREZXBlbmRlbmNpZXNbcGFyZW50SWRdID0gW107XG5cdFx0XHRcdFx0YWRkQWxsVG9TZXQob3V0ZGF0ZWREZXBlbmRlbmNpZXNbcGFyZW50SWRdLCBbbW9kdWxlSWRdKTtcblx0XHRcdFx0XHRjb250aW51ZTtcblx0XHRcdFx0fVxuXHRcdFx0XHRkZWxldGUgb3V0ZGF0ZWREZXBlbmRlbmNpZXNbcGFyZW50SWRdO1xuXHRcdFx0XHRvdXRkYXRlZE1vZHVsZXMucHVzaChwYXJlbnRJZCk7XG5cdFx0XHRcdHF1ZXVlLnB1c2goe1xuXHRcdFx0XHRcdGNoYWluOiBjaGFpbi5jb25jYXQoW3BhcmVudElkXSksXG5cdFx0XHRcdFx0aWQ6IHBhcmVudElkXG5cdFx0XHRcdH0pO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiB7XG5cdFx0XHR0eXBlOiBcImFjY2VwdGVkXCIsXG5cdFx0XHRtb2R1bGVJZDogdXBkYXRlTW9kdWxlSWQsXG5cdFx0XHRvdXRkYXRlZE1vZHVsZXM6IG91dGRhdGVkTW9kdWxlcyxcblx0XHRcdG91dGRhdGVkRGVwZW5kZW5jaWVzOiBvdXRkYXRlZERlcGVuZGVuY2llc1xuXHRcdH07XG5cdH1cblxuXHRmdW5jdGlvbiBhZGRBbGxUb1NldChhLCBiKSB7XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBiLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgaXRlbSA9IGJbaV07XG5cdFx0XHRpZiAoYS5pbmRleE9mKGl0ZW0pID09PSAtMSkgYS5wdXNoKGl0ZW0pO1xuXHRcdH1cblx0fVxuXG5cdC8vIGF0IGJlZ2luIGFsbCB1cGRhdGVzIG1vZHVsZXMgYXJlIG91dGRhdGVkXG5cdC8vIHRoZSBcIm91dGRhdGVkXCIgc3RhdHVzIGNhbiBwcm9wYWdhdGUgdG8gcGFyZW50cyBpZiB0aGV5IGRvbid0IGFjY2VwdCB0aGUgY2hpbGRyZW5cblx0dmFyIG91dGRhdGVkRGVwZW5kZW5jaWVzID0ge307XG5cdHZhciBvdXRkYXRlZE1vZHVsZXMgPSBbXTtcblx0dmFyIGFwcGxpZWRVcGRhdGUgPSB7fTtcblxuXHR2YXIgd2FyblVuZXhwZWN0ZWRSZXF1aXJlID0gZnVuY3Rpb24gd2FyblVuZXhwZWN0ZWRSZXF1aXJlKG1vZHVsZSkge1xuXHRcdGNvbnNvbGUud2Fybihcblx0XHRcdFwiW0hNUl0gdW5leHBlY3RlZCByZXF1aXJlKFwiICsgbW9kdWxlLmlkICsgXCIpIHRvIGRpc3Bvc2VkIG1vZHVsZVwiXG5cdFx0KTtcblx0fTtcblxuXHRmb3IgKHZhciBtb2R1bGVJZCBpbiBjdXJyZW50VXBkYXRlKSB7XG5cdFx0aWYgKF9fd2VicGFja19yZXF1aXJlX18ubyhjdXJyZW50VXBkYXRlLCBtb2R1bGVJZCkpIHtcblx0XHRcdHZhciBuZXdNb2R1bGVGYWN0b3J5ID0gY3VycmVudFVwZGF0ZVttb2R1bGVJZF07XG5cdFx0XHQvKiogQHR5cGUge1RPRE99ICovXG5cdFx0XHR2YXIgcmVzdWx0O1xuXHRcdFx0aWYgKG5ld01vZHVsZUZhY3RvcnkpIHtcblx0XHRcdFx0cmVzdWx0ID0gZ2V0QWZmZWN0ZWRNb2R1bGVFZmZlY3RzKG1vZHVsZUlkKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHJlc3VsdCA9IHtcblx0XHRcdFx0XHR0eXBlOiBcImRpc3Bvc2VkXCIsXG5cdFx0XHRcdFx0bW9kdWxlSWQ6IG1vZHVsZUlkXG5cdFx0XHRcdH07XG5cdFx0XHR9XG5cdFx0XHQvKiogQHR5cGUge0Vycm9yfGZhbHNlfSAqL1xuXHRcdFx0dmFyIGFib3J0RXJyb3IgPSBmYWxzZTtcblx0XHRcdHZhciBkb0FwcGx5ID0gZmFsc2U7XG5cdFx0XHR2YXIgZG9EaXNwb3NlID0gZmFsc2U7XG5cdFx0XHR2YXIgY2hhaW5JbmZvID0gXCJcIjtcblx0XHRcdGlmIChyZXN1bHQuY2hhaW4pIHtcblx0XHRcdFx0Y2hhaW5JbmZvID0gXCJcXG5VcGRhdGUgcHJvcGFnYXRpb246IFwiICsgcmVzdWx0LmNoYWluLmpvaW4oXCIgLT4gXCIpO1xuXHRcdFx0fVxuXHRcdFx0c3dpdGNoIChyZXN1bHQudHlwZSkge1xuXHRcdFx0XHRjYXNlIFwic2VsZi1kZWNsaW5lZFwiOlxuXHRcdFx0XHRcdGlmIChvcHRpb25zLm9uRGVjbGluZWQpIG9wdGlvbnMub25EZWNsaW5lZChyZXN1bHQpO1xuXHRcdFx0XHRcdGlmICghb3B0aW9ucy5pZ25vcmVEZWNsaW5lZClcblx0XHRcdFx0XHRcdGFib3J0RXJyb3IgPSBuZXcgRXJyb3IoXG5cdFx0XHRcdFx0XHRcdFwiQWJvcnRlZCBiZWNhdXNlIG9mIHNlbGYgZGVjbGluZTogXCIgK1xuXHRcdFx0XHRcdFx0XHRcdHJlc3VsdC5tb2R1bGVJZCArXG5cdFx0XHRcdFx0XHRcdFx0Y2hhaW5JbmZvXG5cdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlIFwiZGVjbGluZWRcIjpcblx0XHRcdFx0XHRpZiAob3B0aW9ucy5vbkRlY2xpbmVkKSBvcHRpb25zLm9uRGVjbGluZWQocmVzdWx0KTtcblx0XHRcdFx0XHRpZiAoIW9wdGlvbnMuaWdub3JlRGVjbGluZWQpXG5cdFx0XHRcdFx0XHRhYm9ydEVycm9yID0gbmV3IEVycm9yKFxuXHRcdFx0XHRcdFx0XHRcIkFib3J0ZWQgYmVjYXVzZSBvZiBkZWNsaW5lZCBkZXBlbmRlbmN5OiBcIiArXG5cdFx0XHRcdFx0XHRcdFx0cmVzdWx0Lm1vZHVsZUlkICtcblx0XHRcdFx0XHRcdFx0XHRcIiBpbiBcIiArXG5cdFx0XHRcdFx0XHRcdFx0cmVzdWx0LnBhcmVudElkICtcblx0XHRcdFx0XHRcdFx0XHRjaGFpbkluZm9cblx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgXCJ1bmFjY2VwdGVkXCI6XG5cdFx0XHRcdFx0aWYgKG9wdGlvbnMub25VbmFjY2VwdGVkKSBvcHRpb25zLm9uVW5hY2NlcHRlZChyZXN1bHQpO1xuXHRcdFx0XHRcdGlmICghb3B0aW9ucy5pZ25vcmVVbmFjY2VwdGVkKVxuXHRcdFx0XHRcdFx0YWJvcnRFcnJvciA9IG5ldyBFcnJvcihcblx0XHRcdFx0XHRcdFx0XCJBYm9ydGVkIGJlY2F1c2UgXCIgKyBtb2R1bGVJZCArIFwiIGlzIG5vdCBhY2NlcHRlZFwiICsgY2hhaW5JbmZvXG5cdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlIFwiYWNjZXB0ZWRcIjpcblx0XHRcdFx0XHRpZiAob3B0aW9ucy5vbkFjY2VwdGVkKSBvcHRpb25zLm9uQWNjZXB0ZWQocmVzdWx0KTtcblx0XHRcdFx0XHRkb0FwcGx5ID0gdHJ1ZTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSBcImRpc3Bvc2VkXCI6XG5cdFx0XHRcdFx0aWYgKG9wdGlvbnMub25EaXNwb3NlZCkgb3B0aW9ucy5vbkRpc3Bvc2VkKHJlc3VsdCk7XG5cdFx0XHRcdFx0ZG9EaXNwb3NlID0gdHJ1ZTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0XHR0aHJvdyBuZXcgRXJyb3IoXCJVbmV4Y2VwdGlvbiB0eXBlIFwiICsgcmVzdWx0LnR5cGUpO1xuXHRcdFx0fVxuXHRcdFx0aWYgKGFib3J0RXJyb3IpIHtcblx0XHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0XHRlcnJvcjogYWJvcnRFcnJvclxuXHRcdFx0XHR9O1xuXHRcdFx0fVxuXHRcdFx0aWYgKGRvQXBwbHkpIHtcblx0XHRcdFx0YXBwbGllZFVwZGF0ZVttb2R1bGVJZF0gPSBuZXdNb2R1bGVGYWN0b3J5O1xuXHRcdFx0XHRhZGRBbGxUb1NldChvdXRkYXRlZE1vZHVsZXMsIHJlc3VsdC5vdXRkYXRlZE1vZHVsZXMpO1xuXHRcdFx0XHRmb3IgKG1vZHVsZUlkIGluIHJlc3VsdC5vdXRkYXRlZERlcGVuZGVuY2llcykge1xuXHRcdFx0XHRcdGlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLm8ocmVzdWx0Lm91dGRhdGVkRGVwZW5kZW5jaWVzLCBtb2R1bGVJZCkpIHtcblx0XHRcdFx0XHRcdGlmICghb3V0ZGF0ZWREZXBlbmRlbmNpZXNbbW9kdWxlSWRdKVxuXHRcdFx0XHRcdFx0XHRvdXRkYXRlZERlcGVuZGVuY2llc1ttb2R1bGVJZF0gPSBbXTtcblx0XHRcdFx0XHRcdGFkZEFsbFRvU2V0KFxuXHRcdFx0XHRcdFx0XHRvdXRkYXRlZERlcGVuZGVuY2llc1ttb2R1bGVJZF0sXG5cdFx0XHRcdFx0XHRcdHJlc3VsdC5vdXRkYXRlZERlcGVuZGVuY2llc1ttb2R1bGVJZF1cblx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRpZiAoZG9EaXNwb3NlKSB7XG5cdFx0XHRcdGFkZEFsbFRvU2V0KG91dGRhdGVkTW9kdWxlcywgW3Jlc3VsdC5tb2R1bGVJZF0pO1xuXHRcdFx0XHRhcHBsaWVkVXBkYXRlW21vZHVsZUlkXSA9IHdhcm5VbmV4cGVjdGVkUmVxdWlyZTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblx0Y3VycmVudFVwZGF0ZSA9IHVuZGVmaW5lZDtcblxuXHQvLyBTdG9yZSBzZWxmIGFjY2VwdGVkIG91dGRhdGVkIG1vZHVsZXMgdG8gcmVxdWlyZSB0aGVtIGxhdGVyIGJ5IHRoZSBtb2R1bGUgc3lzdGVtXG5cdHZhciBvdXRkYXRlZFNlbGZBY2NlcHRlZE1vZHVsZXMgPSBbXTtcblx0Zm9yICh2YXIgaiA9IDA7IGogPCBvdXRkYXRlZE1vZHVsZXMubGVuZ3RoOyBqKyspIHtcblx0XHR2YXIgb3V0ZGF0ZWRNb2R1bGVJZCA9IG91dGRhdGVkTW9kdWxlc1tqXTtcblx0XHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX3JlcXVpcmVfXy5jW291dGRhdGVkTW9kdWxlSWRdO1xuXHRcdGlmIChcblx0XHRcdG1vZHVsZSAmJlxuXHRcdFx0KG1vZHVsZS5ob3QuX3NlbGZBY2NlcHRlZCB8fCBtb2R1bGUuaG90Ll9tYWluKSAmJlxuXHRcdFx0Ly8gcmVtb3ZlZCBzZWxmLWFjY2VwdGVkIG1vZHVsZXMgc2hvdWxkIG5vdCBiZSByZXF1aXJlZFxuXHRcdFx0YXBwbGllZFVwZGF0ZVtvdXRkYXRlZE1vZHVsZUlkXSAhPT0gd2FyblVuZXhwZWN0ZWRSZXF1aXJlICYmXG5cdFx0XHQvLyB3aGVuIGNhbGxlZCBpbnZhbGlkYXRlIHNlbGYtYWNjZXB0aW5nIGlzIG5vdCBwb3NzaWJsZVxuXHRcdFx0IW1vZHVsZS5ob3QuX3NlbGZJbnZhbGlkYXRlZFxuXHRcdCkge1xuXHRcdFx0b3V0ZGF0ZWRTZWxmQWNjZXB0ZWRNb2R1bGVzLnB1c2goe1xuXHRcdFx0XHRtb2R1bGU6IG91dGRhdGVkTW9kdWxlSWQsXG5cdFx0XHRcdHJlcXVpcmU6IG1vZHVsZS5ob3QuX3JlcXVpcmVTZWxmLFxuXHRcdFx0XHRlcnJvckhhbmRsZXI6IG1vZHVsZS5ob3QuX3NlbGZBY2NlcHRlZFxuXHRcdFx0fSk7XG5cdFx0fVxuXHR9XG5cblx0dmFyIG1vZHVsZU91dGRhdGVkRGVwZW5kZW5jaWVzO1xuXG5cdHJldHVybiB7XG5cdFx0ZGlzcG9zZTogZnVuY3Rpb24gKCkge1xuXHRcdFx0Y3VycmVudFVwZGF0ZVJlbW92ZWRDaHVua3MuZm9yRWFjaChmdW5jdGlvbiAoY2h1bmtJZCkge1xuXHRcdFx0XHRkZWxldGUgaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdO1xuXHRcdFx0fSk7XG5cdFx0XHRjdXJyZW50VXBkYXRlUmVtb3ZlZENodW5rcyA9IHVuZGVmaW5lZDtcblxuXHRcdFx0dmFyIGlkeDtcblx0XHRcdHZhciBxdWV1ZSA9IG91dGRhdGVkTW9kdWxlcy5zbGljZSgpO1xuXHRcdFx0d2hpbGUgKHF1ZXVlLmxlbmd0aCA+IDApIHtcblx0XHRcdFx0dmFyIG1vZHVsZUlkID0gcXVldWUucG9wKCk7XG5cdFx0XHRcdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmNbbW9kdWxlSWRdO1xuXHRcdFx0XHRpZiAoIW1vZHVsZSkgY29udGludWU7XG5cblx0XHRcdFx0dmFyIGRhdGEgPSB7fTtcblxuXHRcdFx0XHQvLyBDYWxsIGRpc3Bvc2UgaGFuZGxlcnNcblx0XHRcdFx0dmFyIGRpc3Bvc2VIYW5kbGVycyA9IG1vZHVsZS5ob3QuX2Rpc3Bvc2VIYW5kbGVycztcblx0XHRcdFx0Zm9yIChqID0gMDsgaiA8IGRpc3Bvc2VIYW5kbGVycy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRcdGRpc3Bvc2VIYW5kbGVyc1tqXS5jYWxsKG51bGwsIGRhdGEpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdF9fd2VicGFja19yZXF1aXJlX18uaG1yRFttb2R1bGVJZF0gPSBkYXRhO1xuXG5cdFx0XHRcdC8vIGRpc2FibGUgbW9kdWxlICh0aGlzIGRpc2FibGVzIHJlcXVpcmVzIGZyb20gdGhpcyBtb2R1bGUpXG5cdFx0XHRcdG1vZHVsZS5ob3QuYWN0aXZlID0gZmFsc2U7XG5cblx0XHRcdFx0Ly8gcmVtb3ZlIG1vZHVsZSBmcm9tIGNhY2hlXG5cdFx0XHRcdGRlbGV0ZSBfX3dlYnBhY2tfcmVxdWlyZV9fLmNbbW9kdWxlSWRdO1xuXG5cdFx0XHRcdC8vIHdoZW4gZGlzcG9zaW5nIHRoZXJlIGlzIG5vIG5lZWQgdG8gY2FsbCBkaXNwb3NlIGhhbmRsZXJcblx0XHRcdFx0ZGVsZXRlIG91dGRhdGVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXTtcblxuXHRcdFx0XHQvLyByZW1vdmUgXCJwYXJlbnRzXCIgcmVmZXJlbmNlcyBmcm9tIGFsbCBjaGlsZHJlblxuXHRcdFx0XHRmb3IgKGogPSAwOyBqIDwgbW9kdWxlLmNoaWxkcmVuLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdFx0dmFyIGNoaWxkID0gX193ZWJwYWNrX3JlcXVpcmVfXy5jW21vZHVsZS5jaGlsZHJlbltqXV07XG5cdFx0XHRcdFx0aWYgKCFjaGlsZCkgY29udGludWU7XG5cdFx0XHRcdFx0aWR4ID0gY2hpbGQucGFyZW50cy5pbmRleE9mKG1vZHVsZUlkKTtcblx0XHRcdFx0XHRpZiAoaWR4ID49IDApIHtcblx0XHRcdFx0XHRcdGNoaWxkLnBhcmVudHMuc3BsaWNlKGlkeCwgMSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIHJlbW92ZSBvdXRkYXRlZCBkZXBlbmRlbmN5IGZyb20gbW9kdWxlIGNoaWxkcmVuXG5cdFx0XHR2YXIgZGVwZW5kZW5jeTtcblx0XHRcdGZvciAodmFyIG91dGRhdGVkTW9kdWxlSWQgaW4gb3V0ZGF0ZWREZXBlbmRlbmNpZXMpIHtcblx0XHRcdFx0aWYgKF9fd2VicGFja19yZXF1aXJlX18ubyhvdXRkYXRlZERlcGVuZGVuY2llcywgb3V0ZGF0ZWRNb2R1bGVJZCkpIHtcblx0XHRcdFx0XHRtb2R1bGUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmNbb3V0ZGF0ZWRNb2R1bGVJZF07XG5cdFx0XHRcdFx0aWYgKG1vZHVsZSkge1xuXHRcdFx0XHRcdFx0bW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXMgPVxuXHRcdFx0XHRcdFx0XHRvdXRkYXRlZERlcGVuZGVuY2llc1tvdXRkYXRlZE1vZHVsZUlkXTtcblx0XHRcdFx0XHRcdGZvciAoaiA9IDA7IGogPCBtb2R1bGVPdXRkYXRlZERlcGVuZGVuY2llcy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRcdFx0XHRkZXBlbmRlbmN5ID0gbW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXNbal07XG5cdFx0XHRcdFx0XHRcdGlkeCA9IG1vZHVsZS5jaGlsZHJlbi5pbmRleE9mKGRlcGVuZGVuY3kpO1xuXHRcdFx0XHRcdFx0XHRpZiAoaWR4ID49IDApIG1vZHVsZS5jaGlsZHJlbi5zcGxpY2UoaWR4LCAxKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9LFxuXHRcdGFwcGx5OiBmdW5jdGlvbiAocmVwb3J0RXJyb3IpIHtcblx0XHRcdC8vIGluc2VydCBuZXcgY29kZVxuXHRcdFx0Zm9yICh2YXIgdXBkYXRlTW9kdWxlSWQgaW4gYXBwbGllZFVwZGF0ZSkge1xuXHRcdFx0XHRpZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGFwcGxpZWRVcGRhdGUsIHVwZGF0ZU1vZHVsZUlkKSkge1xuXHRcdFx0XHRcdF9fd2VicGFja19yZXF1aXJlX18ubVt1cGRhdGVNb2R1bGVJZF0gPSBhcHBsaWVkVXBkYXRlW3VwZGF0ZU1vZHVsZUlkXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBydW4gbmV3IHJ1bnRpbWUgbW9kdWxlc1xuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBjdXJyZW50VXBkYXRlUnVudGltZS5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRjdXJyZW50VXBkYXRlUnVudGltZVtpXShfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gY2FsbCBhY2NlcHQgaGFuZGxlcnNcblx0XHRcdGZvciAodmFyIG91dGRhdGVkTW9kdWxlSWQgaW4gb3V0ZGF0ZWREZXBlbmRlbmNpZXMpIHtcblx0XHRcdFx0aWYgKF9fd2VicGFja19yZXF1aXJlX18ubyhvdXRkYXRlZERlcGVuZGVuY2llcywgb3V0ZGF0ZWRNb2R1bGVJZCkpIHtcblx0XHRcdFx0XHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX3JlcXVpcmVfXy5jW291dGRhdGVkTW9kdWxlSWRdO1xuXHRcdFx0XHRcdGlmIChtb2R1bGUpIHtcblx0XHRcdFx0XHRcdG1vZHVsZU91dGRhdGVkRGVwZW5kZW5jaWVzID1cblx0XHRcdFx0XHRcdFx0b3V0ZGF0ZWREZXBlbmRlbmNpZXNbb3V0ZGF0ZWRNb2R1bGVJZF07XG5cdFx0XHRcdFx0XHR2YXIgY2FsbGJhY2tzID0gW107XG5cdFx0XHRcdFx0XHR2YXIgZXJyb3JIYW5kbGVycyA9IFtdO1xuXHRcdFx0XHRcdFx0dmFyIGRlcGVuZGVuY2llc0ZvckNhbGxiYWNrcyA9IFtdO1xuXHRcdFx0XHRcdFx0Zm9yICh2YXIgaiA9IDA7IGogPCBtb2R1bGVPdXRkYXRlZERlcGVuZGVuY2llcy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRcdFx0XHR2YXIgZGVwZW5kZW5jeSA9IG1vZHVsZU91dGRhdGVkRGVwZW5kZW5jaWVzW2pdO1xuXHRcdFx0XHRcdFx0XHR2YXIgYWNjZXB0Q2FsbGJhY2sgPVxuXHRcdFx0XHRcdFx0XHRcdG1vZHVsZS5ob3QuX2FjY2VwdGVkRGVwZW5kZW5jaWVzW2RlcGVuZGVuY3ldO1xuXHRcdFx0XHRcdFx0XHR2YXIgZXJyb3JIYW5kbGVyID1cblx0XHRcdFx0XHRcdFx0XHRtb2R1bGUuaG90Ll9hY2NlcHRlZEVycm9ySGFuZGxlcnNbZGVwZW5kZW5jeV07XG5cdFx0XHRcdFx0XHRcdGlmIChhY2NlcHRDYWxsYmFjaykge1xuXHRcdFx0XHRcdFx0XHRcdGlmIChjYWxsYmFja3MuaW5kZXhPZihhY2NlcHRDYWxsYmFjaykgIT09IC0xKSBjb250aW51ZTtcblx0XHRcdFx0XHRcdFx0XHRjYWxsYmFja3MucHVzaChhY2NlcHRDYWxsYmFjayk7XG5cdFx0XHRcdFx0XHRcdFx0ZXJyb3JIYW5kbGVycy5wdXNoKGVycm9ySGFuZGxlcik7XG5cdFx0XHRcdFx0XHRcdFx0ZGVwZW5kZW5jaWVzRm9yQ2FsbGJhY2tzLnB1c2goZGVwZW5kZW5jeSk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGZvciAodmFyIGsgPSAwOyBrIDwgY2FsbGJhY2tzLmxlbmd0aDsgaysrKSB7XG5cdFx0XHRcdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0XHRcdFx0Y2FsbGJhY2tzW2tdLmNhbGwobnVsbCwgbW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXMpO1xuXHRcdFx0XHRcdFx0XHR9IGNhdGNoIChlcnIpIHtcblx0XHRcdFx0XHRcdFx0XHRpZiAodHlwZW9mIGVycm9ySGFuZGxlcnNba10gPT09IFwiZnVuY3Rpb25cIikge1xuXHRcdFx0XHRcdFx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0ZXJyb3JIYW5kbGVyc1trXShlcnIsIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRtb2R1bGVJZDogb3V0ZGF0ZWRNb2R1bGVJZCxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRkZXBlbmRlbmN5SWQ6IGRlcGVuZGVuY2llc0ZvckNhbGxiYWNrc1trXVxuXHRcdFx0XHRcdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdFx0XHRcdH0gY2F0Y2ggKGVycjIpIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0aWYgKG9wdGlvbnMub25FcnJvcmVkKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0b3B0aW9ucy5vbkVycm9yZWQoe1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0dHlwZTogXCJhY2NlcHQtZXJyb3ItaGFuZGxlci1lcnJvcmVkXCIsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRtb2R1bGVJZDogb3V0ZGF0ZWRNb2R1bGVJZCxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGRlcGVuZGVuY3lJZDogZGVwZW5kZW5jaWVzRm9yQ2FsbGJhY2tzW2tdLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0ZXJyb3I6IGVycjIsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRvcmlnaW5hbEVycm9yOiBlcnJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIW9wdGlvbnMuaWdub3JlRXJyb3JlZCkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHJlcG9ydEVycm9yKGVycjIpO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHJlcG9ydEVycm9yKGVycik7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdFx0aWYgKG9wdGlvbnMub25FcnJvcmVkKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdG9wdGlvbnMub25FcnJvcmVkKHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR0eXBlOiBcImFjY2VwdC1lcnJvcmVkXCIsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0bW9kdWxlSWQ6IG91dGRhdGVkTW9kdWxlSWQsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0ZGVwZW5kZW5jeUlkOiBkZXBlbmRlbmNpZXNGb3JDYWxsYmFja3Nba10sXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0ZXJyb3I6IGVyclxuXHRcdFx0XHRcdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHRcdGlmICghb3B0aW9ucy5pZ25vcmVFcnJvcmVkKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdHJlcG9ydEVycm9yKGVycik7XG5cdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIExvYWQgc2VsZiBhY2NlcHRlZCBtb2R1bGVzXG5cdFx0XHRmb3IgKHZhciBvID0gMDsgbyA8IG91dGRhdGVkU2VsZkFjY2VwdGVkTW9kdWxlcy5sZW5ndGg7IG8rKykge1xuXHRcdFx0XHR2YXIgaXRlbSA9IG91dGRhdGVkU2VsZkFjY2VwdGVkTW9kdWxlc1tvXTtcblx0XHRcdFx0dmFyIG1vZHVsZUlkID0gaXRlbS5tb2R1bGU7XG5cdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0aXRlbS5yZXF1aXJlKG1vZHVsZUlkKTtcblx0XHRcdFx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0XHRcdFx0aWYgKHR5cGVvZiBpdGVtLmVycm9ySGFuZGxlciA9PT0gXCJmdW5jdGlvblwiKSB7XG5cdFx0XHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdFx0XHRpdGVtLmVycm9ySGFuZGxlcihlcnIsIHtcblx0XHRcdFx0XHRcdFx0XHRtb2R1bGVJZDogbW9kdWxlSWQsXG5cdFx0XHRcdFx0XHRcdFx0bW9kdWxlOiBfX3dlYnBhY2tfcmVxdWlyZV9fLmNbbW9kdWxlSWRdXG5cdFx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdFx0fSBjYXRjaCAoZXJyMikge1xuXHRcdFx0XHRcdFx0XHRpZiAob3B0aW9ucy5vbkVycm9yZWQpIHtcblx0XHRcdFx0XHRcdFx0XHRvcHRpb25zLm9uRXJyb3JlZCh7XG5cdFx0XHRcdFx0XHRcdFx0XHR0eXBlOiBcInNlbGYtYWNjZXB0LWVycm9yLWhhbmRsZXItZXJyb3JlZFwiLFxuXHRcdFx0XHRcdFx0XHRcdFx0bW9kdWxlSWQ6IG1vZHVsZUlkLFxuXHRcdFx0XHRcdFx0XHRcdFx0ZXJyb3I6IGVycjIsXG5cdFx0XHRcdFx0XHRcdFx0XHRvcmlnaW5hbEVycm9yOiBlcnJcblx0XHRcdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRpZiAoIW9wdGlvbnMuaWdub3JlRXJyb3JlZCkge1xuXHRcdFx0XHRcdFx0XHRcdHJlcG9ydEVycm9yKGVycjIpO1xuXHRcdFx0XHRcdFx0XHRcdHJlcG9ydEVycm9yKGVycik7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0aWYgKG9wdGlvbnMub25FcnJvcmVkKSB7XG5cdFx0XHRcdFx0XHRcdG9wdGlvbnMub25FcnJvcmVkKHtcblx0XHRcdFx0XHRcdFx0XHR0eXBlOiBcInNlbGYtYWNjZXB0LWVycm9yZWRcIixcblx0XHRcdFx0XHRcdFx0XHRtb2R1bGVJZDogbW9kdWxlSWQsXG5cdFx0XHRcdFx0XHRcdFx0ZXJyb3I6IGVyclxuXHRcdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGlmICghb3B0aW9ucy5pZ25vcmVFcnJvcmVkKSB7XG5cdFx0XHRcdFx0XHRcdHJlcG9ydEVycm9yKGVycik7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBvdXRkYXRlZE1vZHVsZXM7XG5cdFx0fVxuXHR9O1xufVxuX193ZWJwYWNrX3JlcXVpcmVfXy5obXJJLmpzb25wID0gZnVuY3Rpb24gKG1vZHVsZUlkLCBhcHBseUhhbmRsZXJzKSB7XG5cdGlmICghY3VycmVudFVwZGF0ZSkge1xuXHRcdGN1cnJlbnRVcGRhdGUgPSB7fTtcblx0XHRjdXJyZW50VXBkYXRlUnVudGltZSA9IFtdO1xuXHRcdGN1cnJlbnRVcGRhdGVSZW1vdmVkQ2h1bmtzID0gW107XG5cdFx0YXBwbHlIYW5kbGVycy5wdXNoKGFwcGx5SGFuZGxlcik7XG5cdH1cblx0aWYgKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oY3VycmVudFVwZGF0ZSwgbW9kdWxlSWQpKSB7XG5cdFx0Y3VycmVudFVwZGF0ZVttb2R1bGVJZF0gPSBfX3dlYnBhY2tfcmVxdWlyZV9fLm1bbW9kdWxlSWRdO1xuXHR9XG59O1xuX193ZWJwYWNrX3JlcXVpcmVfXy5obXJDLmpzb25wID0gZnVuY3Rpb24gKFxuXHRjaHVua0lkcyxcblx0cmVtb3ZlZENodW5rcyxcblx0cmVtb3ZlZE1vZHVsZXMsXG5cdHByb21pc2VzLFxuXHRhcHBseUhhbmRsZXJzLFxuXHR1cGRhdGVkTW9kdWxlc0xpc3Rcbikge1xuXHRhcHBseUhhbmRsZXJzLnB1c2goYXBwbHlIYW5kbGVyKTtcblx0Y3VycmVudFVwZGF0ZUNodW5rcyA9IHt9O1xuXHRjdXJyZW50VXBkYXRlUmVtb3ZlZENodW5rcyA9IHJlbW92ZWRDaHVua3M7XG5cdGN1cnJlbnRVcGRhdGUgPSByZW1vdmVkTW9kdWxlcy5yZWR1Y2UoZnVuY3Rpb24gKG9iaiwga2V5KSB7XG5cdFx0b2JqW2tleV0gPSBmYWxzZTtcblx0XHRyZXR1cm4gb2JqO1xuXHR9LCB7fSk7XG5cdGN1cnJlbnRVcGRhdGVSdW50aW1lID0gW107XG5cdGNodW5rSWRzLmZvckVhY2goZnVuY3Rpb24gKGNodW5rSWQpIHtcblx0XHRpZiAoXG5cdFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8oaW5zdGFsbGVkQ2h1bmtzLCBjaHVua0lkKSAmJlxuXHRcdFx0aW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdICE9PSB1bmRlZmluZWRcblx0XHQpIHtcblx0XHRcdHByb21pc2VzLnB1c2gobG9hZFVwZGF0ZUNodW5rKGNodW5rSWQsIHVwZGF0ZWRNb2R1bGVzTGlzdCkpO1xuXHRcdFx0Y3VycmVudFVwZGF0ZUNodW5rc1tjaHVua0lkXSA9IHRydWU7XG5cdFx0fVxuXHR9KTtcblx0aWYgKF9fd2VicGFja19yZXF1aXJlX18uZikge1xuXHRcdF9fd2VicGFja19yZXF1aXJlX18uZi5qc29ucEhtciA9IGZ1bmN0aW9uIChjaHVua0lkLCBwcm9taXNlcykge1xuXHRcdFx0aWYgKFxuXHRcdFx0XHRjdXJyZW50VXBkYXRlQ2h1bmtzICYmXG5cdFx0XHRcdCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oY3VycmVudFVwZGF0ZUNodW5rcywgY2h1bmtJZCkgJiZcblx0XHRcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vKGluc3RhbGxlZENodW5rcywgY2h1bmtJZCkgJiZcblx0XHRcdFx0aW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdICE9PSB1bmRlZmluZWRcblx0XHRcdCkge1xuXHRcdFx0XHRwcm9taXNlcy5wdXNoKGxvYWRVcGRhdGVDaHVuayhjaHVua0lkKSk7XG5cdFx0XHRcdGN1cnJlbnRVcGRhdGVDaHVua3NbY2h1bmtJZF0gPSB0cnVlO1xuXHRcdFx0fVxuXHRcdH07XG5cdH1cbn07XG5cbl9fd2VicGFja19yZXF1aXJlX18uaG1yTSA9ICgpID0+IHtcblx0aWYgKHR5cGVvZiBmZXRjaCA9PT0gXCJ1bmRlZmluZWRcIikgdGhyb3cgbmV3IEVycm9yKFwiTm8gYnJvd3NlciBzdXBwb3J0OiBuZWVkIGZldGNoIEFQSVwiKTtcblx0cmV0dXJuIGZldGNoKF9fd2VicGFja19yZXF1aXJlX18ucCArIF9fd2VicGFja19yZXF1aXJlX18uaG1yRigpKS50aGVuKChyZXNwb25zZSkgPT4ge1xuXHRcdGlmKHJlc3BvbnNlLnN0YXR1cyA9PT0gNDA0KSByZXR1cm47IC8vIG5vIHVwZGF0ZSBhdmFpbGFibGVcblx0XHRpZighcmVzcG9uc2Uub2spIHRocm93IG5ldyBFcnJvcihcIkZhaWxlZCB0byBmZXRjaCB1cGRhdGUgbWFuaWZlc3QgXCIgKyByZXNwb25zZS5zdGF0dXNUZXh0KTtcblx0XHRyZXR1cm4gcmVzcG9uc2UuanNvbigpO1xuXHR9KTtcbn07XG5cbi8vIG5vIG9uIGNodW5rcyBsb2FkZWRcblxuLy8gbm8ganNvbnAgZnVuY3Rpb24iLCIvLyBtb2R1bGUgY2FjaGUgYXJlIHVzZWQgc28gZW50cnkgaW5saW5pbmcgaXMgZGlzYWJsZWRcbi8vIHN0YXJ0dXBcbi8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xudmFyIF9fd2VicGFja19leHBvcnRzX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDMwMTMpO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==